{
    "name": "gallery-paginator-view",
    "passed": 25,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 25,
    "duration": 1564,
    "type": "report",
    "Gallery Paginator-View : PaginatorModel basics": {
        "name": "Gallery Paginator-View : PaginatorModel basics",
        "passed": 4,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 4,
        "duration": 42,
        "type": "testcase",
        "should be a class": {
            "result": "pass",
            "message": "Test passed",
            "type": "test",
            "name": "should be a class",
            "duration": 2
        },
        "should instantiate as a Model": {
            "result": "pass",
            "message": "Test passed",
            "type": "test",
            "name": "should instantiate as a Model",
            "duration": 1
        },
        "listeners are set": {
            "result": "pass",
            "message": "Test passed",
            "type": "test",
            "name": "listeners are set",
            "duration": 1
        },
        "check ATTR defaults values": {
            "result": "pass",
            "message": "Test passed",
            "type": "test",
            "name": "check ATTR defaults values",
            "duration": 1
        }
    },
    "Gallery Paginator-View : PaginatorModel functional": {
        "name": "Gallery Paginator-View : PaginatorModel functional",
        "passed": 6,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 6,
        "duration": 79,
        "type": "testcase",
        "check setting ATTRS": {
            "result": "pass",
            "message": "Test passed",
            "type": "test",
            "name": "check setting ATTRS",
            "duration": 1
        },
        "Check page changes, last page, indices": {
            "result": "pass",
            "message": "Test passed",
            "type": "test",
            "name": "Check page changes, last page, indices",
            "duration": 2
        },
        "Check improper page changes, -1 and outside max": {
            "result": "pass",
            "message": "Test passed",
            "type": "test",
            "name": "Check improper page changes, -1 and outside max",
            "duration": 1
        },
        "Change totalItems, check totalPages and page change": {
            "result": "pass",
            "message": "Test passed",
            "type": "test",
            "name": "Change totalItems, check totalPages and page change",
            "duration": 2
        },
        "Change totalItems to zero, page and totalpages should be 1": {
            "result": "pass",
            "message": "Test passed",
            "type": "test",
            "name": "Change totalItems to zero, page and totalpages should be 1",
            "duration": 1
        },
        "Check destroy and destruction": {
            "result": "pass",
            "message": "Test passed",
            "type": "test",
            "name": "Check destroy and destruction",
            "duration": 2
        }
    },
    "Gallery Paginator-View : PaginatorView basics": {
        "name": "Gallery Paginator-View : PaginatorView basics",
        "passed": 4,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 4,
        "duration": 56,
        "type": "testcase",
        "should be a class": {
            "result": "pass",
            "message": "Test passed",
            "type": "test",
            "name": "should be a class",
            "duration": 3
        },
        "should instantiate as a View": {
            "result": "pass",
            "message": "Test passed",
            "type": "test",
            "name": "should instantiate as a View",
            "duration": 1
        },
        "listeners are set": {
            "result": "pass",
            "message": "Test passed",
            "type": "test",
            "name": "listeners are set",
            "duration": 1
        },
        "check ATTR defaults values": {
            "result": "pass",
            "message": "Test passed",
            "type": "test",
            "name": "check ATTR defaults values",
            "duration": 1
        }
    },
    "Gallery Paginator-View : PaginatorView functional": {
        "name": "Gallery Paginator-View : PaginatorView functional",
        "passed": 6,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 6,
        "duration": 131,
        "type": "testcase",
        "check initial setup / display": {
            "result": "pass",
            "message": "Test passed",
            "type": "test",
            "name": "check initial setup / display",
            "duration": 7
        },
        "check moving pages, F/P and N/LAST functionality": {
            "result": "pass",
            "message": "Test passed",
            "type": "test",
            "name": "check moving pages, F/P and N/LAST functionality",
            "duration": 17
        },
        "check moving pages via a \"click\" to page 7": {
            "result": "pass",
            "message": "Test passed",
            "type": "test",
            "name": "check moving pages via a \"click\" to page 7",
            "duration": 13
        },
        "check for zero items, or negative page requests": {
            "result": "pass",
            "message": "Test passed",
            "type": "test",
            "name": "check for zero items, or negative page requests",
            "duration": 7
        },
        "check for paginator-bar function, itemsPerPage change, inputPage change": {
            "result": "pass",
            "message": "Test passed",
            "type": "test",
            "name": "check for paginator-bar function, itemsPerPage change, inputPage change",
            "duration": 1
        },
        "Check destroy and destruction": {
            "result": "pass",
            "message": "Test passed",
            "type": "test",
            "name": "Check destroy and destruction",
            "duration": 13
        }
    },
    "Gallery Paginator-View : PaginatorView functional circular": {
        "name": "Gallery Paginator-View : PaginatorView functional circular",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 112,
        "type": "testcase",
        "check circular : backward from page 2, click prev twice should be page 21": {
            "result": "pass",
            "message": "Test passed",
            "type": "test",
            "name": "check circular : backward from page 2, click prev twice should be page 21",
            "duration": 79
        }
    },
    "Gallery Paginator-View : PaginatorView bar example functional": {
        "name": "Gallery Paginator-View : PaginatorView bar example functional",
        "passed": 3,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 3,
        "duration": 771,
        "type": "testcase",
        "check a paginator bar example - startup and IMG clicks": {
            "result": "pass",
            "message": "Test passed",
            "type": "test",
            "name": "check a paginator bar example - startup and IMG clicks",
            "duration": 24
        },
        "paginator bar example - page changes via INPUT box": {
            "result": "pass",
            "message": "Test passed",
            "type": "test",
            "name": "paginator bar example - page changes via INPUT box",
            "duration": 18
        },
        "paginator bar example - changes rows per page SELECT": {
            "result": "pass",
            "message": "Test passed",
            "type": "test",
            "name": "paginator bar example - changes rows per page SELECT",
            "duration": 655
        }
    },
    "Gallery Paginator-View : PaginatorView basic C example functional": {
        "name": "Gallery Paginator-View : PaginatorView basic C example functional",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 366,
        "type": "testcase",
        "check a basic C example": {
            "result": "pass",
            "message": "Test passed",
            "type": "test",
            "name": "check a basic C example",
            "duration": 335
        }
    },
    "timestamp": "Wed 12 Dec 2012 03:12:55 PM CST",
    "coverage": {
        "build/cdn_gallery-2012.12.12-21-11/": {
            "path": "build/cdn_gallery-2012.12.12-21-11/",
            "s": {
                "1": 1,
                "2": 1,
                "3": 21,
                "4": 21,
                "5": 21,
                "6": 21,
                "7": 21,
                "8": 21,
                "9": 1,
                "10": 3,
                "11": 1,
                "12": 71,
                "13": 71,
                "14": 5,
                "15": 71,
                "16": 4,
                "17": 71,
                "18": 62,
                "19": 9,
                "20": 71,
                "21": 40,
                "22": 40,
                "23": 29,
                "24": 29,
                "25": 8,
                "26": 29,
                "27": 4,
                "28": 29,
                "29": 29,
                "30": 7,
                "31": 29,
                "32": 11,
                "33": 162,
                "34": 81,
                "35": 81,
                "36": 73,
                "37": 8,
                "38": 433,
                "39": 1,
                "40": 608,
                "41": 608,
                "42": 607,
                "43": 607,
                "44": 742,
                "45": 607,
                "46": 1,
                "47": 15,
                "48": 15,
                "49": 15,
                "50": 15,
                "51": 15,
                "52": 15,
                "53": 15,
                "54": 15,
                "55": 15,
                "56": 15,
                "57": 15,
                "58": 0,
                "59": 15,
                "60": 15,
                "61": 7,
                "62": 8,
                "63": 8,
                "64": 8,
                "65": 8,
                "66": 15,
                "67": 15,
                "68": 15,
                "69": 15,
                "70": 15,
                "71": 11,
                "72": 11,
                "73": 11,
                "74": 11,
                "75": 15,
                "76": 15,
                "77": 15,
                "78": 15,
                "79": 15,
                "80": 15,
                "81": 15,
                "82": 1,
                "83": 9,
                "84": 0,
                "85": 0,
                "86": 9,
                "87": 1,
                "88": 1,
                "89": 16,
                "90": 16,
                "91": 0,
                "92": 16,
                "93": 3,
                "94": 3,
                "95": 16,
                "96": 5,
                "97": 83,
                "98": 83,
                "99": 5,
                "100": 83,
                "101": 83,
                "102": 83,
                "103": 16,
                "104": 16,
                "105": 16,
                "106": 16,
                "107": 16,
                "108": 16,
                "109": 16,
                "110": 16,
                "111": 16,
                "112": 16,
                "113": 0,
                "114": 63,
                "115": 63,
                "116": 63,
                "117": 63,
                "118": 49,
                "119": 63,
                "120": 49,
                "121": 49,
                "122": 41,
                "123": 63,
                "124": 14,
                "125": 63,
                "126": 0,
                "127": 63,
                "128": 4,
                "129": 63,
                "130": 4,
                "131": 59,
                "132": 24,
                "133": 24,
                "134": 35,
                "135": 11,
                "136": 11,
                "137": 24,
                "138": 63,
                "139": 63,
                "140": 57,
                "141": 6,
                "142": 6,
                "143": 6,
                "144": 6,
                "145": 120,
                "146": 0,
                "147": 120,
                "148": 106,
                "149": 14,
                "150": 6,
                "151": 2,
                "152": 6,
                "153": 5,
                "154": 6,
                "155": 6,
                "156": 6,
                "157": 102,
                "158": 102,
                "159": 102,
                "160": 102,
                "161": 256,
                "162": 256,
                "163": 255,
                "164": 166,
                "165": 89,
                "166": 15,
                "167": 4,
                "168": 11,
                "169": 11,
                "170": 47,
                "171": 47,
                "172": 47,
                "173": 2,
                "174": 2,
                "175": 5,
                "176": 16,
                "177": 16,
                "178": 10,
                "179": 10,
                "180": 10,
                "181": 10,
                "182": 44,
                "183": 16,
                "184": 10,
                "185": 10,
                "186": 10,
                "187": 44,
                "188": 10,
                "189": 16,
                "190": 0,
                "191": 6,
                "192": 6,
                "193": 1,
                "194": 1,
                "195": 6,
                "196": 49,
                "197": 49,
                "198": 49,
                "199": 4,
                "200": 45,
                "201": 45,
                "202": 0,
                "203": 45,
                "204": 2,
                "205": 2,
                "206": 2,
                "207": 2,
                "208": 6,
                "209": 6,
                "210": 8,
                "211": 8,
                "212": 27,
                "213": 45,
                "214": 0,
                "215": 0,
                "216": 0,
                "217": 0,
                "218": 0,
                "219": 11,
                "220": 14
            },
            "b": {
                "1": [
                    5,
                    66
                ],
                "2": [
                    71,
                    70,
                    66
                ],
                "3": [
                    4,
                    67
                ],
                "4": [
                    71,
                    66,
                    66
                ],
                "5": [
                    62,
                    9
                ],
                "6": [
                    29,
                    11
                ],
                "7": [
                    40,
                    29
                ],
                "8": [
                    8,
                    21
                ],
                "9": [
                    4,
                    25
                ],
                "10": [
                    7,
                    22
                ],
                "11": [
                    146,
                    16
                ],
                "12": [
                    73,
                    8
                ],
                "13": [
                    11,
                    62
                ],
                "14": [
                    607,
                    1
                ],
                "15": [
                    608,
                    608
                ],
                "16": [
                    0,
                    15
                ],
                "17": [
                    15,
                    0
                ],
                "18": [
                    7,
                    8
                ],
                "19": [
                    15,
                    15
                ],
                "20": [
                    8,
                    0
                ],
                "21": [
                    8,
                    8
                ],
                "22": [
                    8,
                    0
                ],
                "23": [
                    1,
                    7
                ],
                "24": [
                    11,
                    4
                ],
                "25": [
                    0,
                    9
                ],
                "26": [
                    16,
                    0
                ],
                "27": [
                    0,
                    16
                ],
                "28": [
                    16,
                    16,
                    16
                ],
                "29": [
                    3,
                    13
                ],
                "30": [
                    5,
                    11
                ],
                "31": [
                    5,
                    78
                ],
                "32": [
                    5,
                    78
                ],
                "33": [
                    83,
                    0
                ],
                "34": [
                    16,
                    11
                ],
                "35": [
                    16,
                    0
                ],
                "36": [
                    16,
                    0
                ],
                "37": [
                    16,
                    0
                ],
                "38": [
                    16,
                    0
                ],
                "39": [
                    63,
                    0
                ],
                "40": [
                    63,
                    63
                ],
                "41": [
                    49,
                    14
                ],
                "42": [
                    63,
                    63
                ],
                "43": [
                    49,
                    14
                ],
                "44": [
                    49,
                    14
                ],
                "45": [
                    63,
                    52
                ],
                "46": [
                    41,
                    8
                ],
                "47": [
                    49,
                    49
                ],
                "48": [
                    41,
                    8
                ],
                "49": [
                    14,
                    49
                ],
                "50": [
                    0,
                    63
                ],
                "51": [
                    4,
                    59
                ],
                "52": [
                    4,
                    59
                ],
                "53": [
                    24,
                    35
                ],
                "54": [
                    59,
                    27
                ],
                "55": [
                    11,
                    24
                ],
                "56": [
                    35,
                    13
                ],
                "57": [
                    57,
                    6
                ],
                "58": [
                    63,
                    6,
                    6,
                    6
                ],
                "59": [
                    0,
                    120
                ],
                "60": [
                    120,
                    6,
                    120,
                    6
                ],
                "61": [
                    106,
                    14
                ],
                "62": [
                    120,
                    100
                ],
                "63": [
                    2,
                    4
                ],
                "64": [
                    5,
                    1
                ],
                "65": [
                    3,
                    3
                ],
                "66": [
                    1,
                    5
                ],
                "67": [
                    0,
                    102
                ],
                "68": [
                    59,
                    43
                ],
                "69": [
                    255,
                    1
                ],
                "70": [
                    166,
                    89
                ],
                "71": [
                    4,
                    11
                ],
                "72": [
                    47,
                    0
                ],
                "73": [
                    2,
                    0
                ],
                "74": [
                    10,
                    6
                ],
                "75": [
                    16,
                    16
                ],
                "76": [
                    10,
                    0
                ],
                "77": [
                    10,
                    6
                ],
                "78": [
                    0,
                    10
                ],
                "79": [
                    10,
                    10
                ],
                "80": [
                    10,
                    34
                ],
                "81": [
                    44,
                    34,
                    7
                ],
                "82": [
                    0,
                    16
                ],
                "83": [
                    6,
                    0
                ],
                "84": [
                    1,
                    5
                ],
                "85": [
                    6,
                    6
                ],
                "86": [
                    4,
                    45
                ],
                "87": [
                    49,
                    45
                ],
                "88": [
                    45,
                    0
                ],
                "89": [
                    0,
                    45
                ],
                "90": [
                    45,
                    45
                ],
                "91": [
                    2,
                    2,
                    6,
                    8,
                    27
                ],
                "92": [
                    0,
                    6
                ],
                "93": [
                    6,
                    0
                ],
                "94": [
                    0,
                    8
                ],
                "95": [
                    6,
                    2
                ],
                "96": [
                    0,
                    0
                ],
                "97": [
                    0,
                    0
                ],
                "98": [
                    0,
                    0
                ]
            },
            "f": {
                "1": 1,
                "2": 21,
                "3": 1,
                "4": 3,
                "5": 71,
                "6": 40,
                "7": 162,
                "8": 81,
                "9": 433,
                "10": 608,
                "11": 15,
                "12": 15,
                "13": 1,
                "14": 9,
                "15": 0,
                "16": 16,
                "17": 0,
                "18": 63,
                "19": 120,
                "20": 6,
                "21": 102,
                "22": 256,
                "23": 15,
                "24": 47,
                "25": 2,
                "26": 5,
                "27": 16,
                "28": 44,
                "29": 44,
                "30": 0,
                "31": 6,
                "32": 49,
                "33": 0,
                "34": 11,
                "35": 14
            },
            "fnMap": {
                "1": {
                    "name": "(anonymous_1)",
                    "line": 1,
                    "loc": {
                        "start": {
                            "line": 1,
                            "column": 34
                        },
                        "end": {
                            "line": 1,
                            "column": 53
                        }
                    }
                },
                "2": {
                    "name": "(anonymous_2)",
                    "line": 62,
                    "loc": {
                        "start": {
                            "line": 62,
                            "column": 17
                        },
                        "end": {
                            "line": 62,
                            "column": 27
                        }
                    }
                },
                "3": {
                    "name": "(anonymous_3)",
                    "line": 81,
                    "loc": {
                        "start": {
                            "line": 81,
                            "column": 16
                        },
                        "end": {
                            "line": 81,
                            "column": 28
                        }
                    }
                },
                "4": {
                    "name": "(anonymous_4)",
                    "line": 82,
                    "loc": {
                        "start": {
                            "line": 82,
                            "column": 34
                        },
                        "end": {
                            "line": 82,
                            "column": 48
                        }
                    }
                },
                "5": {
                    "name": "(anonymous_5)",
                    "line": 97,
                    "loc": {
                        "start": {
                            "line": 97,
                            "column": 17
                        },
                        "end": {
                            "line": 97,
                            "column": 29
                        }
                    }
                },
                "6": {
                    "name": "(anonymous_6)",
                    "line": 131,
                    "loc": {
                        "start": {
                            "line": 131,
                            "column": 23
                        },
                        "end": {
                            "line": 131,
                            "column": 33
                        }
                    }
                },
                "7": {
                    "name": "(anonymous_7)",
                    "line": 171,
                    "loc": {
                        "start": {
                            "line": 171,
                            "column": 24
                        },
                        "end": {
                            "line": 171,
                            "column": 35
                        }
                    }
                },
                "8": {
                    "name": "(anonymous_8)",
                    "line": 185,
                    "loc": {
                        "start": {
                            "line": 185,
                            "column": 22
                        },
                        "end": {
                            "line": 185,
                            "column": 32
                        }
                    }
                },
                "9": {
                    "name": "(anonymous_9)",
                    "line": 290,
                    "loc": {
                        "start": {
                            "line": 290,
                            "column": 24
                        },
                        "end": {
                            "line": 290,
                            "column": 34
                        }
                    }
                },
                "10": {
                    "name": "(anonymous_10)",
                    "line": 571,
                    "loc": {
                        "start": {
                            "line": 571,
                            "column": 18
                        },
                        "end": {
                            "line": 571,
                            "column": 29
                        }
                    }
                },
                "11": {
                    "name": "(anonymous_11)",
                    "line": 590,
                    "loc": {
                        "start": {
                            "line": 590,
                            "column": 17
                        },
                        "end": {
                            "line": 590,
                            "column": 27
                        }
                    }
                },
                "12": {
                    "name": "(anonymous_12)",
                    "line": 650,
                    "loc": {
                        "start": {
                            "line": 650,
                            "column": 13
                        },
                        "end": {
                            "line": 650,
                            "column": 23
                        }
                    }
                },
                "13": {
                    "name": "(anonymous_13)",
                    "line": 687,
                    "loc": {
                        "start": {
                            "line": 687,
                            "column": 16
                        },
                        "end": {
                            "line": 687,
                            "column": 28
                        }
                    }
                },
                "14": {
                    "name": "(anonymous_14)",
                    "line": 688,
                    "loc": {
                        "start": {
                            "line": 688,
                            "column": 34
                        },
                        "end": {
                            "line": 688,
                            "column": 48
                        }
                    }
                },
                "15": {
                    "name": "(anonymous_15)",
                    "line": 690,
                    "loc": {
                        "start": {
                            "line": 690,
                            "column": 34
                        },
                        "end": {
                            "line": 690,
                            "column": 46
                        }
                    }
                },
                "16": {
                    "name": "(anonymous_16)",
                    "line": 747,
                    "loc": {
                        "start": {
                            "line": 747,
                            "column": 12
                        },
                        "end": {
                            "line": 747,
                            "column": 23
                        }
                    }
                },
                "17": {
                    "name": "(anonymous_17)",
                    "line": 834,
                    "loc": {
                        "start": {
                            "line": 834,
                            "column": 13
                        },
                        "end": {
                            "line": 834,
                            "column": 23
                        }
                    }
                },
                "18": {
                    "name": "(anonymous_18)",
                    "line": 851,
                    "loc": {
                        "start": {
                            "line": 851,
                            "column": 24
                        },
                        "end": {
                            "line": 851,
                            "column": 40
                        }
                    }
                },
                "19": {
                    "name": "(anonymous_19)",
                    "line": 941,
                    "loc": {
                        "start": {
                            "line": 941,
                            "column": 21
                        },
                        "end": {
                            "line": 941,
                            "column": 41
                        }
                    }
                },
                "20": {
                    "name": "(anonymous_20)",
                    "line": 980,
                    "loc": {
                        "start": {
                            "line": 980,
                            "column": 17
                        },
                        "end": {
                            "line": 980,
                            "column": 41
                        }
                    }
                },
                "21": {
                    "name": "(anonymous_21)",
                    "line": 1003,
                    "loc": {
                        "start": {
                            "line": 1003,
                            "column": 27
                        },
                        "end": {
                            "line": 1003,
                            "column": 53
                        }
                    }
                },
                "22": {
                    "name": "(anonymous_22)",
                    "line": 1009,
                    "loc": {
                        "start": {
                            "line": 1009,
                            "column": 29
                        },
                        "end": {
                            "line": 1009,
                            "column": 43
                        }
                    }
                },
                "23": {
                    "name": "(anonymous_23)",
                    "line": 1031,
                    "loc": {
                        "start": {
                            "line": 1031,
                            "column": 16
                        },
                        "end": {
                            "line": 1031,
                            "column": 29
                        }
                    }
                },
                "24": {
                    "name": "(anonymous_24)",
                    "line": 1050,
                    "loc": {
                        "start": {
                            "line": 1050,
                            "column": 22
                        },
                        "end": {
                            "line": 1050,
                            "column": 34
                        }
                    }
                },
                "25": {
                    "name": "(anonymous_25)",
                    "line": 1066,
                    "loc": {
                        "start": {
                            "line": 1066,
                            "column": 23
                        },
                        "end": {
                            "line": 1066,
                            "column": 35
                        }
                    }
                },
                "26": {
                    "name": "(anonymous_26)",
                    "line": 1081,
                    "loc": {
                        "start": {
                            "line": 1081,
                            "column": 23
                        },
                        "end": {
                            "line": 1081,
                            "column": 34
                        }
                    }
                },
                "27": {
                    "name": "(anonymous_27)",
                    "line": 1101,
                    "loc": {
                        "start": {
                            "line": 1101,
                            "column": 22
                        },
                        "end": {
                            "line": 1101,
                            "column": 33
                        }
                    }
                },
                "28": {
                    "name": "(anonymous_28)",
                    "line": 1117,
                    "loc": {
                        "start": {
                            "line": 1117,
                            "column": 40
                        },
                        "end": {
                            "line": 1117,
                            "column": 57
                        }
                    }
                },
                "29": {
                    "name": "(anonymous_29)",
                    "line": 1127,
                    "loc": {
                        "start": {
                            "line": 1127,
                            "column": 22
                        },
                        "end": {
                            "line": 1127,
                            "column": 36
                        }
                    }
                },
                "30": {
                    "name": "(anonymous_30)",
                    "line": 1147,
                    "loc": {
                        "start": {
                            "line": 1147,
                            "column": 23
                        },
                        "end": {
                            "line": 1147,
                            "column": 34
                        }
                    }
                },
                "31": {
                    "name": "(anonymous_31)",
                    "line": 1169,
                    "loc": {
                        "start": {
                            "line": 1169,
                            "column": 22
                        },
                        "end": {
                            "line": 1169,
                            "column": 34
                        }
                    }
                },
                "32": {
                    "name": "(anonymous_32)",
                    "line": 1194,
                    "loc": {
                        "start": {
                            "line": 1194,
                            "column": 22
                        },
                        "end": {
                            "line": 1194,
                            "column": 34
                        }
                    }
                },
                "33": {
                    "name": "(anonymous_33)",
                    "line": 1243,
                    "loc": {
                        "start": {
                            "line": 1243,
                            "column": 29
                        },
                        "end": {
                            "line": 1243,
                            "column": 40
                        }
                    }
                },
                "34": {
                    "name": "(anonymous_34)",
                    "line": 1349,
                    "loc": {
                        "start": {
                            "line": 1349,
                            "column": 21
                        },
                        "end": {
                            "line": 1349,
                            "column": 31
                        }
                    }
                },
                "35": {
                    "name": "(anonymous_35)",
                    "line": 1371,
                    "loc": {
                        "start": {
                            "line": 1371,
                            "column": 21
                        },
                        "end": {
                            "line": 1371,
                            "column": 31
                        }
                    }
                }
            },
            "statementMap": {
                "1": {
                    "start": {
                        "line": 1,
                        "column": 0
                    },
                    "end": {
                        "line": 1498,
                        "column": 84
                    }
                },
                "2": {
                    "start": {
                        "line": 34,
                        "column": 0
                    },
                    "end": {
                        "line": 326,
                        "column": 3
                    }
                },
                "3": {
                    "start": {
                        "line": 64,
                        "column": 8
                    },
                    "end": {
                        "line": 64,
                        "column": 33
                    }
                },
                "4": {
                    "start": {
                        "line": 66,
                        "column": 8
                    },
                    "end": {
                        "line": 66,
                        "column": 26
                    }
                },
                "5": {
                    "start": {
                        "line": 67,
                        "column": 8
                    },
                    "end": {
                        "line": 67,
                        "column": 83
                    }
                },
                "6": {
                    "start": {
                        "line": 68,
                        "column": 8
                    },
                    "end": {
                        "line": 68,
                        "column": 85
                    }
                },
                "7": {
                    "start": {
                        "line": 70,
                        "column": 8
                    },
                    "end": {
                        "line": 70,
                        "column": 69
                    }
                },
                "8": {
                    "start": {
                        "line": 72,
                        "column": 8
                    },
                    "end": {
                        "line": 72,
                        "column": 20
                    }
                },
                "9": {
                    "start": {
                        "line": 82,
                        "column": 8
                    },
                    "end": {
                        "line": 82,
                        "column": 68
                    }
                },
                "10": {
                    "start": {
                        "line": 82,
                        "column": 50
                    },
                    "end": {
                        "line": 82,
                        "column": 64
                    }
                },
                "11": {
                    "start": {
                        "line": 83,
                        "column": 8
                    },
                    "end": {
                        "line": 83,
                        "column": 28
                    }
                },
                "12": {
                    "start": {
                        "line": 98,
                        "column": 8
                    },
                    "end": {
                        "line": 99,
                        "column": 26
                    }
                },
                "13": {
                    "start": {
                        "line": 102,
                        "column": 8
                    },
                    "end": {
                        "line": 104,
                        "column": 9
                    }
                },
                "14": {
                    "start": {
                        "line": 103,
                        "column": 12
                    },
                    "end": {
                        "line": 103,
                        "column": 27
                    }
                },
                "15": {
                    "start": {
                        "line": 107,
                        "column": 8
                    },
                    "end": {
                        "line": 109,
                        "column": 9
                    }
                },
                "16": {
                    "start": {
                        "line": 108,
                        "column": 12
                    },
                    "end": {
                        "line": 108,
                        "column": 27
                    }
                },
                "17": {
                    "start": {
                        "line": 112,
                        "column": 8
                    },
                    "end": {
                        "line": 116,
                        "column": 9
                    }
                },
                "18": {
                    "start": {
                        "line": 113,
                        "column": 12
                    },
                    "end": {
                        "line": 113,
                        "column": 44
                    }
                },
                "19": {
                    "start": {
                        "line": 115,
                        "column": 12
                    },
                    "end": {
                        "line": 115,
                        "column": 31
                    }
                },
                "20": {
                    "start": {
                        "line": 118,
                        "column": 8
                    },
                    "end": {
                        "line": 118,
                        "column": 20
                    }
                },
                "21": {
                    "start": {
                        "line": 132,
                        "column": 8
                    },
                    "end": {
                        "line": 133,
                        "column": 42
                    }
                },
                "22": {
                    "start": {
                        "line": 136,
                        "column": 8
                    },
                    "end": {
                        "line": 161,
                        "column": 9
                    }
                },
                "23": {
                    "start": {
                        "line": 139,
                        "column": 12
                    },
                    "end": {
                        "line": 139,
                        "column": 41
                    }
                },
                "24": {
                    "start": {
                        "line": 142,
                        "column": 12
                    },
                    "end": {
                        "line": 144,
                        "column": 13
                    }
                },
                "25": {
                    "start": {
                        "line": 143,
                        "column": 16
                    },
                    "end": {
                        "line": 143,
                        "column": 21
                    }
                },
                "26": {
                    "start": {
                        "line": 147,
                        "column": 12
                    },
                    "end": {
                        "line": 149,
                        "column": 13
                    }
                },
                "27": {
                    "start": {
                        "line": 148,
                        "column": 16
                    },
                    "end": {
                        "line": 148,
                        "column": 23
                    }
                },
                "28": {
                    "start": {
                        "line": 151,
                        "column": 12
                    },
                    "end": {
                        "line": 151,
                        "column": 30
                    }
                },
                "29": {
                    "start": {
                        "line": 156,
                        "column": 12
                    },
                    "end": {
                        "line": 158,
                        "column": 13
                    }
                },
                "30": {
                    "start": {
                        "line": 157,
                        "column": 16
                    },
                    "end": {
                        "line": 157,
                        "column": 35
                    }
                },
                "31": {
                    "start": {
                        "line": 160,
                        "column": 12
                    },
                    "end": {
                        "line": 160,
                        "column": 24
                    }
                },
                "32": {
                    "start": {
                        "line": 162,
                        "column": 8
                    },
                    "end": {
                        "line": 162,
                        "column": 21
                    }
                },
                "33": {
                    "start": {
                        "line": 172,
                        "column": 8
                    },
                    "end": {
                        "line": 172,
                        "column": 97
                    }
                },
                "34": {
                    "start": {
                        "line": 186,
                        "column": 8
                    },
                    "end": {
                        "line": 187,
                        "column": 77
                    }
                },
                "35": {
                    "start": {
                        "line": 189,
                        "column": 8
                    },
                    "end": {
                        "line": 193,
                        "column": 9
                    }
                },
                "36": {
                    "start": {
                        "line": 190,
                        "column": 12
                    },
                    "end": {
                        "line": 190,
                        "column": 45
                    }
                },
                "37": {
                    "start": {
                        "line": 192,
                        "column": 12
                    },
                    "end": {
                        "line": 192,
                        "column": 24
                    }
                },
                "38": {
                    "start": {
                        "line": 290,
                        "column": 36
                    },
                    "end": {
                        "line": 290,
                        "column": 56
                    }
                },
                "39": {
                    "start": {
                        "line": 419,
                        "column": 0
                    },
                    "end": {
                        "line": 1494,
                        "column": 3
                    }
                },
                "40": {
                    "start": {
                        "line": 572,
                        "column": 8
                    },
                    "end": {
                        "line": 572,
                        "column": 18
                    }
                },
                "41": {
                    "start": {
                        "line": 573,
                        "column": 8
                    },
                    "end": {
                        "line": 579,
                        "column": 9
                    }
                },
                "42": {
                    "start": {
                        "line": 574,
                        "column": 12
                    },
                    "end": {
                        "line": 574,
                        "column": 31
                    }
                },
                "43": {
                    "start": {
                        "line": 575,
                        "column": 12
                    },
                    "end": {
                        "line": 577,
                        "column": 13
                    }
                },
                "44": {
                    "start": {
                        "line": 576,
                        "column": 16
                    },
                    "end": {
                        "line": 576,
                        "column": 42
                    }
                },
                "45": {
                    "start": {
                        "line": 578,
                        "column": 12
                    },
                    "end": {
                        "line": 578,
                        "column": 23
                    }
                },
                "46": {
                    "start": {
                        "line": 580,
                        "column": 8
                    },
                    "end": {
                        "line": 580,
                        "column": 18
                    }
                },
                "47": {
                    "start": {
                        "line": 591,
                        "column": 8
                    },
                    "end": {
                        "line": 591,
                        "column": 25
                    }
                },
                "48": {
                    "start": {
                        "line": 595,
                        "column": 8
                    },
                    "end": {
                        "line": 595,
                        "column": 63
                    }
                },
                "49": {
                    "start": {
                        "line": 596,
                        "column": 8
                    },
                    "end": {
                        "line": 596,
                        "column": 65
                    }
                },
                "50": {
                    "start": {
                        "line": 597,
                        "column": 8
                    },
                    "end": {
                        "line": 597,
                        "column": 74
                    }
                },
                "51": {
                    "start": {
                        "line": 598,
                        "column": 8
                    },
                    "end": {
                        "line": 598,
                        "column": 79
                    }
                },
                "52": {
                    "start": {
                        "line": 599,
                        "column": 8
                    },
                    "end": {
                        "line": 599,
                        "column": 66
                    }
                },
                "53": {
                    "start": {
                        "line": 600,
                        "column": 8
                    },
                    "end": {
                        "line": 600,
                        "column": 67
                    }
                },
                "54": {
                    "start": {
                        "line": 601,
                        "column": 8
                    },
                    "end": {
                        "line": 601,
                        "column": 74
                    }
                },
                "55": {
                    "start": {
                        "line": 602,
                        "column": 8
                    },
                    "end": {
                        "line": 602,
                        "column": 73
                    }
                },
                "56": {
                    "start": {
                        "line": 611,
                        "column": 8
                    },
                    "end": {
                        "line": 611,
                        "column": 37
                    }
                },
                "57": {
                    "start": {
                        "line": 612,
                        "column": 8
                    },
                    "end": {
                        "line": 614,
                        "column": 9
                    }
                },
                "58": {
                    "start": {
                        "line": 613,
                        "column": 12
                    },
                    "end": {
                        "line": 613,
                        "column": 48
                    }
                },
                "59": {
                    "start": {
                        "line": 616,
                        "column": 8
                    },
                    "end": {
                        "line": 616,
                        "column": 37
                    }
                },
                "60": {
                    "start": {
                        "line": 618,
                        "column": 8
                    },
                    "end": {
                        "line": 631,
                        "column": 9
                    }
                },
                "61": {
                    "start": {
                        "line": 620,
                        "column": 12
                    },
                    "end": {
                        "line": 620,
                        "column": 43
                    }
                },
                "62": {
                    "start": {
                        "line": 622,
                        "column": 15
                    },
                    "end": {
                        "line": 631,
                        "column": 9
                    }
                },
                "63": {
                    "start": {
                        "line": 624,
                        "column": 12
                    },
                    "end": {
                        "line": 624,
                        "column": 52
                    }
                },
                "64": {
                    "start": {
                        "line": 628,
                        "column": 12
                    },
                    "end": {
                        "line": 630,
                        "column": 13
                    }
                },
                "65": {
                    "start": {
                        "line": 629,
                        "column": 16
                    },
                    "end": {
                        "line": 629,
                        "column": 91
                    }
                },
                "66": {
                    "start": {
                        "line": 636,
                        "column": 8
                    },
                    "end": {
                        "line": 636,
                        "column": 23
                    }
                },
                "67": {
                    "start": {
                        "line": 638,
                        "column": 8
                    },
                    "end": {
                        "line": 638,
                        "column": 20
                    }
                },
                "68": {
                    "start": {
                        "line": 651,
                        "column": 8
                    },
                    "end": {
                        "line": 651,
                        "column": 46
                    }
                },
                "69": {
                    "start": {
                        "line": 652,
                        "column": 8
                    },
                    "end": {
                        "line": 652,
                        "column": 26
                    }
                },
                "70": {
                    "start": {
                        "line": 657,
                        "column": 8
                    },
                    "end": {
                        "line": 662,
                        "column": 9
                    }
                },
                "71": {
                    "start": {
                        "line": 658,
                        "column": 12
                    },
                    "end": {
                        "line": 658,
                        "column": 43
                    }
                },
                "72": {
                    "start": {
                        "line": 659,
                        "column": 12
                    },
                    "end": {
                        "line": 659,
                        "column": 100
                    }
                },
                "73": {
                    "start": {
                        "line": 660,
                        "column": 12
                    },
                    "end": {
                        "line": 660,
                        "column": 109
                    }
                },
                "74": {
                    "start": {
                        "line": 661,
                        "column": 12
                    },
                    "end": {
                        "line": 661,
                        "column": 107
                    }
                },
                "75": {
                    "start": {
                        "line": 665,
                        "column": 8
                    },
                    "end": {
                        "line": 665,
                        "column": 86
                    }
                },
                "76": {
                    "start": {
                        "line": 668,
                        "column": 8
                    },
                    "end": {
                        "line": 668,
                        "column": 111
                    }
                },
                "77": {
                    "start": {
                        "line": 669,
                        "column": 8
                    },
                    "end": {
                        "line": 669,
                        "column": 120
                    }
                },
                "78": {
                    "start": {
                        "line": 670,
                        "column": 8
                    },
                    "end": {
                        "line": 670,
                        "column": 113
                    }
                },
                "79": {
                    "start": {
                        "line": 671,
                        "column": 8
                    },
                    "end": {
                        "line": 671,
                        "column": 119
                    }
                },
                "80": {
                    "start": {
                        "line": 674,
                        "column": 8
                    },
                    "end": {
                        "line": 674,
                        "column": 87
                    }
                },
                "81": {
                    "start": {
                        "line": 676,
                        "column": 8
                    },
                    "end": {
                        "line": 676,
                        "column": 20
                    }
                },
                "82": {
                    "start": {
                        "line": 688,
                        "column": 8
                    },
                    "end": {
                        "line": 694,
                        "column": 11
                    }
                },
                "83": {
                    "start": {
                        "line": 689,
                        "column": 12
                    },
                    "end": {
                        "line": 693,
                        "column": 13
                    }
                },
                "84": {
                    "start": {
                        "line": 690,
                        "column": 16
                    },
                    "end": {
                        "line": 690,
                        "column": 64
                    }
                },
                "85": {
                    "start": {
                        "line": 690,
                        "column": 48
                    },
                    "end": {
                        "line": 690,
                        "column": 60
                    }
                },
                "86": {
                    "start": {
                        "line": 692,
                        "column": 16
                    },
                    "end": {
                        "line": 692,
                        "column": 30
                    }
                },
                "87": {
                    "start": {
                        "line": 695,
                        "column": 8
                    },
                    "end": {
                        "line": 695,
                        "column": 28
                    }
                },
                "88": {
                    "start": {
                        "line": 696,
                        "column": 8
                    },
                    "end": {
                        "line": 696,
                        "column": 38
                    }
                },
                "89": {
                    "start": {
                        "line": 748,
                        "column": 8
                    },
                    "end": {
                        "line": 758,
                        "column": 33
                    }
                },
                "90": {
                    "start": {
                        "line": 760,
                        "column": 8
                    },
                    "end": {
                        "line": 762,
                        "column": 9
                    }
                },
                "91": {
                    "start": {
                        "line": 761,
                        "column": 12
                    },
                    "end": {
                        "line": 761,
                        "column": 24
                    }
                },
                "92": {
                    "start": {
                        "line": 765,
                        "column": 8
                    },
                    "end": {
                        "line": 768,
                        "column": 9
                    }
                },
                "93": {
                    "start": {
                        "line": 766,
                        "column": 12
                    },
                    "end": {
                        "line": 766,
                        "column": 22
                    }
                },
                "94": {
                    "start": {
                        "line": 767,
                        "column": 12
                    },
                    "end": {
                        "line": 767,
                        "column": 22
                    }
                },
                "95": {
                    "start": {
                        "line": 776,
                        "column": 8
                    },
                    "end": {
                        "line": 795,
                        "column": 9
                    }
                },
                "96": {
                    "start": {
                        "line": 777,
                        "column": 12
                    },
                    "end": {
                        "line": 794,
                        "column": 13
                    }
                },
                "97": {
                    "start": {
                        "line": 779,
                        "column": 16
                    },
                    "end": {
                        "line": 779,
                        "column": 78
                    }
                },
                "98": {
                    "start": {
                        "line": 780,
                        "column": 16
                    },
                    "end": {
                        "line": 782,
                        "column": 17
                    }
                },
                "99": {
                    "start": {
                        "line": 781,
                        "column": 20
                    },
                    "end": {
                        "line": 781,
                        "column": 62
                    }
                },
                "100": {
                    "start": {
                        "line": 784,
                        "column": 16
                    },
                    "end": {
                        "line": 785,
                        "column": 51
                    }
                },
                "101": {
                    "start": {
                        "line": 786,
                        "column": 16
                    },
                    "end": {
                        "line": 786,
                        "column": 62
                    }
                },
                "102": {
                    "start": {
                        "line": 788,
                        "column": 16
                    },
                    "end": {
                        "line": 793,
                        "column": 19
                    }
                },
                "103": {
                    "start": {
                        "line": 798,
                        "column": 8
                    },
                    "end": {
                        "line": 798,
                        "column": 32
                    }
                },
                "104": {
                    "start": {
                        "line": 799,
                        "column": 8
                    },
                    "end": {
                        "line": 799,
                        "column": 49
                    }
                },
                "105": {
                    "start": {
                        "line": 800,
                        "column": 8
                    },
                    "end": {
                        "line": 800,
                        "column": 29
                    }
                },
                "106": {
                    "start": {
                        "line": 803,
                        "column": 8
                    },
                    "end": {
                        "line": 803,
                        "column": 80
                    }
                },
                "107": {
                    "start": {
                        "line": 806,
                        "column": 8
                    },
                    "end": {
                        "line": 818,
                        "column": 39
                    }
                },
                "108": {
                    "start": {
                        "line": 820,
                        "column": 8
                    },
                    "end": {
                        "line": 820,
                        "column": 36
                    }
                },
                "109": {
                    "start": {
                        "line": 825,
                        "column": 8
                    },
                    "end": {
                        "line": 825,
                        "column": 43
                    }
                },
                "110": {
                    "start": {
                        "line": 827,
                        "column": 8
                    },
                    "end": {
                        "line": 827,
                        "column": 39
                    }
                },
                "111": {
                    "start": {
                        "line": 829,
                        "column": 8
                    },
                    "end": {
                        "line": 829,
                        "column": 28
                    }
                },
                "112": {
                    "start": {
                        "line": 831,
                        "column": 8
                    },
                    "end": {
                        "line": 831,
                        "column": 20
                    }
                },
                "113": {
                    "start": {
                        "line": 835,
                        "column": 8
                    },
                    "end": {
                        "line": 835,
                        "column": 38
                    }
                },
                "114": {
                    "start": {
                        "line": 852,
                        "column": 8
                    },
                    "end": {
                        "line": 859,
                        "column": 54
                    }
                },
                "115": {
                    "start": {
                        "line": 864,
                        "column": 8
                    },
                    "end": {
                        "line": 881,
                        "column": 9
                    }
                },
                "116": {
                    "start": {
                        "line": 866,
                        "column": 12
                    },
                    "end": {
                        "line": 866,
                        "column": 99
                    }
                },
                "117": {
                    "start": {
                        "line": 871,
                        "column": 12
                    },
                    "end": {
                        "line": 873,
                        "column": 13
                    }
                },
                "118": {
                    "start": {
                        "line": 872,
                        "column": 17
                    },
                    "end": {
                        "line": 872,
                        "column": 69
                    }
                },
                "119": {
                    "start": {
                        "line": 875,
                        "column": 12
                    },
                    "end": {
                        "line": 880,
                        "column": 13
                    }
                },
                "120": {
                    "start": {
                        "line": 876,
                        "column": 16
                    },
                    "end": {
                        "line": 876,
                        "column": 109
                    }
                },
                "121": {
                    "start": {
                        "line": 877,
                        "column": 16
                    },
                    "end": {
                        "line": 879,
                        "column": 17
                    }
                },
                "122": {
                    "start": {
                        "line": 878,
                        "column": 20
                    },
                    "end": {
                        "line": 878,
                        "column": 75
                    }
                },
                "123": {
                    "start": {
                        "line": 884,
                        "column": 8
                    },
                    "end": {
                        "line": 886,
                        "column": 9
                    }
                },
                "124": {
                    "start": {
                        "line": 885,
                        "column": 12
                    },
                    "end": {
                        "line": 885,
                        "column": 70
                    }
                },
                "125": {
                    "start": {
                        "line": 889,
                        "column": 8
                    },
                    "end": {
                        "line": 891,
                        "column": 9
                    }
                },
                "126": {
                    "start": {
                        "line": 890,
                        "column": 12
                    },
                    "end": {
                        "line": 890,
                        "column": 89
                    }
                },
                "127": {
                    "start": {
                        "line": 896,
                        "column": 8
                    },
                    "end": {
                        "line": 898,
                        "column": 9
                    }
                },
                "128": {
                    "start": {
                        "line": 897,
                        "column": 12
                    },
                    "end": {
                        "line": 897,
                        "column": 51
                    }
                },
                "129": {
                    "start": {
                        "line": 900,
                        "column": 8
                    },
                    "end": {
                        "line": 917,
                        "column": 9
                    }
                },
                "130": {
                    "start": {
                        "line": 901,
                        "column": 12
                    },
                    "end": {
                        "line": 901,
                        "column": 76
                    }
                },
                "131": {
                    "start": {
                        "line": 905,
                        "column": 15
                    },
                    "end": {
                        "line": 917,
                        "column": 9
                    }
                },
                "132": {
                    "start": {
                        "line": 907,
                        "column": 12
                    },
                    "end": {
                        "line": 907,
                        "column": 56
                    }
                },
                "133": {
                    "start": {
                        "line": 908,
                        "column": 12
                    },
                    "end": {
                        "line": 908,
                        "column": 60
                    }
                },
                "134": {
                    "start": {
                        "line": 910,
                        "column": 15
                    },
                    "end": {
                        "line": 917,
                        "column": 9
                    }
                },
                "135": {
                    "start": {
                        "line": 912,
                        "column": 12
                    },
                    "end": {
                        "line": 912,
                        "column": 61
                    }
                },
                "136": {
                    "start": {
                        "line": 913,
                        "column": 12
                    },
                    "end": {
                        "line": 913,
                        "column": 55
                    }
                },
                "137": {
                    "start": {
                        "line": 916,
                        "column": 12
                    },
                    "end": {
                        "line": 916,
                        "column": 75
                    }
                },
                "138": {
                    "start": {
                        "line": 919,
                        "column": 8
                    },
                    "end": {
                        "line": 919,
                        "column": 59
                    }
                },
                "139": {
                    "start": {
                        "line": 925,
                        "column": 8
                    },
                    "end": {
                        "line": 927,
                        "column": 9
                    }
                },
                "140": {
                    "start": {
                        "line": 926,
                        "column": 12
                    },
                    "end": {
                        "line": 926,
                        "column": 19
                    }
                },
                "141": {
                    "start": {
                        "line": 929,
                        "column": 8
                    },
                    "end": {
                        "line": 930,
                        "column": 120
                    }
                },
                "142": {
                    "start": {
                        "line": 933,
                        "column": 8
                    },
                    "end": {
                        "line": 933,
                        "column": 61
                    }
                },
                "143": {
                    "start": {
                        "line": 936,
                        "column": 8
                    },
                    "end": {
                        "line": 936,
                        "column": 50
                    }
                },
                "144": {
                    "start": {
                        "line": 941,
                        "column": 8
                    },
                    "end": {
                        "line": 951,
                        "column": 16
                    }
                },
                "145": {
                    "start": {
                        "line": 942,
                        "column": 12
                    },
                    "end": {
                        "line": 944,
                        "column": 13
                    }
                },
                "146": {
                    "start": {
                        "line": 943,
                        "column": 16
                    },
                    "end": {
                        "line": 943,
                        "column": 28
                    }
                },
                "147": {
                    "start": {
                        "line": 946,
                        "column": 12
                    },
                    "end": {
                        "line": 950,
                        "column": 13
                    }
                },
                "148": {
                    "start": {
                        "line": 947,
                        "column": 16
                    },
                    "end": {
                        "line": 947,
                        "column": 59
                    }
                },
                "149": {
                    "start": {
                        "line": 949,
                        "column": 16
                    },
                    "end": {
                        "line": 949,
                        "column": 62
                    }
                },
                "150": {
                    "start": {
                        "line": 956,
                        "column": 8
                    },
                    "end": {
                        "line": 958,
                        "column": 9
                    }
                },
                "151": {
                    "start": {
                        "line": 957,
                        "column": 12
                    },
                    "end": {
                        "line": 957,
                        "column": 65
                    }
                },
                "152": {
                    "start": {
                        "line": 960,
                        "column": 8
                    },
                    "end": {
                        "line": 962,
                        "column": 9
                    }
                },
                "153": {
                    "start": {
                        "line": 961,
                        "column": 12
                    },
                    "end": {
                        "line": 961,
                        "column": 66
                    }
                },
                "154": {
                    "start": {
                        "line": 964,
                        "column": 8
                    },
                    "end": {
                        "line": 964,
                        "column": 20
                    }
                },
                "155": {
                    "start": {
                        "line": 981,
                        "column": 8
                    },
                    "end": {
                        "line": 983,
                        "column": 73
                    }
                },
                "156": {
                    "start": {
                        "line": 985,
                        "column": 8
                    },
                    "end": {
                        "line": 988,
                        "column": 10
                    }
                },
                "157": {
                    "start": {
                        "line": 1004,
                        "column": 8
                    },
                    "end": {
                        "line": 1004,
                        "column": 71
                    }
                },
                "158": {
                    "start": {
                        "line": 1005,
                        "column": 8
                    },
                    "end": {
                        "line": 1005,
                        "column": 48
                    }
                },
                "159": {
                    "start": {
                        "line": 1006,
                        "column": 8
                    },
                    "end": {
                        "line": 1007,
                        "column": 45
                    }
                },
                "160": {
                    "start": {
                        "line": 1009,
                        "column": 8
                    },
                    "end": {
                        "line": 1018,
                        "column": 16
                    }
                },
                "161": {
                    "start": {
                        "line": 1010,
                        "column": 12
                    },
                    "end": {
                        "line": 1010,
                        "column": 88
                    }
                },
                "162": {
                    "start": {
                        "line": 1011,
                        "column": 12
                    },
                    "end": {
                        "line": 1017,
                        "column": 13
                    }
                },
                "163": {
                    "start": {
                        "line": 1012,
                        "column": 16
                    },
                    "end": {
                        "line": 1016,
                        "column": 17
                    }
                },
                "164": {
                    "start": {
                        "line": 1013,
                        "column": 20
                    },
                    "end": {
                        "line": 1013,
                        "column": 68
                    }
                },
                "165": {
                    "start": {
                        "line": 1015,
                        "column": 20
                    },
                    "end": {
                        "line": 1015,
                        "column": 65
                    }
                },
                "166": {
                    "start": {
                        "line": 1032,
                        "column": 8
                    },
                    "end": {
                        "line": 1034,
                        "column": 9
                    }
                },
                "167": {
                    "start": {
                        "line": 1033,
                        "column": 12
                    },
                    "end": {
                        "line": 1033,
                        "column": 19
                    }
                },
                "168": {
                    "start": {
                        "line": 1035,
                        "column": 8
                    },
                    "end": {
                        "line": 1035,
                        "column": 25
                    }
                },
                "169": {
                    "start": {
                        "line": 1036,
                        "column": 8
                    },
                    "end": {
                        "line": 1036,
                        "column": 19
                    }
                },
                "170": {
                    "start": {
                        "line": 1051,
                        "column": 8
                    },
                    "end": {
                        "line": 1051,
                        "column": 31
                    }
                },
                "171": {
                    "start": {
                        "line": 1052,
                        "column": 8
                    },
                    "end": {
                        "line": 1054,
                        "column": 9
                    }
                },
                "172": {
                    "start": {
                        "line": 1053,
                        "column": 12
                    },
                    "end": {
                        "line": 1053,
                        "column": 45
                    }
                },
                "173": {
                    "start": {
                        "line": 1067,
                        "column": 8
                    },
                    "end": {
                        "line": 1069,
                        "column": 9
                    }
                },
                "174": {
                    "start": {
                        "line": 1068,
                        "column": 12
                    },
                    "end": {
                        "line": 1068,
                        "column": 26
                    }
                },
                "175": {
                    "start": {
                        "line": 1087,
                        "column": 8
                    },
                    "end": {
                        "line": 1087,
                        "column": 22
                    }
                },
                "176": {
                    "start": {
                        "line": 1102,
                        "column": 8
                    },
                    "end": {
                        "line": 1106,
                        "column": 23
                    }
                },
                "177": {
                    "start": {
                        "line": 1109,
                        "column": 8
                    },
                    "end": {
                        "line": 1121,
                        "column": 9
                    }
                },
                "178": {
                    "start": {
                        "line": 1110,
                        "column": 12
                    },
                    "end": {
                        "line": 1120,
                        "column": 13
                    }
                },
                "179": {
                    "start": {
                        "line": 1114,
                        "column": 16
                    },
                    "end": {
                        "line": 1114,
                        "column": 46
                    }
                },
                "180": {
                    "start": {
                        "line": 1115,
                        "column": 16
                    },
                    "end": {
                        "line": 1115,
                        "column": 32
                    }
                },
                "181": {
                    "start": {
                        "line": 1117,
                        "column": 16
                    },
                    "end": {
                        "line": 1119,
                        "column": 19
                    }
                },
                "182": {
                    "start": {
                        "line": 1118,
                        "column": 20
                    },
                    "end": {
                        "line": 1118,
                        "column": 93
                    }
                },
                "183": {
                    "start": {
                        "line": 1124,
                        "column": 8
                    },
                    "end": {
                        "line": 1133,
                        "column": 9
                    }
                },
                "184": {
                    "start": {
                        "line": 1125,
                        "column": 12
                    },
                    "end": {
                        "line": 1125,
                        "column": 102
                    }
                },
                "185": {
                    "start": {
                        "line": 1126,
                        "column": 12
                    },
                    "end": {
                        "line": 1126,
                        "column": 42
                    }
                },
                "186": {
                    "start": {
                        "line": 1127,
                        "column": 12
                    },
                    "end": {
                        "line": 1132,
                        "column": 20
                    }
                },
                "187": {
                    "start": {
                        "line": 1128,
                        "column": 16
                    },
                    "end": {
                        "line": 1131,
                        "column": 17
                    }
                },
                "188": {
                    "start": {
                        "line": 1130,
                        "column": 20
                    },
                    "end": {
                        "line": 1130,
                        "column": 45
                    }
                },
                "189": {
                    "start": {
                        "line": 1135,
                        "column": 8
                    },
                    "end": {
                        "line": 1137,
                        "column": 9
                    }
                },
                "190": {
                    "start": {
                        "line": 1136,
                        "column": 12
                    },
                    "end": {
                        "line": 1136,
                        "column": 37
                    }
                },
                "191": {
                    "start": {
                        "line": 1170,
                        "column": 8
                    },
                    "end": {
                        "line": 1172,
                        "column": 38
                    }
                },
                "192": {
                    "start": {
                        "line": 1174,
                        "column": 8
                    },
                    "end": {
                        "line": 1177,
                        "column": 9
                    }
                },
                "193": {
                    "start": {
                        "line": 1175,
                        "column": 12
                    },
                    "end": {
                        "line": 1175,
                        "column": 20
                    }
                },
                "194": {
                    "start": {
                        "line": 1176,
                        "column": 12
                    },
                    "end": {
                        "line": 1176,
                        "column": 33
                    }
                },
                "195": {
                    "start": {
                        "line": 1178,
                        "column": 8
                    },
                    "end": {
                        "line": 1178,
                        "column": 30
                    }
                },
                "196": {
                    "start": {
                        "line": 1195,
                        "column": 8
                    },
                    "end": {
                        "line": 1197,
                        "column": 29
                    }
                },
                "197": {
                    "start": {
                        "line": 1199,
                        "column": 8
                    },
                    "end": {
                        "line": 1199,
                        "column": 27
                    }
                },
                "198": {
                    "start": {
                        "line": 1201,
                        "column": 8
                    },
                    "end": {
                        "line": 1203,
                        "column": 9
                    }
                },
                "199": {
                    "start": {
                        "line": 1202,
                        "column": 12
                    },
                    "end": {
                        "line": 1202,
                        "column": 19
                    }
                },
                "200": {
                    "start": {
                        "line": 1205,
                        "column": 8
                    },
                    "end": {
                        "line": 1207,
                        "column": 34
                    }
                },
                "201": {
                    "start": {
                        "line": 1209,
                        "column": 8
                    },
                    "end": {
                        "line": 1211,
                        "column": 9
                    }
                },
                "202": {
                    "start": {
                        "line": 1210,
                        "column": 12
                    },
                    "end": {
                        "line": 1210,
                        "column": 19
                    }
                },
                "203": {
                    "start": {
                        "line": 1213,
                        "column": 8
                    },
                    "end": {
                        "line": 1229,
                        "column": 9
                    }
                },
                "204": {
                    "start": {
                        "line": 1215,
                        "column": 16
                    },
                    "end": {
                        "line": 1215,
                        "column": 25
                    }
                },
                "205": {
                    "start": {
                        "line": 1216,
                        "column": 16
                    },
                    "end": {
                        "line": 1216,
                        "column": 22
                    }
                },
                "206": {
                    "start": {
                        "line": 1218,
                        "column": 16
                    },
                    "end": {
                        "line": 1218,
                        "column": 29
                    }
                },
                "207": {
                    "start": {
                        "line": 1219,
                        "column": 16
                    },
                    "end": {
                        "line": 1219,
                        "column": 22
                    }
                },
                "208": {
                    "start": {
                        "line": 1221,
                        "column": 16
                    },
                    "end": {
                        "line": 1221,
                        "column": 72
                    }
                },
                "209": {
                    "start": {
                        "line": 1222,
                        "column": 16
                    },
                    "end": {
                        "line": 1222,
                        "column": 22
                    }
                },
                "210": {
                    "start": {
                        "line": 1224,
                        "column": 16
                    },
                    "end": {
                        "line": 1224,
                        "column": 73
                    }
                },
                "211": {
                    "start": {
                        "line": 1225,
                        "column": 16
                    },
                    "end": {
                        "line": 1225,
                        "column": 22
                    }
                },
                "212": {
                    "start": {
                        "line": 1227,
                        "column": 16
                    },
                    "end": {
                        "line": 1227,
                        "column": 29
                    }
                },
                "213": {
                    "start": {
                        "line": 1231,
                        "column": 8
                    },
                    "end": {
                        "line": 1231,
                        "column": 31
                    }
                },
                "214": {
                    "start": {
                        "line": 1244,
                        "column": 8
                    },
                    "end": {
                        "line": 1245,
                        "column": 56
                    }
                },
                "215": {
                    "start": {
                        "line": 1247,
                        "column": 8
                    },
                    "end": {
                        "line": 1249,
                        "column": 9
                    }
                },
                "216": {
                    "start": {
                        "line": 1248,
                        "column": 12
                    },
                    "end": {
                        "line": 1248,
                        "column": 54
                    }
                },
                "217": {
                    "start": {
                        "line": 1250,
                        "column": 8
                    },
                    "end": {
                        "line": 1250,
                        "column": 50
                    }
                },
                "218": {
                    "start": {
                        "line": 1251,
                        "column": 8
                    },
                    "end": {
                        "line": 1251,
                        "column": 22
                    }
                },
                "219": {
                    "start": {
                        "line": 1350,
                        "column": 16
                    },
                    "end": {
                        "line": 1350,
                        "column": 43
                    }
                },
                "220": {
                    "start": {
                        "line": 1372,
                        "column": 16
                    },
                    "end": {
                        "line": 1372,
                        "column": 38
                    }
                }
            },
            "branchMap": {
                "1": {
                    "line": 102,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 102,
                                "column": 8
                            },
                            "end": {
                                "line": 102,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 102,
                                "column": 8
                            },
                            "end": {
                                "line": 102,
                                "column": 8
                            }
                        }
                    ]
                },
                "2": {
                    "line": 102,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 102,
                                "column": 13
                            },
                            "end": {
                                "line": 102,
                                "column": 22
                            }
                        },
                        {
                            "start": {
                                "line": 102,
                                "column": 26
                            },
                            "end": {
                                "line": 102,
                                "column": 49
                            }
                        },
                        {
                            "start": {
                                "line": 102,
                                "column": 53
                            },
                            "end": {
                                "line": 102,
                                "column": 78
                            }
                        }
                    ]
                },
                "3": {
                    "line": 107,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 107,
                                "column": 8
                            },
                            "end": {
                                "line": 107,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 107,
                                "column": 8
                            },
                            "end": {
                                "line": 107,
                                "column": 8
                            }
                        }
                    ]
                },
                "4": {
                    "line": 107,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 107,
                                "column": 13
                            },
                            "end": {
                                "line": 107,
                                "column": 19
                            }
                        },
                        {
                            "start": {
                                "line": 107,
                                "column": 23
                            },
                            "end": {
                                "line": 107,
                                "column": 45
                            }
                        },
                        {
                            "start": {
                                "line": 107,
                                "column": 49
                            },
                            "end": {
                                "line": 107,
                                "column": 79
                            }
                        }
                    ]
                },
                "5": {
                    "line": 112,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 112,
                                "column": 8
                            },
                            "end": {
                                "line": 112,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 112,
                                "column": 8
                            },
                            "end": {
                                "line": 112,
                                "column": 8
                            }
                        }
                    ]
                },
                "6": {
                    "line": 136,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 136,
                                "column": 8
                            },
                            "end": {
                                "line": 136,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 136,
                                "column": 8
                            },
                            "end": {
                                "line": 136,
                                "column": 8
                            }
                        }
                    ]
                },
                "7": {
                    "line": 136,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 136,
                                "column": 13
                            },
                            "end": {
                                "line": 136,
                                "column": 17
                            }
                        },
                        {
                            "start": {
                                "line": 136,
                                "column": 21
                            },
                            "end": {
                                "line": 136,
                                "column": 29
                            }
                        }
                    ]
                },
                "8": {
                    "line": 142,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 142,
                                "column": 12
                            },
                            "end": {
                                "line": 142,
                                "column": 12
                            }
                        },
                        {
                            "start": {
                                "line": 142,
                                "column": 12
                            },
                            "end": {
                                "line": 142,
                                "column": 12
                            }
                        }
                    ]
                },
                "9": {
                    "line": 147,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 147,
                                "column": 12
                            },
                            "end": {
                                "line": 147,
                                "column": 12
                            }
                        },
                        {
                            "start": {
                                "line": 147,
                                "column": 12
                            },
                            "end": {
                                "line": 147,
                                "column": 12
                            }
                        }
                    ]
                },
                "10": {
                    "line": 156,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 156,
                                "column": 12
                            },
                            "end": {
                                "line": 156,
                                "column": 12
                            }
                        },
                        {
                            "start": {
                                "line": 156,
                                "column": 12
                            },
                            "end": {
                                "line": 156,
                                "column": 12
                            }
                        }
                    ]
                },
                "11": {
                    "line": 172,
                    "type": "cond-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 172,
                                "column": 44
                            },
                            "end": {
                                "line": 172,
                                "column": 89
                            }
                        },
                        {
                            "start": {
                                "line": 172,
                                "column": 92
                            },
                            "end": {
                                "line": 172,
                                "column": 96
                            }
                        }
                    ]
                },
                "12": {
                    "line": 189,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 189,
                                "column": 8
                            },
                            "end": {
                                "line": 189,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 189,
                                "column": 8
                            },
                            "end": {
                                "line": 189,
                                "column": 8
                            }
                        }
                    ]
                },
                "13": {
                    "line": 190,
                    "type": "cond-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 190,
                                "column": 35
                            },
                            "end": {
                                "line": 190,
                                "column": 37
                            }
                        },
                        {
                            "start": {
                                "line": 190,
                                "column": 40
                            },
                            "end": {
                                "line": 190,
                                "column": 44
                            }
                        }
                    ]
                },
                "14": {
                    "line": 573,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 573,
                                "column": 8
                            },
                            "end": {
                                "line": 573,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 573,
                                "column": 8
                            },
                            "end": {
                                "line": 573,
                                "column": 8
                            }
                        }
                    ]
                },
                "15": {
                    "line": 573,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 573,
                                "column": 12
                            },
                            "end": {
                                "line": 573,
                                "column": 21
                            }
                        },
                        {
                            "start": {
                                "line": 573,
                                "column": 25
                            },
                            "end": {
                                "line": 573,
                                "column": 43
                            }
                        }
                    ]
                },
                "16": {
                    "line": 612,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 612,
                                "column": 8
                            },
                            "end": {
                                "line": 612,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 612,
                                "column": 8
                            },
                            "end": {
                                "line": 612,
                                "column": 8
                            }
                        }
                    ]
                },
                "17": {
                    "line": 612,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 612,
                                "column": 12
                            },
                            "end": {
                                "line": 612,
                                "column": 33
                            }
                        },
                        {
                            "start": {
                                "line": 612,
                                "column": 37
                            },
                            "end": {
                                "line": 612,
                                "column": 55
                            }
                        }
                    ]
                },
                "18": {
                    "line": 618,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 618,
                                "column": 8
                            },
                            "end": {
                                "line": 618,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 618,
                                "column": 8
                            },
                            "end": {
                                "line": 618,
                                "column": 8
                            }
                        }
                    ]
                },
                "19": {
                    "line": 618,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 618,
                                "column": 13
                            },
                            "end": {
                                "line": 618,
                                "column": 35
                            }
                        },
                        {
                            "start": {
                                "line": 618,
                                "column": 39
                            },
                            "end": {
                                "line": 618,
                                "column": 53
                            }
                        }
                    ]
                },
                "20": {
                    "line": 622,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 622,
                                "column": 15
                            },
                            "end": {
                                "line": 622,
                                "column": 15
                            }
                        },
                        {
                            "start": {
                                "line": 622,
                                "column": 15
                            },
                            "end": {
                                "line": 622,
                                "column": 15
                            }
                        }
                    ]
                },
                "21": {
                    "line": 622,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 622,
                                "column": 20
                            },
                            "end": {
                                "line": 622,
                                "column": 42
                            }
                        },
                        {
                            "start": {
                                "line": 622,
                                "column": 46
                            },
                            "end": {
                                "line": 622,
                                "column": 75
                            }
                        }
                    ]
                },
                "22": {
                    "line": 628,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 628,
                                "column": 12
                            },
                            "end": {
                                "line": 628,
                                "column": 12
                            }
                        },
                        {
                            "start": {
                                "line": 628,
                                "column": 12
                            },
                            "end": {
                                "line": 628,
                                "column": 12
                            }
                        }
                    ]
                },
                "23": {
                    "line": 629,
                    "type": "cond-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 629,
                                "column": 55
                            },
                            "end": {
                                "line": 629,
                                "column": 80
                            }
                        },
                        {
                            "start": {
                                "line": 629,
                                "column": 83
                            },
                            "end": {
                                "line": 629,
                                "column": 90
                            }
                        }
                    ]
                },
                "24": {
                    "line": 657,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 657,
                                "column": 8
                            },
                            "end": {
                                "line": 657,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 657,
                                "column": 8
                            },
                            "end": {
                                "line": 657,
                                "column": 8
                            }
                        }
                    ]
                },
                "25": {
                    "line": 689,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 689,
                                "column": 12
                            },
                            "end": {
                                "line": 689,
                                "column": 12
                            }
                        },
                        {
                            "start": {
                                "line": 689,
                                "column": 12
                            },
                            "end": {
                                "line": 689,
                                "column": 12
                            }
                        }
                    ]
                },
                "26": {
                    "line": 753,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 753,
                                "column": 23
                            },
                            "end": {
                                "line": 753,
                                "column": 40
                            }
                        },
                        {
                            "start": {
                                "line": 753,
                                "column": 44
                            },
                            "end": {
                                "line": 753,
                                "column": 45
                            }
                        }
                    ]
                },
                "27": {
                    "line": 760,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 760,
                                "column": 8
                            },
                            "end": {
                                "line": 760,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 760,
                                "column": 8
                            },
                            "end": {
                                "line": 760,
                                "column": 8
                            }
                        }
                    ]
                },
                "28": {
                    "line": 760,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 760,
                                "column": 13
                            },
                            "end": {
                                "line": 760,
                                "column": 20
                            }
                        },
                        {
                            "start": {
                                "line": 760,
                                "column": 24
                            },
                            "end": {
                                "line": 760,
                                "column": 33
                            }
                        },
                        {
                            "start": {
                                "line": 760,
                                "column": 37
                            },
                            "end": {
                                "line": 760,
                                "column": 46
                            }
                        }
                    ]
                },
                "29": {
                    "line": 765,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 765,
                                "column": 8
                            },
                            "end": {
                                "line": 765,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 765,
                                "column": 8
                            },
                            "end": {
                                "line": 765,
                                "column": 8
                            }
                        }
                    ]
                },
                "30": {
                    "line": 776,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 776,
                                "column": 8
                            },
                            "end": {
                                "line": 776,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 776,
                                "column": 8
                            },
                            "end": {
                                "line": 776,
                                "column": 8
                            }
                        }
                    ]
                },
                "31": {
                    "line": 780,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 780,
                                "column": 16
                            },
                            "end": {
                                "line": 780,
                                "column": 16
                            }
                        },
                        {
                            "start": {
                                "line": 780,
                                "column": 16
                            },
                            "end": {
                                "line": 780,
                                "column": 16
                            }
                        }
                    ]
                },
                "32": {
                    "line": 786,
                    "type": "cond-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 786,
                                "column": 47
                            },
                            "end": {
                                "line": 786,
                                "column": 52
                            }
                        },
                        {
                            "start": {
                                "line": 786,
                                "column": 55
                            },
                            "end": {
                                "line": 786,
                                "column": 61
                            }
                        }
                    ]
                },
                "33": {
                    "line": 790,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 790,
                                "column": 36
                            },
                            "end": {
                                "line": 790,
                                "column": 43
                            }
                        },
                        {
                            "start": {
                                "line": 790,
                                "column": 47
                            },
                            "end": {
                                "line": 790,
                                "column": 49
                            }
                        }
                    ]
                },
                "34": {
                    "line": 807,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 807,
                                "column": 32
                            },
                            "end": {
                                "line": 807,
                                "column": 39
                            }
                        },
                        {
                            "start": {
                                "line": 807,
                                "column": 43
                            },
                            "end": {
                                "line": 807,
                                "column": 45
                            }
                        }
                    ]
                },
                "35": {
                    "line": 810,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 810,
                                "column": 32
                            },
                            "end": {
                                "line": 810,
                                "column": 51
                            }
                        },
                        {
                            "start": {
                                "line": 810,
                                "column": 55
                            },
                            "end": {
                                "line": 810,
                                "column": 57
                            }
                        }
                    ]
                },
                "36": {
                    "line": 811,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 811,
                                "column": 32
                            },
                            "end": {
                                "line": 811,
                                "column": 52
                            }
                        },
                        {
                            "start": {
                                "line": 811,
                                "column": 56
                            },
                            "end": {
                                "line": 811,
                                "column": 58
                            }
                        }
                    ]
                },
                "37": {
                    "line": 812,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 812,
                                "column": 32
                            },
                            "end": {
                                "line": 812,
                                "column": 51
                            }
                        },
                        {
                            "start": {
                                "line": 812,
                                "column": 55
                            },
                            "end": {
                                "line": 812,
                                "column": 57
                            }
                        }
                    ]
                },
                "38": {
                    "line": 813,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 813,
                                "column": 32
                            },
                            "end": {
                                "line": 813,
                                "column": 50
                            }
                        },
                        {
                            "start": {
                                "line": 813,
                                "column": 54
                            },
                            "end": {
                                "line": 813,
                                "column": 56
                            }
                        }
                    ]
                },
                "39": {
                    "line": 864,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 864,
                                "column": 8
                            },
                            "end": {
                                "line": 864,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 864,
                                "column": 8
                            },
                            "end": {
                                "line": 864,
                                "column": 8
                            }
                        }
                    ]
                },
                "40": {
                    "line": 864,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 864,
                                "column": 13
                            },
                            "end": {
                                "line": 864,
                                "column": 20
                            }
                        },
                        {
                            "start": {
                                "line": 864,
                                "column": 24
                            },
                            "end": {
                                "line": 864,
                                "column": 49
                            }
                        }
                    ]
                },
                "41": {
                    "line": 866,
                    "type": "cond-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 866,
                                "column": 70
                            },
                            "end": {
                                "line": 866,
                                "column": 91
                            }
                        },
                        {
                            "start": {
                                "line": 866,
                                "column": 94
                            },
                            "end": {
                                "line": 866,
                                "column": 98
                            }
                        }
                    ]
                },
                "42": {
                    "line": 866,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 866,
                                "column": 29
                            },
                            "end": {
                                "line": 866,
                                "column": 36
                            }
                        },
                        {
                            "start": {
                                "line": 866,
                                "column": 40
                            },
                            "end": {
                                "line": 866,
                                "column": 66
                            }
                        }
                    ]
                },
                "43": {
                    "line": 871,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 871,
                                "column": 12
                            },
                            "end": {
                                "line": 871,
                                "column": 12
                            }
                        },
                        {
                            "start": {
                                "line": 871,
                                "column": 12
                            },
                            "end": {
                                "line": 871,
                                "column": 12
                            }
                        }
                    ]
                },
                "44": {
                    "line": 875,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 875,
                                "column": 12
                            },
                            "end": {
                                "line": 875,
                                "column": 12
                            }
                        },
                        {
                            "start": {
                                "line": 875,
                                "column": 12
                            },
                            "end": {
                                "line": 875,
                                "column": 12
                            }
                        }
                    ]
                },
                "45": {
                    "line": 875,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 875,
                                "column": 17
                            },
                            "end": {
                                "line": 875,
                                "column": 25
                            }
                        },
                        {
                            "start": {
                                "line": 875,
                                "column": 29
                            },
                            "end": {
                                "line": 875,
                                "column": 47
                            }
                        }
                    ]
                },
                "46": {
                    "line": 876,
                    "type": "cond-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 876,
                                "column": 77
                            },
                            "end": {
                                "line": 876,
                                "column": 101
                            }
                        },
                        {
                            "start": {
                                "line": 876,
                                "column": 104
                            },
                            "end": {
                                "line": 876,
                                "column": 108
                            }
                        }
                    ]
                },
                "47": {
                    "line": 876,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 876,
                                "column": 33
                            },
                            "end": {
                                "line": 876,
                                "column": 40
                            }
                        },
                        {
                            "start": {
                                "line": 876,
                                "column": 44
                            },
                            "end": {
                                "line": 876,
                                "column": 73
                            }
                        }
                    ]
                },
                "48": {
                    "line": 877,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 877,
                                "column": 16
                            },
                            "end": {
                                "line": 877,
                                "column": 16
                            }
                        },
                        {
                            "start": {
                                "line": 877,
                                "column": 16
                            },
                            "end": {
                                "line": 877,
                                "column": 16
                            }
                        }
                    ]
                },
                "49": {
                    "line": 884,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 884,
                                "column": 8
                            },
                            "end": {
                                "line": 884,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 884,
                                "column": 8
                            },
                            "end": {
                                "line": 884,
                                "column": 8
                            }
                        }
                    ]
                },
                "50": {
                    "line": 889,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 889,
                                "column": 8
                            },
                            "end": {
                                "line": 889,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 889,
                                "column": 8
                            },
                            "end": {
                                "line": 889,
                                "column": 8
                            }
                        }
                    ]
                },
                "51": {
                    "line": 896,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 896,
                                "column": 8
                            },
                            "end": {
                                "line": 896,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 896,
                                "column": 8
                            },
                            "end": {
                                "line": 896,
                                "column": 8
                            }
                        }
                    ]
                },
                "52": {
                    "line": 900,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 900,
                                "column": 8
                            },
                            "end": {
                                "line": 900,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 900,
                                "column": 8
                            },
                            "end": {
                                "line": 900,
                                "column": 8
                            }
                        }
                    ]
                },
                "53": {
                    "line": 905,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 905,
                                "column": 15
                            },
                            "end": {
                                "line": 905,
                                "column": 15
                            }
                        },
                        {
                            "start": {
                                "line": 905,
                                "column": 15
                            },
                            "end": {
                                "line": 905,
                                "column": 15
                            }
                        }
                    ]
                },
                "54": {
                    "line": 905,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 905,
                                "column": 20
                            },
                            "end": {
                                "line": 905,
                                "column": 31
                            }
                        },
                        {
                            "start": {
                                "line": 905,
                                "column": 35
                            },
                            "end": {
                                "line": 905,
                                "column": 56
                            }
                        }
                    ]
                },
                "55": {
                    "line": 910,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 910,
                                "column": 15
                            },
                            "end": {
                                "line": 910,
                                "column": 15
                            }
                        },
                        {
                            "start": {
                                "line": 910,
                                "column": 15
                            },
                            "end": {
                                "line": 910,
                                "column": 15
                            }
                        }
                    ]
                },
                "56": {
                    "line": 910,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 910,
                                "column": 20
                            },
                            "end": {
                                "line": 910,
                                "column": 35
                            }
                        },
                        {
                            "start": {
                                "line": 910,
                                "column": 39
                            },
                            "end": {
                                "line": 910,
                                "column": 60
                            }
                        }
                    ]
                },
                "57": {
                    "line": 925,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 925,
                                "column": 8
                            },
                            "end": {
                                "line": 925,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 925,
                                "column": 8
                            },
                            "end": {
                                "line": 925,
                                "column": 8
                            }
                        }
                    ]
                },
                "58": {
                    "line": 925,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 925,
                                "column": 13
                            },
                            "end": {
                                "line": 925,
                                "column": 28
                            }
                        },
                        {
                            "start": {
                                "line": 925,
                                "column": 32
                            },
                            "end": {
                                "line": 925,
                                "column": 40
                            }
                        },
                        {
                            "start": {
                                "line": 925,
                                "column": 46
                            },
                            "end": {
                                "line": 925,
                                "column": 53
                            }
                        },
                        {
                            "start": {
                                "line": 925,
                                "column": 57
                            },
                            "end": {
                                "line": 925,
                                "column": 77
                            }
                        }
                    ]
                },
                "59": {
                    "line": 942,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 942,
                                "column": 12
                            },
                            "end": {
                                "line": 942,
                                "column": 12
                            }
                        },
                        {
                            "start": {
                                "line": 942,
                                "column": 12
                            },
                            "end": {
                                "line": 942,
                                "column": 12
                            }
                        }
                    ]
                },
                "60": {
                    "line": 942,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 942,
                                "column": 17
                            },
                            "end": {
                                "line": 942,
                                "column": 28
                            }
                        },
                        {
                            "start": {
                                "line": 942,
                                "column": 32
                            },
                            "end": {
                                "line": 942,
                                "column": 59
                            }
                        },
                        {
                            "start": {
                                "line": 942,
                                "column": 63
                            },
                            "end": {
                                "line": 942,
                                "column": 80
                            }
                        },
                        {
                            "start": {
                                "line": 942,
                                "column": 84
                            },
                            "end": {
                                "line": 942,
                                "column": 110
                            }
                        }
                    ]
                },
                "61": {
                    "line": 946,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 946,
                                "column": 12
                            },
                            "end": {
                                "line": 946,
                                "column": 12
                            }
                        },
                        {
                            "start": {
                                "line": 946,
                                "column": 12
                            },
                            "end": {
                                "line": 946,
                                "column": 12
                            }
                        }
                    ]
                },
                "62": {
                    "line": 946,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 946,
                                "column": 17
                            },
                            "end": {
                                "line": 946,
                                "column": 36
                            }
                        },
                        {
                            "start": {
                                "line": 946,
                                "column": 40
                            },
                            "end": {
                                "line": 946,
                                "column": 60
                            }
                        }
                    ]
                },
                "63": {
                    "line": 956,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 956,
                                "column": 8
                            },
                            "end": {
                                "line": 956,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 956,
                                "column": 8
                            },
                            "end": {
                                "line": 956,
                                "column": 8
                            }
                        }
                    ]
                },
                "64": {
                    "line": 960,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 960,
                                "column": 8
                            },
                            "end": {
                                "line": 960,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 960,
                                "column": 8
                            },
                            "end": {
                                "line": 960,
                                "column": 8
                            }
                        }
                    ]
                },
                "65": {
                    "line": 982,
                    "type": "cond-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 982,
                                "column": 47
                            },
                            "end": {
                                "line": 982,
                                "column": 48
                            }
                        },
                        {
                            "start": {
                                "line": 982,
                                "column": 51
                            },
                            "end": {
                                "line": 982,
                                "column": 65
                            }
                        }
                    ]
                },
                "66": {
                    "line": 983,
                    "type": "cond-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 983,
                                "column": 50
                            },
                            "end": {
                                "line": 983,
                                "column": 55
                            }
                        },
                        {
                            "start": {
                                "line": 983,
                                "column": 58
                            },
                            "end": {
                                "line": 983,
                                "column": 72
                            }
                        }
                    ]
                },
                "67": {
                    "line": 1004,
                    "type": "cond-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 1004,
                                "column": 49
                            },
                            "end": {
                                "line": 1004,
                                "column": 60
                            }
                        },
                        {
                            "start": {
                                "line": 1004,
                                "column": 63
                            },
                            "end": {
                                "line": 1004,
                                "column": 70
                            }
                        }
                    ]
                },
                "68": {
                    "line": 1005,
                    "type": "cond-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 1005,
                                "column": 32
                            },
                            "end": {
                                "line": 1005,
                                "column": 39
                            }
                        },
                        {
                            "start": {
                                "line": 1005,
                                "column": 42
                            },
                            "end": {
                                "line": 1005,
                                "column": 47
                            }
                        }
                    ]
                },
                "69": {
                    "line": 1011,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 1011,
                                "column": 12
                            },
                            "end": {
                                "line": 1011,
                                "column": 12
                            }
                        },
                        {
                            "start": {
                                "line": 1011,
                                "column": 12
                            },
                            "end": {
                                "line": 1011,
                                "column": 12
                            }
                        }
                    ]
                },
                "70": {
                    "line": 1012,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 1012,
                                "column": 16
                            },
                            "end": {
                                "line": 1012,
                                "column": 16
                            }
                        },
                        {
                            "start": {
                                "line": 1012,
                                "column": 16
                            },
                            "end": {
                                "line": 1012,
                                "column": 16
                            }
                        }
                    ]
                },
                "71": {
                    "line": 1032,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 1032,
                                "column": 8
                            },
                            "end": {
                                "line": 1032,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 1032,
                                "column": 8
                            },
                            "end": {
                                "line": 1032,
                                "column": 8
                            }
                        }
                    ]
                },
                "72": {
                    "line": 1052,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 1052,
                                "column": 8
                            },
                            "end": {
                                "line": 1052,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 1052,
                                "column": 8
                            },
                            "end": {
                                "line": 1052,
                                "column": 8
                            }
                        }
                    ]
                },
                "73": {
                    "line": 1067,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 1067,
                                "column": 8
                            },
                            "end": {
                                "line": 1067,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 1067,
                                "column": 8
                            },
                            "end": {
                                "line": 1067,
                                "column": 8
                            }
                        }
                    ]
                },
                "74": {
                    "line": 1109,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 1109,
                                "column": 8
                            },
                            "end": {
                                "line": 1109,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 1109,
                                "column": 8
                            },
                            "end": {
                                "line": 1109,
                                "column": 8
                            }
                        }
                    ]
                },
                "75": {
                    "line": 1109,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 1109,
                                "column": 13
                            },
                            "end": {
                                "line": 1109,
                                "column": 22
                            }
                        },
                        {
                            "start": {
                                "line": 1109,
                                "column": 26
                            },
                            "end": {
                                "line": 1109,
                                "column": 33
                            }
                        }
                    ]
                },
                "76": {
                    "line": 1110,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 1110,
                                "column": 12
                            },
                            "end": {
                                "line": 1110,
                                "column": 12
                            }
                        },
                        {
                            "start": {
                                "line": 1110,
                                "column": 12
                            },
                            "end": {
                                "line": 1110,
                                "column": 12
                            }
                        }
                    ]
                },
                "77": {
                    "line": 1124,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 1124,
                                "column": 8
                            },
                            "end": {
                                "line": 1124,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 1124,
                                "column": 8
                            },
                            "end": {
                                "line": 1124,
                                "column": 8
                            }
                        }
                    ]
                },
                "78": {
                    "line": 1125,
                    "type": "cond-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 1125,
                                "column": 89
                            },
                            "end": {
                                "line": 1125,
                                "column": 93
                            }
                        },
                        {
                            "start": {
                                "line": 1125,
                                "column": 96
                            },
                            "end": {
                                "line": 1125,
                                "column": 101
                            }
                        }
                    ]
                },
                "79": {
                    "line": 1125,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 1125,
                                "column": 22
                            },
                            "end": {
                                "line": 1125,
                                "column": 27
                            }
                        },
                        {
                            "start": {
                                "line": 1125,
                                "column": 31
                            },
                            "end": {
                                "line": 1125,
                                "column": 84
                            }
                        }
                    ]
                },
                "80": {
                    "line": 1128,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 1128,
                                "column": 16
                            },
                            "end": {
                                "line": 1128,
                                "column": 16
                            }
                        },
                        {
                            "start": {
                                "line": 1128,
                                "column": 16
                            },
                            "end": {
                                "line": 1128,
                                "column": 16
                            }
                        }
                    ]
                },
                "81": {
                    "line": 1128,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 1128,
                                "column": 21
                            },
                            "end": {
                                "line": 1128,
                                "column": 66
                            }
                        },
                        {
                            "start": {
                                "line": 1129,
                                "column": 25
                            },
                            "end": {
                                "line": 1129,
                                "column": 61
                            }
                        },
                        {
                            "start": {
                                "line": 1129,
                                "column": 65
                            },
                            "end": {
                                "line": 1129,
                                "column": 70
                            }
                        }
                    ]
                },
                "82": {
                    "line": 1135,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 1135,
                                "column": 8
                            },
                            "end": {
                                "line": 1135,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 1135,
                                "column": 8
                            },
                            "end": {
                                "line": 1135,
                                "column": 8
                            }
                        }
                    ]
                },
                "83": {
                    "line": 1171,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 1171,
                                "column": 18
                            },
                            "end": {
                                "line": 1171,
                                "column": 35
                            }
                        },
                        {
                            "start": {
                                "line": 1171,
                                "column": 39
                            },
                            "end": {
                                "line": 1171,
                                "column": 40
                            }
                        }
                    ]
                },
                "84": {
                    "line": 1174,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 1174,
                                "column": 8
                            },
                            "end": {
                                "line": 1174,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 1174,
                                "column": 8
                            },
                            "end": {
                                "line": 1174,
                                "column": 8
                            }
                        }
                    ]
                },
                "85": {
                    "line": 1174,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 1174,
                                "column": 12
                            },
                            "end": {
                                "line": 1174,
                                "column": 17
                            }
                        },
                        {
                            "start": {
                                "line": 1174,
                                "column": 21
                            },
                            "end": {
                                "line": 1174,
                                "column": 48
                            }
                        }
                    ]
                },
                "86": {
                    "line": 1201,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 1201,
                                "column": 8
                            },
                            "end": {
                                "line": 1201,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 1201,
                                "column": 8
                            },
                            "end": {
                                "line": 1201,
                                "column": 8
                            }
                        }
                    ]
                },
                "87": {
                    "line": 1201,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 1201,
                                "column": 12
                            },
                            "end": {
                                "line": 1201,
                                "column": 60
                            }
                        },
                        {
                            "start": {
                                "line": 1201,
                                "column": 64
                            },
                            "end": {
                                "line": 1201,
                                "column": 119
                            }
                        }
                    ]
                },
                "88": {
                    "line": 1205,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 1205,
                                "column": 16
                            },
                            "end": {
                                "line": 1205,
                                "column": 37
                            }
                        },
                        {
                            "start": {
                                "line": 1205,
                                "column": 41
                            },
                            "end": {
                                "line": 1205,
                                "column": 74
                            }
                        }
                    ]
                },
                "89": {
                    "line": 1209,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 1209,
                                "column": 8
                            },
                            "end": {
                                "line": 1209,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 1209,
                                "column": 8
                            },
                            "end": {
                                "line": 1209,
                                "column": 8
                            }
                        }
                    ]
                },
                "90": {
                    "line": 1209,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 1209,
                                "column": 13
                            },
                            "end": {
                                "line": 1209,
                                "column": 18
                            }
                        },
                        {
                            "start": {
                                "line": 1209,
                                "column": 22
                            },
                            "end": {
                                "line": 1209,
                                "column": 36
                            }
                        }
                    ]
                },
                "91": {
                    "line": 1213,
                    "type": "switch",
                    "locations": [
                        {
                            "start": {
                                "line": 1215,
                                "column": 16
                            },
                            "end": {
                                "line": 1216,
                                "column": 22
                            }
                        },
                        {
                            "start": {
                                "line": 1218,
                                "column": 16
                            },
                            "end": {
                                "line": 1219,
                                "column": 22
                            }
                        },
                        {
                            "start": {
                                "line": 1221,
                                "column": 16
                            },
                            "end": {
                                "line": 1222,
                                "column": 22
                            }
                        },
                        {
                            "start": {
                                "line": 1224,
                                "column": 16
                            },
                            "end": {
                                "line": 1225,
                                "column": 22
                            }
                        },
                        {
                            "start": {
                                "line": 1227,
                                "column": 16
                            },
                            "end": {
                                "line": 1227,
                                "column": 29
                            }
                        }
                    ]
                },
                "92": {
                    "line": 1221,
                    "type": "cond-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 1221,
                                "column": 34
                            },
                            "end": {
                                "line": 1221,
                                "column": 35
                            }
                        },
                        {
                            "start": {
                                "line": 1221,
                                "column": 38
                            },
                            "end": {
                                "line": 1221,
                                "column": 71
                            }
                        }
                    ]
                },
                "93": {
                    "line": 1221,
                    "type": "cond-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 1221,
                                "column": 54
                            },
                            "end": {
                                "line": 1221,
                                "column": 59
                            }
                        },
                        {
                            "start": {
                                "line": 1221,
                                "column": 62
                            },
                            "end": {
                                "line": 1221,
                                "column": 71
                            }
                        }
                    ]
                },
                "94": {
                    "line": 1224,
                    "type": "cond-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 1224,
                                "column": 34
                            },
                            "end": {
                                "line": 1224,
                                "column": 35
                            }
                        },
                        {
                            "start": {
                                "line": 1224,
                                "column": 38
                            },
                            "end": {
                                "line": 1224,
                                "column": 72
                            }
                        }
                    ]
                },
                "95": {
                    "line": 1224,
                    "type": "cond-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 1224,
                                "column": 59
                            },
                            "end": {
                                "line": 1224,
                                "column": 60
                            }
                        },
                        {
                            "start": {
                                "line": 1224,
                                "column": 63
                            },
                            "end": {
                                "line": 1224,
                                "column": 72
                            }
                        }
                    ]
                },
                "96": {
                    "line": 1245,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 1245,
                                "column": 18
                            },
                            "end": {
                                "line": 1245,
                                "column": 35
                            }
                        },
                        {
                            "start": {
                                "line": 1245,
                                "column": 39
                            },
                            "end": {
                                "line": 1245,
                                "column": 55
                            }
                        }
                    ]
                },
                "97": {
                    "line": 1247,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 1247,
                                "column": 8
                            },
                            "end": {
                                "line": 1247,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 1247,
                                "column": 8
                            },
                            "end": {
                                "line": 1247,
                                "column": 8
                            }
                        }
                    ]
                },
                "98": {
                    "line": 1247,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 1247,
                                "column": 13
                            },
                            "end": {
                                "line": 1247,
                                "column": 33
                            }
                        },
                        {
                            "start": {
                                "line": 1247,
                                "column": 37
                            },
                            "end": {
                                "line": 1247,
                                "column": 64
                            }
                        }
                    ]
                }
            },
            "code": [
                "(function () { YUI.add('gallery-paginator-view', function (Y, NAME) {",
                "",
                "/**",
                " A Model class extension to be used to track \"pagination state\" of a paged set of control elements.",
                " For example, can be used to track the pagination status of a DataTable where the user selects limited",
                " portions for display, against a larger data set.",
                "",
                " The primary tools for maintaining \"page state\" is through the following attributes;",
                "",
                " * `totalItems` &nbsp;&nbsp;  Which represents the \"Total count of items of interest\" (See attribute [totalItems](#attr_totalItems) )",
                " * `itemsPerPage` &nbsp;&nbsp; Which represents the \"Count of items on each page\" (See attribute [itemsPerPage](#attr_itemsPerPage) )",
                " *  `page` &nbsp;&nbsp;  The currently selected page, within all pages required that encompass the above two attributes",
                "     (See attribute [page](#attr_page) )",
                "",
                " <h4>Usage</h4>",
                "",
                "     // setup a paginator model for 500 'foo' items, paged at 50 per page ...",
                "     var pagModel = new Y.PaginatorModel({",
                "        totalItems:     500,",
                "        itemsPerPage:   50",
                "     });",
                "     pagModel.get('totalPages');  // returns 10",
                "",
                "     pagModel.set('page',3);",
                "     pagModel.getAttrs(['lastPage','page','itemIndexStart','itemIndexEnd']);",
                "     // returns ... { lastPage:1, page:3, itemIndexStart:100, itemIndexEnd:149 }",
                "",
                " @module gallery-paginator-view",
                " @class Y.PaginatorModel",
                " @extends Y.Model",
                " @version 1.0.1",
                " @since 3.6.0",
                " **/",
                "Y.PaginatorModel = Y.Base.create('paginatorModel', Y.Model,[],{",
                "",
                "    /**",
                "     * Placeholder for calculated # of pages required",
                "     *",
                "     * @property _npages",
                "     * @type {Number}",
                "     * @protected",
                "     */",
                "    _npages: null,",
                "",
                "    /**",
                "     * Placeholder for Event subscribers created by this model, kept for detaching on destroy.",
                "     *",
                "     * @property _subscr",
                "     * @type {Array}",
                "     * @protected",
                "     */",
                "    _subscr: null,",
                "",
                "    /**",
                "     * Creates self-listeners to recalculate paginator settings on items / itemsPerPage",
                "     *  changes.  Also sets listener to track 'lastPage' changes.",
                "     *",
                "     * @method initializer",
                "     * @private",
                "     * @return this",
                "     */",
                "    initializer: function(){",
                "",
                "        this._recalcPagnParams();",
                "",
                "        this._subscr = [];",
                "        this._subscr.push( this.after('totalItemsChange',this._recalcPagnParams) );",
                "        this._subscr.push( this.after('itemsPerPageChange',this._recalcPagnParams) );",
                "",
                "        this._subscr.push( this.on('pageChange', this._changePage) );",
                "",
                "        return this;",
                "    },",
                "",
                "    /**",
                "     * Default destructor method, cleans up the listeners that were created.",
                "     *",
                "     * @method destructor",
                "     * @private",
                "     */",
                "    destructor: function () {",
                "        Y.Array.each(this._subscr,function(item){ item.detach(); });",
                "        this._subscr = null;",
                "    },",
                "",
                "    /**",
                "     * Method responds to changes to \"page\" (via `pageChange` attribute change), validates the change compared to the",
                "     *  current paginator settings, and stores the prior page in \"lastPage\".",
                "     *",
                "     * If a page change is invalid (i.e. less than 1, non-numeric or greater than `totalPages`) the change is prevented.",
                "     *",
                "     * @method _changePage",
                "     * @param {EventFacade} e `page` Attribute change event object",
                "     * @return Nothing",
                "     * @private",
                "     */",
                "    _changePage: function(e) {",
                "        var newPg  = e.newVal,",
                "            validp = true;",
                "",
                "        // check if page requested is zero/negative or we have null totalPages",
                "        if ( newPg < 1 || !this.get('totalPages') || !this.get('itemsPerPage') ) {",
                "            validp = false;",
                "        }",
                "",
                "        // also, check if requested page exceeds the totalPages ...",
                "        if ( validp && this.get('totalPages') && newPg > this.get('totalPages') ) {",
                "            validp = false;",
                "        }",
                "",
                "        // see if we passed above validity filters ...",
                "        if (validp) {",
                "            this.set('lastPage', e.prevVal);",
                "        } else {",
                "            e.preventDefault();",
                "        }",
                "",
                "        return true;",
                "    },",
                "",
                "    /**",
                "     * Method to calculate the current paginator settings, specifically the",
                "     *  number of pages required, including a modulus calc for extra records requiring a final page.",
                "     *",
                "     * This method resets the `page` to 1 (first page) upon completion.",
                "     *",
                "     * @method _recalcPagnParams",
                "     * @return {Boolean} Indicating the \"success\" or failure of recalculating the pagination state.",
                "     * @private",
                "     */",
                "    _recalcPagnParams: function(){",
                "        var nipp = this.get('itemsPerPage'),",
                "            ni   = this.get('totalItems');",
                "",
                "        // Calculate the # of pages ....",
                "        if ( nipp && nipp > 0 ) {",
                "",
                "            // basic pages,  items/itemsperpage",
                "            np = Math.floor( ni / nipp );",
                "",
                "            // adjust if not even multiple of pages (check modulus)",
                "            if ( ni % nipp > 0 ) {",
                "                np++;",
                "            }",
                "",
                "            // if no items, set one page as default",
                "            if(ni === 0) {",
                "                np = 1;",
                "            }",
                "",
                "            this._npages = np;",
                "",
                "            // If the current page is greater than the page count,",
                "            //   then set page to first ... this may happen if totalItems changes",
                "",
                "            if(np < this.get('page') ) {",
                "                this.set('page',1);",
                "            }",
                "",
                "            return true;",
                "        }",
                "        return false;",
                "    },",
                "",
                "    /**",
                "     * Getter for returning the start index for the current `page`",
                "     * @method _getItemIndexStart",
                "     * @return {Integer} Index of first item on the current `page`",
                "     * @private",
                "     */",
                "    _getItemIndexStart: function() {",
                "        return (this.get('totalItems')>0) ? (this.get('page')-1)*this.get('itemsPerPage') : null;",
                "/*        if (this.get('totalItems')>0)",
                "            return ( this.get('page') - 1 ) * this.get('itemsPerPage');",
                "        else",
                "            return null;  */",
                "    },",
                "",
                "    /**",
                "     * Getter for returning the inclusive ending index for the current `page`",
                "     * @method _getItemIndexEnd",
                "     * @return {Integer} Index of the last item on the current `page`",
                "     * @private",
                "     */",
                "    _getItemIndexEnd: function(){",
                "        var ni   = this.get('totalItems'),",
                "            iend = this.get('itemIndexStart') + this.get('itemsPerPage') - 1;",
                "",
                "        if(ni>0){",
                "            return ( iend > ni ) ? ni : iend;",
                "        } else {",
                "            return null;",
                "        }",
                "    }",
                "",
                "    /**",
                "     * Fires after the `page` attribute is changed",
                "     * @event pageChange",
                "     * @param {EventFacade} e",
                "     */",
                "    /**",
                "     * Fires after the `itemsPerPage` attribute is changed",
                "     * @event itemsPerPageChange",
                "     * @param {EventFacade} e",
                "     */",
                "    /**",
                "     * Fires after the `totalItems` attribute is changed",
                "     * @event totalItemsChange",
                "     * @param {EventFacade} e",
                "     */",
                "    /**",
                "     * Fires after the `totalPages` attribute is changed",
                "     * @event totalPagesChange",
                "     * @param {EventFacade} e",
                "     */",
                "    /**",
                "     * Fires after the `lastPage` attribute is changed",
                "     * @event lastPageChange",
                "     * @param {EventFacade} e",
                "     */",
                "",
                "},{",
                "    ATTRS:{",
                "",
                "        /**",
                "         * Total number of items used by this paginator-model.",
                "         *",
                "         * @attribute totalItems",
                "         * @type {Integer}",
                "         * @default null",
                "         */",
                "        totalItems:        {",
                "            value:      null,",
                "            validator:  Y.Lang.isNumber",
                "        },",
                "",
                "        /**",
                "         * Number of items per page for this paginator.",
                "         *",
                "         * @attribute itemsPerPage",
                "         * @type {Integer}",
                "         * @default null",
                "         */",
                "        itemsPerPage :   {",
                "            value:      null,",
                "            validator:  Y.Lang.isNumber",
                "        },",
                "",
                "        /**",
                "         * The current page selected for this paginator-model.",
                "         *",
                "         * This is intended as the **primary** change parameter to be .set() by the user, for interacting",
                "         * with the Paginator Model.",
                "         *",
                "         * @attribute page",
                "         * @type {Integer}",
                "         * @default 1",
                "         */",
                "        page: {",
                "            value:      1,",
                "            validator:  Y.Lang.isNumber",
                "        },",
                "",
                "        /**",
                "         * The last active `page` that was selected, this is populated by a `pageChange` listener on the Model.",
                "         *",
                "         * @attribute lastPage",
                "         * @type {Integer}",
                "         * @default null",
                "         */",
                "        lastPage: {",
                "            value:      null,",
                "            validator:  Y.Lang.isNumber",
                "        },",
                "",
                "        /**",
                "         * The total number of pages required to complete this pagination state (based upon `totalItems` and",
                "         * `itemsPerPage`, specifically).",
                "         *",
                "         * This attribute is set / maintained by the method [_recalcPagnParams](#method__recalcPagnParams) and",
                "         * shouldn't be set by the user.",
                "         *",
                "         * @attribute totalPages",
                "         * @type Integer",
                "         * @default null",
                "         */",
                "        totalPages: {",
                "            value:      null,",
                "            validator:  Y.Lang.isNumber,",
                "            getter:     function(){ return this._npages; }",
                "        },",
                "",
                "        /**",
                "         * The index for the starting item on the current `page` within the pagination state.",
                "         *",
                "         * This attribute is calculated on the fly in a getter method [_getItemIndexStart](#method__getItemIndexStart) and",
                "         * should not be \"set\" by the user, as it will be disregarded.",
                "         *",
                "         * @attribute itemIndexStart",
                "         * @type Integer",
                "         * @default null",
                "         */",
                "        itemIndexStart: {",
                "            value :     null,",
                "            validator:  Y.Lang.isNumber,",
                "            getter:     '_getItemIndexStart'",
                "        },",
                "",
                "        /**",
                "         * The index for the ending item on the current `page` within the pagination state.",
                "         *",
                "         * This attribute is calculated on the fly in a getter method [_getItemIndexEnd](#method__getItemIndexEnd) and",
                "         * should not be \"set\" by the user, as it will be disregarded.",
                "         *",
                "         * @attribute itemIndexEnd",
                "         * @type Integer",
                "         * @default null",
                "         */",
                "        itemIndexEnd: {",
                "            value :     null,",
                "            validator:  Y.Lang.isNumber,",
                "            getter:     '_getItemIndexEnd'",
                "        }",
                "    }",
                "",
                "});",
                "",
                "",
                "",
                "/**",
                " A View class extension to serve as a User Interface for the tracking of \"pagination state\" of",
                " a set of data.  This PaginatorView was specifically designed to work with PaginatorModel",
                " serving as the \"model\" (in MVC parlance), although would work with any user-supplied model under conditions",
                " where similar attributes and attribute changes are mapped.",
                "",
                " The PaginatorView was originally designed to function with DataTable (See Y.DataTable.Paginator) for managing the UI",
                " and page state of paginated tables, although it isn't necessarily limited to that application.  This View responds to",
                " the model's attribute `xxxxChange` events and updates the UI accordingly.",
                "",
                " The PaginatorView utilizes an HTML template concept, where certain replaceable tokens uniquely related to this view,",
                " in addition to all of the model's attributes, can be defined for positioning within the Paginator container.",
                "",
                " <h4>Usage</h4>",
                "",
                "     // Setup a paginator view based on a data model for 500 items, paged at 50 per page ...",
                "     var pagView = new Y.PaginatorView(",
                "        container:  '#myPagDIV',",
                "        paginatorTemplate:  '#script-tmpl-mypag',",
                "        model:  new Y.PaginatorModel({",
                "            totalItems:     500,",
                "            itemsPerPage:   50",
                "            })",
                "     }).render();",
                "",
                " <h4>View 'container'</h4>",
                " The [container](#attr_container) attribute is the only **REQUIRED** attribute for this View, primarily because we",
                " need to know *where* to construct it positionally on the page.",
                "",
                " This view has been designed such that the `container` setting can be either (a) an actual Y.Node instance OR",
                " (b) a DOM css selector ID ... assumed if the container setting is a {String} with the first character is '#'.",
                "",
                " <h4>Paginator HTML Template</h4>",
                " The \"HTML template\" for this PaginatorView is the guts of displaying the user interface.  We refer to this as",
                " the \"template\" because it typically contains standard HTML but also includes \"replacement tokens\" identified",
                " by ```{your token here}``` curly braces.",
                "",
                " A definition of HTML Template for the paginator can be achieved through several methods;",
                " <ul>",
                " <li>Including the HTML template as content within the original `container` DOM element ... template retrived via .getHTML()</li>",
                " <li>Setting the <a href=\"#attr_paginatorTemplate\">paginatorTemplate</a> attribute to either the template 'string', or",
                " giving a SCRIPT template DOM[id] or Y.Node</li>",
                " <li>Doing neither of the above ... where the default template is used (from <a href=\"#property_TMPL_PAGINATOR\">TMPL_PAGINATOR</a>",
                " static property)</li>",
                " </ul>",
                " (Note: If for some reason it is desired to not have a \"template\" (because you are rendering one outside of this view), setting",
                " ```paginatorTemplate:''``` will override the default.)",
                "",
                " A noteworthy component of the \"HTML template\" includes the token **```{pageLinks}```**, which signifies where links generated by this",
                " view for each page selector are to be placed.  In some instances (e.g. a Paginator Bar, with an INPUT[text] for page #) you may not",
                " desire to have every link generated ... (think of a paginator with hundreds of pages, thus hundreds of links).",
                "",
                " A sub-template is used to generate the \"{pageLinks}\" content, please see attribute [pageLinkTemplate](#attr_pageLinkTemplate) for",
                " information.",
                "",
                " For a listing of all recognized *\"replaceable tokens\"* that can be included in the template is shown on",
                " the [render](#method_render) method API page.",
                "",
                " <h6>Data Attribute</h6>",
                " A key takeaway for using this View is that page links (i.e. actionable selectable elements, such as A,",
                " BUTTON, DIV, etc...) for a specific page use an HTML \"data\" attribute which defines the page associated with the link.",
                "",
                " The data attribute used within the view is `data-pglink`, and can have a value setting of \"first\", \"last\", \"prev\",",
                " \"next\" or any numeric page number.",
                "",
                " For example, the following are all valid page link identifiers;",
                "",
                "     <a href=\"#\" data-pglink=\"last\" title=\"Last Page\">Last</a>",
                "     <button data-pglink=\"6\" class=\"myBtn\">Page 6</button>",
                "     <select><option data-pglink=\"19\" value=\"19\">Page 19 : Rows 9501 - 10000</option></select>",
                "",
                "",
                " <h4>Connecting to \"other\" UI Elements / Widgets</h4>",
                " This View can be restricted to situations where the use desires to construct their own unique `pageLinkTemplate` and",
                " create their own `events` attribute to set listeners.",
                "",
                " For example, the PaginatorView's [render](#event_render) event can be listened for to ensure that the paginator has",
                " been initialized and setup.",
                "",
                " Additionally the [pageChange](#event_pageChange) event (of the view) can be listened for to do any updating to user-specified",
                " page links and or a supporting YUI Widget.",
                "",
                " Please see the examples for a guide on how to achieve this.",
                "",
                " @module gallery-paginator-view",
                " @class Y.PaginatorView",
                " @extends Y.View",
                " @since 3.6.0",
                " **/",
                "Y.PaginatorView = Y.Base.create('paginatorView', Y.View, [], {",
                "",
                "//================   S T A T I C     P R O P E R T I E S     ====================",
                "",
                "    /**",
                "     Default HTML content to be used as basis for Paginator.  This default is only used if the paginatorTemplate",
                "     attribute is unused OR the container does not contain the HTML template.",
                "",
                "     The paginator HTML content includes replacement tokens throughout.",
                "",
                "     The DEFAULT setting is;",
                "",
                "     <a href=\"#\" data-pglink=\"first\" class=\"{pageLinkClass}\" title=\"First Page\">First</a> |",
                "     <a href=\"#\" data-pglink=\"prev\" class=\"{pageLinkClass}\" title=\"Prior Page\">Prev</a> |",
                "     {pageLinks}",
                "     | <a href=\"#\" data-pglink=\"next\" class=\"{pageLinkClass}\" title=\"Next Page\">Next</a> |",
                "     <a href=\"#\" data-pglink=\"last\" class=\"{pageLinkClass}\" title=\"Last Page\">Last</a>",
                "",
                "     @property TMPL_PAGINATOR",
                "     @type String",
                "     **/",
                "",
                "    TMPL_PAGINATOR :  '<a href=\"#\" data-pglink=\"first\" class=\"{pageLinkClass}\" title=\"First Page\">First</a> | '",
                "            + '<a href=\"#\" data-pglink=\"prev\" class=\"{pageLinkClass}\" title=\"Prior Page\">Prev</a> | '",
                "            + '{pageLinks}'",
                "            + ' | <a href=\"#\" data-pglink=\"next\" class=\"{pageLinkClass}\" title=\"Next Page\">Next</a> | '",
                "            + '<a href=\"#\" data-pglink=\"last\" class=\"{pageLinkClass}\" title=\"Last Page\">Last</a>',",
                "",
                "    /**",
                "     Default HTML content that will be used to prepare individual links within the Paginator and inserted",
                "     at the location denoted **{pageLinks}** replacement token in the template.",
                "",
                "     The DEFAULT setting is;",
                "",
                "     <a href=\"#\" data-pglink=\"{page}\" class=\"{pageLinkClass}\" title=\"Page {page}\">{page}</a>",
                "",
                "     @property TMPL_LINK",
                "     @type {String}",
                "     **/",
                "    TMPL_LINK : '<a href=\"#\" data-pglink=\"{page}\" class=\"{pageLinkClass}\" title=\"Page {page}\">{page}</a>',",
                "",
                "    TMPL_basic : '{firstPage} {prevPage} {pageLinks} {nextPage} {lastPage}',",
                "",
                "",
                "    TMPL_pglinks:   '{pageLinks}',",
                "",
                "    /**",
                "     Default HTML template for the Rows Per Page SELECT box signified by the **{selectRowsPerPage}** replacement toke",
                "     within the paginator template.",
                "",
                "     The DEFAULT setting is;",
                "",
                "     <select class=\"{selectRPPClass}\"></select>",
                "",
                "     @property TMPL_selectRPP",
                "     @type String",
                "     **/",
                "    TMPL_selectRPP:  '<select class=\"{selectRPPClass}\"></select>',",
                "",
                "    /**",
                "     Default HTML template for the Page SELECT box signified by the **{selectPage}** replacement token with the",
                "     paginator template.",
                "",
                "     The DEFAULT setting is;",
                "",
                "     <select class=\"{selectPageClass}\"></select>",
                "",
                "     @property TMPL_selectPage",
                "     @type String",
                "     **/",
                "    TMPL_selectPage: '<select class=\"{selectPageClass}\"></select>',",
                "",
                "    /**",
                "     Default HTML template for the \"Rows Per Page\" INPUT[text] control signified by the **{inputRowsPerPage}** replacement",
                "     token within the paginator template.",
                "",
                "     The DEFAULT setting is;",
                "",
                "     <input type=\"text\" class=\"{inputRPPClass}\" value=\"{itemsPerPage}\"/>",
                "",
                "     @property TMPL_inputRPP",
                "     @type String",
                "     **/",
                "    TMPL_inputRPP:   '<input type=\"text\" class=\"{inputRPPClass}\" value=\"{itemsPerPage}\"/>',",
                "",
                "    /**",
                "     Default HTML template for the \"Page\" INPUT[text] control signified by the **{inputPage}** replacement token with the",
                "     paginator template.",
                "",
                "     The DEFAULT setting is;",
                "",
                "     <input type=\"text\" class=\"{inputPageClass}\" value=\"{page}\"/>",
                "",
                "     @property TMPL_inputPage",
                "     @type String",
                "     **/",
                "    TMPL_inputPage:  '<input type=\"text\" class=\"{inputPageClass}\" value=\"{page}\"/>',",
                "",
                "",
                "    /**",
                "     A public property, provided as a convenience property, equivalent to the \"model\" attribute.",
                "",
                "     @property model",
                "     @type Y.PaginatorModel",
                "     @default null",
                "     @public",
                "     **/",
                "    model: null,",
                "",
                "//================   P R I V A T E    P R O P E R T I E S     ====================",
                "",
                "    /**",
                "     * Placeholder property to store the initial container HTML for used later in the",
                "     *  render method.  This property is populated by the View initializer.",
                "     *",
                "     * @property _pagHTML",
                "     * @protected",
                "     */",
                "    _pagHTML:       null,",
                "",
                "",
                "     //  Various class placeholders for UI elements",
                "    _cssPre:            'yui3-pagview',",
                "    _classContainer:    null,",
                "    _classLinkPage:     null,",
                "    _classLinkPageList: null,",
                "    _classLinkPageActive: null,",
                "    _classSelectRPP:    null,",
                "    _classSelectPage:   null,",
                "    _classInputRPP:     null,",
                "    _classInputPage:    null,",
                "",
                "",
                "    /**",
                "     * Holder for Event subscribers created by this View, saved so they can be cleaned up later.",
                "     *",
                "     * @property _subscr",
                "     * @type Array",
                "     * @default null",
                "     * @protected",
                "     */",
                "    _subscr: null,",
                "",
                "",
                "    /**",
                "     * Helper function, because I was too lazy to figure out how to get widget getClassName working",
                "     *",
                "     * @method _myClassName",
                "     * @param String variable number of strings, to be concatenated",
                "     * @return String",
                "     * @private",
                "     */",
                "    _myClassName: function() {",
                "        var rtn,i;",
                "        if (arguments && arguments.length>0) {",
                "            rtn = this._cssPre;",
                "            for(i=0; i<arguments.length; i++){",
                "                rtn += '-' + arguments[i];",
                "            }",
                "            return rtn;",
                "        }",
                "        return '';",
                "    },",
                "",
                "    /**",
                "     * Initializer sets up classes and the initial container and HTML templating for this View.",
                "     *",
                "     * @method initializer",
                "     * @private",
                "     * @return this",
                "     */",
                "    initializer: function(){",
                "        var cont,pagTmpl;",
                "        //",
                "        //  Init class names",
                "        //",
                "        this._classContainer  = this._myClassName('container');",
                "        this._classLinkPage   = this._myClassName('link','page');",
                "        this._classLinkPageList = this._myClassName('link','page','list');",
                "        this._classLinkPageActive  = this._myClassName('link','page','active');",
                "        this._classInputPage  = this._myClassName('input','page');",
                "        this._classSelectPage = this._myClassName('select','page');",
                "        this._classSelectRPP  = this._myClassName('select','rowsperpage');",
                "        this._classInputRPP   = this._myClassName('input','rowsperpage');",
                "",
                "        //",
                "        //  Setup the container for the paginator, and retrieve the \"HTML template\"",
                "        //    from any of the following in order;",
                "        //      (a) the \"container\" HTML,",
                "        //      (b) user specified template via 'paginatorTemplate' attribute,",
                "        //      (c) finally, the default internal template via valueFn.",
                "        //",
                "        cont = this.get('container');",
                "        if (Y.Lang.isString(cont) && pagTmpl[0] === '#' ){",
                "            this.set('container', Y.one(cont) );",
                "        }",
                "",
                "        cont = this.get('container');",
                "",
                "        if ( cont instanceof Y.Node && cont.getHTML() ) {",
                "",
                "            this._pagHTML = cont.getHTML();",
                "",
                "        } else if ( cont instanceof Y.Node && this.get('paginatorTemplate') ) {",
                "",
                "            pagTmpl = this.get('paginatorTemplate');",
                "",
                "            // is user-supplied setting, but they forgot to convert via Y.one().getHTML,",
                "            //  do it for them ...",
                "            if ( pagTmpl ) {",
                "                this._pagHTML = (pagTmpl[0] === '#') ? Y.one( pagTmpl).getHTML() : pagTmpl;",
                "            }",
                "        }",
                "",
                "        //",
                "        // Setup the container and model listeners",
                "        //",
                "        this._bindUI();",
                "",
                "        return this;",
                "    },",
                "",
                "",
                "    /**",
                "     * Setup listeners on this View, specifically on all UI elements and",
                "     *  \"most importantly\", listen to \"pageChange\" on the underlying Model.",
                "     *",
                "     * @method _bindUI",
                "     * @return this",
                "     * @private",
                "     */",
                "    _bindUI: function(){",
                "        var pag_cont =  this.get('container');",
                "        this._subscr = [];",
                "",
                "        //",
                "        // Set a listener on the Model change events ... page most important!",
                "        //",
                "        if ( this.get('model') ) {",
                "            this.model = this.get('model');",
                "            this._subscr.push( this.model.after('pageChange', Y.bind(this._modelPageChange,this)) );",
                "            this._subscr.push( this.model.after('itemsPerPageChange', Y.bind(this._modelStateChange,this)) );",
                "            this._subscr.push( this.model.after('totalItemsChange', Y.bind(this._modelItemsChange,this)) );",
                "        }",
                "",
                "        // update rowOptions",
                "        this._subscr.push( this.after('render', Y.bind(this._updateRPPSelect,this)) );",
                "",
                "        // delegate container events, done here instead of \"events\" property to give more flexibility",
                "        this._subscr.push( pag_cont.delegate( 'click',  this._clickChangePage,'.'+this._classLinkPage, this) );",
                "        this._subscr.push( pag_cont.delegate( 'change', this._selectChangeRowOptions, '.'+this._classSelectRPP, this) );",
                "        this._subscr.push( pag_cont.delegate( 'change', this._inputChangePage, '.'+this._classInputPage, this) );",
                "        this._subscr.push( pag_cont.delegate( 'change', this._selectChangeRowOptions, '.'+this._classInputRPP, this) );",
                "",
                "        // after rendering and/or, resize if required ...",
                "        this._subscr.push( this.after(['render','pageChange'], this.resizePaginator) );",
                "",
                "        return this;",
                "    },",
                "",
                "",
                "    /**",
                "     * Default destructor method, cleans up the listeners that were created and",
                "     *  cleans up the view contents.",
                "     *",
                "     * @method destructor",
                "     * @private",
                "     */",
                "    destructor: function () {",
                "        Y.Array.each(this._subscr,function(item){",
                "            if(Y.Lang.isArray(item)) {",
                "                Y.Array.each(item,function(si){ si.detach(); });",
                "            } else {",
                "                item.detach();",
                "            }",
                "        });",
                "        this._subscr = null;",
                "        this.get('container').empty();",
                "    },",
                "",
                "",
                "    /**",
                "     Renders the current settings of the Paginator using the supplied HTML content from the",
                "     for the paginator template and Y.Lang.sub for replacement of tokens and of Model attributes.",
                "",
                "     NOTE: The render method is not called on every page \"click\", but is called if the Model changes",
                "     `totalItems` or `itemsPerPage`.",
                "",
                "     <h6>Recognized tokens:</h6>",
                "     Recognizeable tokens are supported, specifically as *placeholders* within the html template where generated content",
                "     can be inserted and ultimately rendered in the view container.",
                "",
                "     Tokens replaced within this method include all of the PaginatorModel attributes;",
                "",
                "     **{page}**, **{totalItems}**, **{itemsPerPage}**, **{lastPage}**, **{totalPages}**, **{itemIndexStart}**, **{itemIndexEnd}**",
                "",
                "     Additionally, specific tokens intended for view HTML construction and recognized by PaginatorView are;",
                "     <ul>",
                "     <li><b>{pageLinks}</b> : The placeholder within the html template where the View-generated page links will",
                "     <br/>be inserted via a loop over all pages (DEFAULT: see <a href=\"#property_TMPL_LINK\">TMPL_LINK</a>)</li>",
                "     <li><b>{inputPage}</b> : An INPUT[type=text] box which the view listens for change events on",
                "     (Default: see <a href=\"#property_TMPL_inputPage\">TMPL_inputPage</a>)</li>",
                "     <li><b>{selectRowsPerPage}</b> : A SELECT type pulldown that will be populated with the <a href=\"#attr_pageOptions\">pageOptions</a>",
                "     array <br/>of \"Rows per Page\" selections (Default: see <a href=\"#property_TMPL_selectRPP\">TMPL_selectRPP</a>)</li>",
                "     <li><b>{inputRowsPerPage}</b> : An INPUT[type=text] box what will be listened to for changes to \"Rows per Page\"",
                "     (Default: see <a href=\"#property_TMPL_inputRPP\">TMPL_inputRPP</a>)</li>",
                "     <li><b>{selectPage}</b> (Not implemented at this time!)</li>",
                "     <li><b>{pageStartIndex}</b> : Represents the starting index for a specific \"page\" (intended for use",
                "     within <a href=\"#attr_pageLinkTemplate\">pageLinkTemplate</a> )</li>",
                "     <li><b>{pageEndIndex}</b> : Represents the ending index for a specific \"page\" (intended for use",
                "     within <a href=\"#attr_pageLinkTemplate\">pageLinkTemplate</a> )</li>",
                "     </ul>",
                "",
                "     And if that wasn't enough, the CSS class names supported by this view are also provided via tokens as;",
                "     **{pagClass}**, **{pageLinkClass}**, **{inputPageClass}**, **{selectRPPClass}**, **{selectPageClass}**,",
                "     *  **{inputRPPClass}**",
                "",
                "",
                "     This method utilizes the Y.substitute tool (with recursion) for token replacement.",
                "",
                "     The `container` visibility is disabled during construction and insertion of DOM elements into the `container` node.",
                "",
                "     This method fires the `render` event, for View listeners.",
                "",
                "     @method render",
                "     @public",
                "     @return this",
                "     **/",
                "    render: function() {",
                "        var pag_cont = this.get('container'),",
                "            model    = this.get('model'),",
                "            nsize    = model.get('totalItems'),",
                "            nperpage = model.get('itemsPerPage'),",
                "            npage    = model.get('totalPages'),",
                "            cpage    = model.get('page') || 1,",
                "            pl_html  = '',",
                "            plinkTMPL= this.get('pageLinkTemplate'),",
                "            plIStart = 0,",
                "            plIEnd   = 0,",
                "            pg_html,plink_tmpl,i;",
                "",
                "        if ( nsize<0 || !nperpage || !pag_cont ) {",
                "            return this;",
                "        }",
                "",
                "        //TODO: this may be unnecessary ...",
                "        if(nsize === 0) {",
                "            npage = 1;",
                "            cpage = 1;",
                "        }",
                "",
                "    //",
                "    //  Constructing the Paginator HTML,",
                "    //      first construct the individual Page links ...",
                "    //",
                "",
                "        // ... only burn thru this if the token is included in template ...",
                "        if ( this._pagHTML.search(/\\{pageLinks\\}/) !== -1 ) {",
                "            for(i=0; i<npage; i++) {",
                "",
                "                plClass = this._classLinkPage + ' ' + this._classLinkPageList;",
                "                if ( i+1 === cpage ){",
                "                    plClass += ' '+ this._classLinkPageActive;",
                "                }",
                "",
                "                plIStart = i*nperpage + 1,",
                "                plIEnd   = plIStart + nperpage - 1;",
                "                plIEnd = ( plIEnd >= nsize ) ? nsize : plIEnd;",
                "",
                "                pl_html += Y.Lang.sub( plinkTMPL, {",
                "                    page:           (i+1),",
                "                    pageLinkClass:  plClass || '',",
                "                    pageStartIndex: plIStart,",
                "                    pageEndIndex:   plIEnd",
                "                });",
                "            }",
                "        }",
                "",
                "        // ... then build the full HTML",
                "        pg_html = this._pagHTML;",
                "        pag_cont.setStyle('visibility','hidden');",
                "        pag_cont.setHTML('');         //pag_cont.empty();",
                "",
                "        // and load it into the container",
                "        pg_html = '<div class=\"{pagClass}\" tabindex=\"-1\">' + pg_html + '</div>';",
                "",
                "        // use Y.substitute, because it is recursive ...",
                "        plink_tmpl = Y.substitute( pg_html, Y.mix({",
                "            pageLinks:          pl_html || '',",
                "            pageLinkClass:      this._classLinkPage,",
                "            pagClass:           this._classContainer,",
                "            selectRowsPerPage:  this.TMPL_selectRPP || '',",
                "            selectPage:         this.TMPL_selectPage || '',",
                "            inputPage:          this.TMPL_inputPage || '',",
                "            inputRowsPerPage:   this.TMPL_inputRPP || '',",
                "            selectRPPClass:     this._classSelectRPP,",
                "            selectPageClass:    this._classSelectPage,",
                "            inputRPPClass:      this._classInputRPP,",
                "            inputPageClass:     this._classInputPage",
                "        },model.getAttrs()),null,true);",
                "",
                "        pag_cont.append(plink_tmpl);",
                "",
                "    //",
                "    //  Turn the View visibility on, and set the initial page",
                "    //",
                "        pag_cont.setStyle('visibility','');",
                "",
                "        this._processPageChange(cpage);",
                "",
                "        this.fire('render');",
                "",
                "        return this;",
                "    },",
                "",
                "    disable: function(){",
                "        this.fire('disablePaginator');",
                "    },",
                "",
                "    /**",
                "     * Main handler that accomodates Page changes and updates visual cues for highlighting",
                "     *  the selected page link and the active Page selector link list.",
                "     *",
                "     * This method also fires the View's \"pageChange\" event.",
                "     *",
                "     * NOTE: This method is *private* because page changes should be made by the user at",
                "     * the Model level (Model.set('page',...) and not using the _processPageChange method.",
                "     *",
                "     * @method _processPageChange",
                "     * @param {Integer} cpage",
                "     * @private",
                "     */",
                "    _processPageChange: function(cpage) {",
                "        var model      = this.get('model'),",
                "            npage      = model.get('totalPages'),",
                "            lastPage   = model.get('lastPage'),",
                "            maxpls     = this.get('maxPageLinks'),",
                "            pag_cont   = this.get('container'),",
                "            linkOffset = this.get('linkListOffset'),",
                "            plNodes    = pag_cont.all('.'+ this._classLinkPageList),",
                "            plNodeCurrent, moreNodeL, moreNodeR, offs;",
                "",
                "        //",
                "        //  Toggle highlighting of active page selector (if enabled)",
                "        //",
                "        if ( plNodes && this.get('linkHighLight') ) {",
                "",
                "            plNodeCurrent = (plNodes && (cpage-1) < plNodes.size()) ? plNodes.item(cpage-1) : null;",
                "",
                "            // this check is only for visual elements that have pageLinks",
                "            //   (i.e. paginator bar won't have these )",
                "",
                "            if ( plNodeCurrent ) {",
                "                 plNodeCurrent.addClass( this._classLinkPageActive );",
                "            }",
                "",
                "            if ( lastPage && lastPage !== cpage ) {",
                "                plNodeCurrent = (plNodes && (lastPage-1) < plNodes.size()) ? plNodes.item(lastPage-1) : null;",
                "                if (plNodeCurrent) {",
                "                    plNodeCurrent.removeClass( this._classLinkPageActive );",
                "                }",
                "            }",
                "        }",
                "",
                "        // Update INPUT Page # field, if defined ...",
                "        if ( pag_cont.one('.'+this._classInputPage) ) {",
                "            pag_cont.one('.'+this._classInputPage).set('value',cpage);",
                "        }",
                "",
                "        // Update SELECT Items Per Page # field, if defined ...",
                "        if ( pag_cont.one('.'+this._classInputRPP) ) {",
                "            pag_cont.one('.'+this._classInputRPP).set('value',model.get('itemsPerPage'));",
                "        }",
                "",
                "        //",
                "        //  Toggle \"disabled\" on First/Prev or Next/Last selectors",
                "        //",
                "        if(model.get('totalItems') === 0) {",
                "            this._disablePageSelector(['1'],false);",
                "        }",
                "",
                "        if( npage === 1 ) {",
                "            this._disablePageSelector(['first','prev','last','next'],false);",
                "",
                "            // Special Case :  If no items returned, disable the Page 1 selector",
                "",
                "        } else if ( cpage === 1 && !this.get('circular') ) {",
                "",
                "            this._disablePageSelector(['first','prev']);",
                "            this._disablePageSelector(['last','next'],true);",
                "",
                "        } else if ( cpage === npage && !this.get('circular') ) {",
                "",
                "            this._disablePageSelector(['first','prev'],true);",
                "            this._disablePageSelector(['last','next']);",
                "",
                "        } else {  // enable all selectors ...",
                "            this._disablePageSelector(['first','prev','last','next'],true);",
                "        }",
                "",
                "        this.fire('pageChange',{state: model.getAttrs() });",
                "",
                "        //",
                "        //  Following code is only if user requests limited pageLinks,",
                "        //    Only continue if partial links are requested ...",
                "        //",
                "        if ( npage <= maxpls || !plNodes || ( plNodes && plNodes.size() === 0 ) ) {",
                "            return;",
                "        }",
                "",
                "        moreNodeL  = Y.Node.create('<span class=\"'+this._myClassName('more')+'\">'+this.get('pageLinkFiller')+'</span>'),",
                "        moreNodeR  = Y.Node.create('<span class=\"'+this._myClassName('more')+'\">'+this.get('pageLinkFiller')+'</span>');",
                "",
                "        // Clear out any old remaining 'more' nodes ...",
                "        pag_cont.all('.'+this._myClassName('more')).remove();",
                "",
                "        // determine offsets either side of current page",
                "        offs = this._calcOffset(cpage,linkOffset);",
                "",
                "        //",
                "        // Hide all page # links outside of offsets ...",
                "        //",
                "        plNodes.each(function(node,index){",
                "            if ( index === 0 && this.get('alwaysShowFirst') || index === npage-1 && this.get('alwaysShowLast') ) {",
                "                return true;",
                "            }",
                "",
                "            if ( index+1 < offs.left || index+1 > offs.right ){",
                "                node.addClass( this._myClassName('hide') );",
                "            } else{",
                "                node.removeClass( this._myClassName('hide') );",
                "            }",
                "        },this);",
                "",
                "        //",
                "        //  add the node either side of current page element PLUS offset",
                "        //",
                "        if ( offs.left - linkOffset > 0 ){",
                "            plNodes.item(offs.left-1).insert(moreNodeL,'before');",
                "        }",
                "",
                "        if ( offs.right + linkOffset <= npage ){",
                "            plNodes.item(offs.right-1).insert( moreNodeR,'after');",
                "        }",
                "",
                "        return true;",
                "",
                "    },",
                "",
                "    /**",
                "     * Helper method to calculate offset either side of Selected Page link",
                "     *  for abbreviated Page List.",
                "     *",
                "     *  Called by _processPageChange",
                "     *",
                "     * @method _calcOffset",
                "     * @param cpage {Integer} Current page number",
                "     * @param offset {Integer} Number of links both sides of page number to return for (usually 1)",
                "     * @return {Object} containing left {Integer} and right {Integer} properties",
                "     * @private",
                "     */",
                "    _calcOffset: function(cpage, offset) {",
                "        var npage     = this.get('model').get('totalPages'),",
                "            left_off  = ( cpage-offset < 1 ) ? 1 : (cpage-offset),",
                "            right_off = ( cpage+offset > npage) ? npage : (cpage+offset);",
                "",
                "        return {",
                "            left:left_off,",
                "            right:right_off",
                "        };",
                "    },",
                "",
                "",
                "    /**",
                "     * Method that toggles the visibility of Page Link selector fields based upon",
                "     * their data-pglink attribute setting.",
                "     *",
                "     *  Called by _processPageChange",
                "     *",
                "     * @method _disablePageSelector",
                "     * @param linkSel",
                "     * @param visible",
                "     * @private",
                "     */",
                "    _disablePageSelector : function(linkSel, visible){",
                "        linkSel = ( !Y.Lang.isArray(linkSel) ) ? [ linkSel ] : linkSel;",
                "        visible = ( visible ) ? visible : false;",
                "        var sel_srch = '[data-{suffix}=\"{sdata}\"]',",
                "            pag_cont = this.get('container');",
                "",
                "        Y.Array.each(linkSel,function(pgid){",
                "            var node = pag_cont.one(Y.Lang.sub(sel_srch,{suffix:'pglink',sdata:pgid}) );",
                "            if ( node ) {",
                "                if (visible) {",
                "                    node.removeClass(this._myClassName('disabled'));",
                "                } else {",
                "                    node.addClass(this._myClassName('disabled'));",
                "                }",
                "            }",
                "        },this);",
                "    },",
                "",
                "",
                "",
                "    /**",
                "     * Setter for the \"model\" attribute, that for convenience also sets a public property to this View.",
                "     *",
                "     * @method _setModel",
                "     * @param val",
                "     * @return {*}",
                "     * @private",
                "     */",
                "    _setModel : function(val){",
                "        if ( !val ) {",
                "            return;",
                "        }",
                "        this.model = val;",
                "        return val;",
                "    },",
                "",
                "",
                "    /**",
                "     * Handler responds to Model's `pageChange` event, if a valid page is set this listener",
                "     *  fires off a page change request.",
                "     *",
                "     *  Listener set in _bindUI",
                "     *",
                "     * @method _modelPageChange",
                "     * @param {EventFacade} e",
                "     * @private",
                "     */",
                "    _modelPageChange: function(e) {",
                "        var newPage = e.newVal;",
                "        if ( newPage ) {",
                "            this._processPageChange(newPage);",
                "        }",
                "    },",
                "",
                "    /**",
                "     * Handler responds to Model's `itemsPerPageChange` event, not really functional at present",
                "     *",
                "     *  Listener set in _bindUI",
                "     *",
                "     * @method _modelStateChange",
                "     * @param {EventFacade} e",
                "     * @private",
                "     */",
                "    _modelStateChange: function(e) {",
                "        if (!e.silent) {",
                "            this.render();",
                "        }",
                "    },",
                "",
                "    /**",
                "     * Handler responds to Model's `itemsPerPageChange` event",
                "     *",
                "     *  Listener set in _bindUI",
                "     *",
                "     * @method _modelItemsChange",
                "     * @param {EventFacade} e",
                "     * @private",
                "     */",
                "    _modelItemsChange: function() {",
                "    /*    var newTotalItems = e.newVal;",
                "        if(newTotalItems == 0) {",
                "           // this.model.set('page',1);",
                "        }",
                "        */",
                "        this.render();",
                "    },",
                "",
                "",
                "",
                "    /**",
                "     * Method fired after the Paginator View is rendered,",
                "     *   so that the SELECT[rowsPerPage] control can be updated",
                "     *",
                "     *  Listener set in _bindUI",
                "     *",
                "     * @method _updateRPPSelect",
                "     * @private",
                "     */",
                "    _updateRPPSelect: function() {",
                "        var pag_cont  = this.get('container'),",
                "            model     = this.get('model'),",
                "            selPage   = pag_cont.one('.'+this._classSelectRPP),",
                "            pgOptions = this.get('pageOptions'),",
                "            isAll,opts;",
                "",
                "        // this part is to load the \"pageOptions\" array",
                "        if ( pgOptions && selPage ) {",
                "            if ( Y.Lang.isArray(pgOptions) ) {",
                "                //",
                "                //  Clear out any initial options, and add new options",
                "                //",
                "                opts = selPage.get('options');",
                "                selPage.empty();",
                "",
                "                Y.Array.each(pgOptions, function(optVal) {",
                "                    selPage.append('<option value=\"' + optVal + '\">' + optVal + '</option>');",
                "                });",
                "            }",
                "        }",
                "",
                "        // set current rowsPerPage to selected in combobox",
                "        if ( selPage ) {",
                "            isAll = ( model && model.get('itemsPerPage') === model.get('totalItems') ) ? true : false;",
                "            opts = selPage.get('options');",
                "            opts.each(function(opt) {",
                "                if ( opt.get('value') == model.get('itemsPerPage')",
                "                     || (opt.get('value').search(/all/i)!==-1 && isAll) ) {",
                "                    opt.set('selected',true);",
                "                }",
                "            },this);",
                "        }",
                "",
                "        if ( pag_cont.one('.'+this._classSelectPage) ){",
                "            this._updatePageSelect();",
                "        }",
                "    },",
                "",
                "    /**",
                "     Method that responds to changes in the SELECT box for \"page\"",
                "",
                "     @method _updatePageSelect",
                "     @private",
                "     @beta",
                "     **/",
                "    _updatePageSelect: function() {",
                "        /*",
                "         clearly, this method is incomplete ....",
                "",
                "          var pag_cont  = this.get('container'),",
                "                model     = this.get('model'),",
                "                selPage   = pag_cont.one('.'+this._classSelectPage);",
                "",
                "",
                "       */",
                "    },",
                "",
                "",
                "    /**",
                "     * Handler responding to INPUT[text] box page change.",
                "     *",
                "     * Listener set in _bindUI",
                "     *",
                "     * @method _inputChangePage",
                "     * @param {EventFacade} e",
                "     * @private",
                "     */",
                "    _inputChangePage: function(e) {",
                "        var tar = e.target,",
                "            val = +tar.get('value') || 1,",
                "            model = this.get('model');",
                "",
                "        if (val<1 || val>model.get('totalPages') ) {",
                "            val = 1;",
                "            tar.set('value',val);",
                "        }",
                "        model.set('page',val);",
                "    },",
                "",
                "    /**",
                "     * Handler responding to a Page Selector \"click\" event.  The clicked Node is",
                "     * reviewed for its data-pglink=\"\" setting, and processed from that.",
                "     *",
                "     * Changed page is then sent back to the Model, which reprocesses the",
                "     *  paginator settings (i.e. indices) and fires a `pageChange` event.",
                "     *",
                "     *  Listener set in _bindUI",
                "     *",
                "     * @method _clickChangePage",
                "     * @param {EventFacade} e",
                "     * @private",
                "     */",
                "    _clickChangePage: function(e) {",
                "        var tar   = e.target,",
                "            model = this.get('model'),",
                "            page,npage,cpage;",
                "",
                "        e.preventDefault();",
                "",
                "        if (e.target.hasClass(this._myClassName('disabled')) || e.currentTarget.hasClass(this._myClassName('disabled'))) {",
                "            return;",
                "        }",
                "",
                "        page  = tar.getData('pglink') || e.currentTarget.getData('pglink'),",
                "        npage = model.get('totalPages'),",
                "        cpage = model.get('page'); //tar.get('text');",
                "",
                "        if ( cpage && cpage === page ) {",
                "            return;",
                "        }",
                "",
                "        switch(page) {",
                "            case 'first':",
                "                page = 1;",
                "                break;",
                "            case 'last':",
                "                page = npage;",
                "                break;",
                "            case 'prev':",
                "                page = (!cpage) ? 1 : (cpage === 1) ? npage : cpage - 1;",
                "                break;",
                "            case 'next':",
                "                page = (!cpage) ? 1 : (cpage === npage ) ? 1 : cpage + 1;",
                "                break;",
                "            default:",
                "                page = +page;",
                "",
                "        }",
                "",
                "        model.set('page',page);",
                "    },",
                "",
                "    /**",
                "     * Handler that responds to SELECT changes for no. of rows per page",
                "     *",
                "     * Listener set in _bindUI",
                "     *",
                "     * @method _selectChangeRowOptions",
                "     * @param {EventFacade} e",
                "     * @private",
                "     */",
                "    _selectChangeRowOptions: function(e){",
                "        var tar = e.target,",
                "            val = +tar.get('value') || tar.get('value');",
                "",
                "        if ( Y.Lang.isString(val) && val.toLowerCase() === 'all' ) {",
                "            val = this.get('model').get('totalItems');",
                "        }",
                "        this.get('model').set('itemsPerPage',val);",
                "        this.render();",
                "    }",
                "",
                "",
                "    /**",
                "     * Fires after the Paginator has been completely rendered.",
                "     * @event render",
                "     */",
                "",
                "    /**",
                "     * Fires after the _processPageChange method has updated the pagination state.",
                "     * @event pageChange",
                "     * @param {Object} state The PaginatorModel `getAttrs()` \"state\" after updating to the current page as an object.",
                "     * @since 3.5.0",
                "     */",
                "",
                "",
                "},{",
                "    /**",
                "     * The default set of attributes which will be available for instances of this class",
                "     *",
                "     * @property ATTRS",
                "     * @type Object",
                "     * @static",
                "     */",
                "    ATTRS:{",
                "",
                "        /**",
                "         * The base PaginatorModel that serves as data / change provider for this View.",
                "         *",
                "         * @example",
                "         *     paginator:  new Y.PaginatorModel({",
                "         *         itemsPerPage:  250",
                "         *     }),",
                "         *     OR",
                "         *     paginator:  myPagModel // where myPagModel is an instance previously created ...",
                "         *",
                "         * @attribute model",
                "         * @default null",
                "         * @type {Y.PaginatorModel}",
                "         */",
                "        model: {",
                "            value:     null,",
                "            // validator: function(v){ return v instanceof Y.PaginatorModel; },",
                "            setter:    '_setModel'",
                "        },",
                "",
                "        /**",
                "         The container holder for the contents of this View.  Can be entered either as",
                "         a Y.Node instance or as a DOM \"id\" attribute (if prepended by \"#\").",
                "",
                "         @example",
                "         container: Y.one(\"#myDiv\"),",
                "         OR",
                "         container: \"#myDiv\"",
                "",
                "         NOTE: If the container node contains HTML <b>it will be used as the paginatorTemplate</b>",
                "",
                "",
                "         @attribute container",
                "         @default null",
                "         @type {Node|String}",
                "         @required",
                "         **/",
                "        container: {",
                "            value: null",
                "        },",
                "",
                "        /**",
                "         An array that will be used to populate the rows per page SELECT box ( using string replacement \"{selectRowsPerPage}\" or",
                "         class selector \"yui3-pagview-select-rowsperpage\" ).",
                "",
                "         @attribute pageOptions",
                "         @type {Array}",
                "         @default [ 10, 20, 'All' ]",
                "         **/",
                "        pageOptions: {",
                "            value:      [ 10, 20, 'All' ],",
                "            validator:  Y.Lang.isArray",
                "        },",
                "",
                "        /**",
                "         A string that defines the Paginator HTML contents.  Can either be entered as a {String} including replacement parameters",
                "         or as a {Node} instance whose contents will be read via .getHTML() or a DOM \"id\" element (indicated by '#' in first character)",
                "         <br/><br/>",
                "         To disable creation of any template (in order to do your own replacements of the template), set this to ''.",
                "",
                "         @example",
                "         paginatorTemplate:  '<div data-pglink=\"first\">FIRST</div> {pageLinks} <div data-pglink=\"last\">LAST</div>',",
                "         paginatorTemplate:  Y.one('#script-id-tmpl'),",
                "         paginatorTemplate:  Y.one('#script-id-tmpl').getHTML(),",
                "         paginatorTemplate:  '#script-id-tmpl',   // where",
                "",
                "         @attribute paginatorTemplate",
                "         @type {Node|String}",
                "         @default See TMPL_PAGINATOR static property",
                "         **/",
                "        paginatorTemplate:  {",
                "            valueFn: function(){",
                "                return this.TMPL_PAGINATOR;",
                "            }",
                "        },",
                "",
                "        /**",
                "         Defines the HTML template to be used for each individual page within the Paginator.  This can be used along",
                "         with replacement tokens to create UI elements for each page link.  The template is used to construct the",
                "         `{pageLinks}` replacement token with the paginator body.",
                "",
                "         Recognized replacement tokens most appropriate to this attribute are `{page}`, `{pageStartIndex}` and",
                "         `{pageEndIndex}`.",
                "",
                "         A few examples of this template are listed below;",
                "         @example",
                "         pageLinkTemplate: '<a href=\"#\" data-pglink=\"{page}\" class=\"\" title=\"Page No. {page}\">{page}</a>'",
                "",
                "         @attribute pageLinkTemplate",
                "         @type String",
                "         @default See TMPL_LINK static property",
                "         **/",
                "        pageLinkTemplate:   {",
                "            valueFn: function(){",
                "                return this.TMPL_LINK;",
                "            }",
                "        },",
                "",
                "        // May not be necessary anymore",
                "        linkHighLight: {",
                "            value:      true,",
                "            validator:  Y.Lang.isBoolean",
                "        },",
                "",
                "        /**",
                "         Used to set the maximum number of page links that will be displayed for individual pages within `{pageLinks}`.",
                "         This is the primary attribute to use to setup **abbreviated page links**, to avoid a long line of page links",
                "         that travel across the page!",
                "",
                "         Setting this to some number less than the total number of pages will begin abbreviating the links.",
                "         <br/>(See also attributes [`linkListOffset`](#attr_linkListOffset) and [`pageLinkFiller`](#attr_pageLinkFiller),",
                "         which work in conjunction with this attribute).",
                "",
                "         @attribute maxPageLinks",
                "         @type Integer",
                "         @default 9999",
                "         **/",
                "        maxPageLinks:   {",
                "            value:      9999,",
                "            validator:  Y.Lang.isNumber",
                "        },",
                "",
                "        /**",
                "         Setting that represents the number of links adjacent to the current page that should be displayed for instances where",
                "         an *abbreviated* page link list is desired.",
                "         <br/>(See [maxPageLinks](#attr_maxPageLinks) and [pageLinkFiller](#attr_pageLinkFiller) attributes).",
                "",
                "         For example, a setting of this attribute to 1, will result in 3 page links (current page plus 1 each side),",
                "         <br/>likewise a setting of 2, will results in 5 page links in the center of the paginator, etc.",
                "",
                "         @attribute linkListOffset",
                "         @type Integer",
                "         @default 1",
                "         **/",
                "        linkListOffset: {",
                "            value:      1,",
                "            validator:  Y.Lang.isNumber",
                "        },",
                "",
                "        /**",
                "         Setting the the \".. more\" indicator to be used specifically for *abbreviated* page link lists.",
                "         <br/>(See [maxPageLinks](#attr_maxPageLinks) and [linkListOffset](#attr_linkListOffset) attributes).",
                "",
                "         @attribute pageLinkFiller",
                "         @type String",
                "         @default '...'",
                "         **/",
                "        pageLinkFiller: {",
                "            value:      '...',",
                "            validator:  Y.Lang.isString",
                "        },",
                "",
                "        /**",
                "         Flag to indicate whether the first page link **within the `{pageLinks}` template** is to be displayed or not.",
                "         <br/>Specifically intended for *abbreviated* page link lists (See [maxPageLinks](#attr_maxPageLinks) attribute).",
                "",
                "         For Example;",
                "         <br/>If our paginator state currently has 9 pages, and the current page is 5, if `alwaysShowLast:false`",
                "         and `alwaysShowFirst:false` the link list will resemble;",
                "         <br/>First | Prev | ... 4 5 6 ... | Next | Last",
                "",
                "         Likewise, with `'alwaysShowLast:true` (and alwaysShowFirst:true) the link list will resemble;",
                "         <br/>First | Prev | 1 ... 4 5 6 ... 9 | Next | Last",
                "",
                "         @attribute alwaysShowFirst",
                "         @type Boolean",
                "         @default false",
                "         **/",
                "        alwaysShowFirst:{",
                "            value:      false,",
                "            validator:  Y.Lang.isBoolean",
                "        },",
                "",
                "        /**",
                "         Flag to indicate whether the last page link **within the `{pageLinks}` template** is to be displayed or not.",
                "         <br/>Specifically intended for *abbreviated* page link lists (See [maxPageLinks](#attr_maxPageLinks) attribute).",
                "",
                "         See `alowsShowFirst` for an example.",
                "",
                "         @attribute alwaysShowLast",
                "         @type Boolean",
                "         @default false",
                "         **/",
                "        alwaysShowLast:{",
                "            value:      false,",
                "            validator:  Y.Lang.isBoolean",
                "        },",
                "",
                "        /**",
                "         Not implemented at this time.",
                "         @attribute selectPageFormat",
                "         @type String",
                "         @default 'Page {page}'",
                "         @beta",
                "         **/",
                "        selectPageFormat: {",
                "            value:      'Page {page}',",
                "            validator:  Y.Lang.isString",
                "        },",
                "",
                "        /**",
                "         Flag indicating whether \"circular\" behavior of the Paginator View is desired.  If `true` the paginator",
                "         will stop \"disabling\" First|Previous or Next|Last toggling and will continue at either 1st page or last",
                "         page selections.  (i.e. when on *last* page, a *next* click will return to page 1)",
                "",
                "         @attribute circular",
                "         @type Boolean",
                "         @default false",
                "         **/",
                "        circular : {",
                "            value:      false,",
                "            validator:  Y.Lang.isBoolean",
                "        }",
                "",
                "    }",
                "",
                "});",
                "",
                "",
                "",
                "}, '@VERSION@', {\"requires\": [\"model\", \"view\", \"substitute\"], \"skinnable\": \"true\"});",
                "",
                "}());"
            ],
            "l": {
                "1": 1,
                "34": 1,
                "64": 21,
                "66": 21,
                "67": 21,
                "68": 21,
                "70": 21,
                "72": 21,
                "82": 3,
                "83": 1,
                "98": 71,
                "102": 71,
                "103": 5,
                "107": 71,
                "108": 4,
                "112": 71,
                "113": 62,
                "115": 9,
                "118": 71,
                "132": 40,
                "136": 40,
                "139": 29,
                "142": 29,
                "143": 8,
                "147": 29,
                "148": 4,
                "151": 29,
                "156": 29,
                "157": 7,
                "160": 29,
                "162": 11,
                "172": 162,
                "186": 81,
                "189": 81,
                "190": 73,
                "192": 8,
                "290": 433,
                "419": 1,
                "572": 608,
                "573": 608,
                "574": 607,
                "575": 607,
                "576": 742,
                "578": 607,
                "580": 1,
                "591": 15,
                "595": 15,
                "596": 15,
                "597": 15,
                "598": 15,
                "599": 15,
                "600": 15,
                "601": 15,
                "602": 15,
                "611": 15,
                "612": 15,
                "613": 0,
                "616": 15,
                "618": 15,
                "620": 7,
                "622": 8,
                "624": 8,
                "628": 8,
                "629": 8,
                "636": 15,
                "638": 15,
                "651": 15,
                "652": 15,
                "657": 15,
                "658": 11,
                "659": 11,
                "660": 11,
                "661": 11,
                "665": 15,
                "668": 15,
                "669": 15,
                "670": 15,
                "671": 15,
                "674": 15,
                "676": 15,
                "688": 1,
                "689": 9,
                "690": 0,
                "692": 9,
                "695": 1,
                "696": 1,
                "748": 16,
                "760": 16,
                "761": 0,
                "765": 16,
                "766": 3,
                "767": 3,
                "776": 16,
                "777": 5,
                "779": 83,
                "780": 83,
                "781": 5,
                "784": 83,
                "786": 83,
                "788": 83,
                "798": 16,
                "799": 16,
                "800": 16,
                "803": 16,
                "806": 16,
                "820": 16,
                "825": 16,
                "827": 16,
                "829": 16,
                "831": 16,
                "835": 0,
                "852": 63,
                "864": 63,
                "866": 63,
                "871": 63,
                "872": 49,
                "875": 63,
                "876": 49,
                "877": 49,
                "878": 41,
                "884": 63,
                "885": 14,
                "889": 63,
                "890": 0,
                "896": 63,
                "897": 4,
                "900": 63,
                "901": 4,
                "905": 59,
                "907": 24,
                "908": 24,
                "910": 35,
                "912": 11,
                "913": 11,
                "916": 24,
                "919": 63,
                "925": 63,
                "926": 57,
                "929": 6,
                "933": 6,
                "936": 6,
                "941": 6,
                "942": 120,
                "943": 0,
                "946": 120,
                "947": 106,
                "949": 14,
                "956": 6,
                "957": 2,
                "960": 6,
                "961": 5,
                "964": 6,
                "981": 6,
                "985": 6,
                "1004": 102,
                "1005": 102,
                "1006": 102,
                "1009": 102,
                "1010": 256,
                "1011": 256,
                "1012": 255,
                "1013": 166,
                "1015": 89,
                "1032": 15,
                "1033": 4,
                "1035": 11,
                "1036": 11,
                "1051": 47,
                "1052": 47,
                "1053": 47,
                "1067": 2,
                "1068": 2,
                "1087": 5,
                "1102": 16,
                "1109": 16,
                "1110": 10,
                "1114": 10,
                "1115": 10,
                "1117": 10,
                "1118": 44,
                "1124": 16,
                "1125": 10,
                "1126": 10,
                "1127": 10,
                "1128": 44,
                "1130": 10,
                "1135": 16,
                "1136": 0,
                "1170": 6,
                "1174": 6,
                "1175": 1,
                "1176": 1,
                "1178": 6,
                "1195": 49,
                "1199": 49,
                "1201": 49,
                "1202": 4,
                "1205": 45,
                "1209": 45,
                "1210": 0,
                "1213": 45,
                "1215": 2,
                "1216": 2,
                "1218": 2,
                "1219": 2,
                "1221": 6,
                "1222": 6,
                "1224": 8,
                "1225": 8,
                "1227": 27,
                "1231": 45,
                "1244": 0,
                "1247": 0,
                "1248": 0,
                "1250": 0,
                "1251": 0,
                "1350": 11,
                "1372": 14
            }
        }
    },
    "coverageType": "istanbul"
}
