{
    "project": {},
    "files": {
        "js/dt_footerview.js": {
            "name": "js/dt_footerview.js",
            "modules": {
                "FooterView": 1
            },
            "classes": {
                "Y.FooterView": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "FooterView": {
            "name": "FooterView",
            "submodules": {},
            "classes": {
                "Y.FooterView": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "js/dt_footerview.js",
            "line": 1,
            "description": "FooterView is a YUI View class extension that provides a simple, one row summary row\nto a Datatable. This view provides\nfor a summary row appended to the bottom of the DataTable TBODY, typically consisting\nof **one** TH element (with a colspan) and several TD elements for each desired column\nwhere a \"calculated field\" is desired.\n\nView configuration provides for calculated fields based upon the all of the available\ndataset fields within the DataTable's \"ModelList\".\n\nThe view works with either non-scrolling or scrolling DataTables, and allows for either a\n\"fixed\" view, wherein the footer remains fixed at the bottom of the DataTable contentBox\nwhile the table is scrolled.\n\n#### Calculated Fields\n\nThe current implementation supports the following calculated fields, where they are\nidentified by their placeholder tag for replacement via Y.sub (case insensitive);\n\n* `{sum}` Calculate the arithmetic sum of the specified column in dataset\n* `{min}` Calculate the minimum value of the specified column in dataset\n* `{max}` Calculate the maximum value of the specified column in dataset\n* `{avg}` Calculate the arithmetic average of the of the specified column (synonyms `{mean}`, `{average}`)\n\nAlso, non-looping calcs are;\n\n*  `{row_count}` Returns the number of rows in the dataset\n*  `{col_count}` Returns the number of columns in the dataset (no visibility check)\n*  `{date}` Returns the current date\n*  `{time}` Returns the current time\n\n#### Configuration\n\nYUI 3.6.0 DataTable supports attributes including `footerView` and `footerConfig`.\n\nThis FooterView recognizes the following attributes, which must be configured via the\nDataTable {configs} (see usage example below);\n\n* [`fixed`](#attr_fixed) : Flag indicating if footer should be fixed or floating\n* [`heading`](#attr_heading) : Object, defining the single TH as;\n   * [`colspan`](#attr_heading.colspan) : Number of columns to merge from left for the TH\n   * [`content`](#attr_heading.content) : A string indicating the content of the TH for the footer\n   * [`className`](#attr_heading.className) : Additional classname for TH\n* [`columns`](#attr_columns) : Array of objects, one per desired TD column in footer as;\n   * [`key`](#attr_columns.key) : `key` name from the DataTable columns\n   * [`content`](#attr_columns.content) : String indicating the contents of this TD\n   * [`className`](#attr_columns.className) : Additional classname for TD\n   * [`formatter`](#attr_columns.formatter) : Formatter to apply to this column result\n* [`dateFormat`](#attr_dateFormat) : Format string to use for any {date} fields\n* [`timeFormat`](#attr_timeFormat) : Format string to use for any {time} fields\n\nAdditionally the user can provide a valid function as a column `content` to calculate a\ncustom entry for \n<br/>a column (see [`columns.content`](#attr_columns.content) or [`calcDatasetValue`](#method_calcDatasetValue))\n\n#### Usage\n\n    var dtable = new Y.DataTable({\n        columns:    ['EmpId','FirstName','LastName','NumClients','SalesTTM'],\n        data:       AccountMgr.Sales,\n        scrollable: 'y',\n        height:     '250px',\n        width:      '400px',\n\n        footerView:   Y.FooterView,\n        footerConfig: {\n            fixed:   true,\n            heading: {\n                colspan:\t3,\n                content:\t\"Sales Totals for {row_count} Account Mgrs : &nbsp;\",\n                className:\t\"align-right\"\n            },\n            columns: [\n                { key:'NumClients', content:\"{Avg} avg\", className:\"clientAvg\" },\n                { key:'SalesTTM',   content:\"{sum}\", className:\"salesTotal\", formatter:fmtCurrency }\n            ]\n        }\n    });\n\n    dtable.render('#salesDT');",
            "extends": "Y.View",
            "author": "Todd Smith",
            "version": "1.1.0",
            "since": "3.6.0"
        }
    },
    "classes": {
        "Y.FooterView": {
            "name": "Y.FooterView",
            "shortname": "Y.FooterView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "FooterView",
            "namespace": "",
            "file": "js/dt_footerview.js",
            "line": 1,
            "description": "FooterView is a YUI View class extension that provides a simple, one row summary row\nto a Datatable. This view provides\nfor a summary row appended to the bottom of the DataTable TBODY, typically consisting\nof **one** TH element (with a colspan) and several TD elements for each desired column\nwhere a \"calculated field\" is desired.\n\nView configuration provides for calculated fields based upon the all of the available\ndataset fields within the DataTable's \"ModelList\".\n\nThe view works with either non-scrolling or scrolling DataTables, and allows for either a\n\"fixed\" view, wherein the footer remains fixed at the bottom of the DataTable contentBox\nwhile the table is scrolled.\n\n#### Calculated Fields\n\nThe current implementation supports the following calculated fields, where they are\nidentified by their placeholder tag for replacement via Y.sub (case insensitive);\n\n* `{sum}` Calculate the arithmetic sum of the specified column in dataset\n* `{min}` Calculate the minimum value of the specified column in dataset\n* `{max}` Calculate the maximum value of the specified column in dataset\n* `{avg}` Calculate the arithmetic average of the of the specified column (synonyms `{mean}`, `{average}`)\n\nAlso, non-looping calcs are;\n\n*  `{row_count}` Returns the number of rows in the dataset\n*  `{col_count}` Returns the number of columns in the dataset (no visibility check)\n*  `{date}` Returns the current date\n*  `{time}` Returns the current time\n\n#### Configuration\n\nYUI 3.6.0 DataTable supports attributes including `footerView` and `footerConfig`.\n\nThis FooterView recognizes the following attributes, which must be configured via the\nDataTable {configs} (see usage example below);\n\n* [`fixed`](#attr_fixed) : Flag indicating if footer should be fixed or floating\n* [`heading`](#attr_heading) : Object, defining the single TH as;\n   * [`colspan`](#attr_heading.colspan) : Number of columns to merge from left for the TH\n   * [`content`](#attr_heading.content) : A string indicating the content of the TH for the footer\n   * [`className`](#attr_heading.className) : Additional classname for TH\n* [`columns`](#attr_columns) : Array of objects, one per desired TD column in footer as;\n   * [`key`](#attr_columns.key) : `key` name from the DataTable columns\n   * [`content`](#attr_columns.content) : String indicating the contents of this TD\n   * [`className`](#attr_columns.className) : Additional classname for TD\n   * [`formatter`](#attr_columns.formatter) : Formatter to apply to this column result\n* [`dateFormat`](#attr_dateFormat) : Format string to use for any {date} fields\n* [`timeFormat`](#attr_timeFormat) : Format string to use for any {time} fields\n\nAdditionally the user can provide a valid function as a column `content` to calculate a\ncustom entry for \n<br/>a column (see [`columns.content`](#attr_columns.content) or [`calcDatasetValue`](#method_calcDatasetValue))\n\n#### Usage\n\n    var dtable = new Y.DataTable({\n        columns:    ['EmpId','FirstName','LastName','NumClients','SalesTTM'],\n        data:       AccountMgr.Sales,\n        scrollable: 'y',\n        height:     '250px',\n        width:      '400px',\n\n        footerView:   Y.FooterView,\n        footerConfig: {\n            fixed:   true,\n            heading: {\n                colspan:\t3,\n                content:\t\"Sales Totals for {row_count} Account Mgrs : &nbsp;\",\n                className:\t\"align-right\"\n            },\n            columns: [\n                { key:'NumClients', content:\"{Avg} avg\", className:\"clientAvg\" },\n                { key:'SalesTTM',   content:\"{sum}\", className:\"salesTotal\", formatter:fmtCurrency }\n            ]\n        }\n    });\n\n    dtable.render('#salesDT');"
        }
    },
    "classitems": [
        {
            "file": "js/dt_footerview.js",
            "line": 92,
            "description": "Defines the default TD HTML template for a calculated field within the footer",
            "itemtype": "property",
            "name": "TMPL_td",
            "type": "String",
            "default": "'<td class=\"yui3-datatable-even {tdClass}\">{content}</td>'",
            "static": 1,
            "since": "3.6.0",
            "access": "protected",
            "tagname": "",
            "class": "Y.FooterView",
            "module": "FooterView"
        },
        {
            "file": "js/dt_footerview.js",
            "line": 103,
            "description": "Defines the default TH HTML template for the header content within the footer",
            "itemtype": "property",
            "name": "TMPL_th",
            "type": "String",
            "default": "'<th colspan=\"{colspan}\" class=\"{thClass}\">{content}</th>'",
            "static": 1,
            "since": "3.6.0",
            "access": "protected",
            "tagname": "",
            "class": "Y.FooterView",
            "module": "FooterView"
        },
        {
            "file": "js/dt_footerview.js",
            "line": 114,
            "description": "Defines the default TR HTML template for the footer",
            "itemtype": "property",
            "name": "TMPL_tr",
            "type": "String",
            "default": "'<tr>{th_content}{td_content}</tr>'",
            "static": 1,
            "since": "3.6.0",
            "access": "protected",
            "tagname": "",
            "class": "Y.FooterView",
            "module": "FooterView"
        },
        {
            "file": "js/dt_footerview.js",
            "line": 125,
            "description": "Defines the default TFOOT HTML template for the footer",
            "itemtype": "property",
            "name": "TMPL_tfoot",
            "type": "String",
            "default": "'<tfoot class=\"{footClass}\"><tr>{th_content}{td_content}</tr></tfoot>'",
            "static": 1,
            "since": "3.6.0",
            "access": "protected",
            "tagname": "",
            "class": "Y.FooterView",
            "module": "FooterView"
        },
        {
            "file": "js/dt_footerview.js",
            "line": 137,
            "description": "Defines the default TABLE HTML template for the \"fixed\" footer type ... i.e. with scrolling",
            "itemtype": "property",
            "name": "TMPL_table_fixed",
            "type": "String",
            "default": "'<table cellspacing=\"0\" aria-hidden=\"true\" class=\"{className}\"></table>'",
            "static": 1,
            "since": "3.6.0",
            "access": "protected",
            "tagname": "",
            "class": "Y.FooterView",
            "module": "FooterView"
        },
        {
            "file": "js/dt_footerview.js",
            "line": 155,
            "description": "Storage array of objects, each object represents a rendered \"cell or column\" within the\nfooter view.  The first element is typically a TH element (with a colspan), and the\nremaining elements are the TD's for each requested footer field.\n\nCreated and populated by the render() method",
            "itemtype": "property",
            "name": "node_cols",
            "type": "Array of Object hashes",
            "default": "null",
            "static": 1,
            "since": "3.6.0",
            "access": "protected",
            "tagname": "",
            "class": "Y.FooterView",
            "module": "FooterView"
        },
        {
            "file": "js/dt_footerview.js",
            "line": 171,
            "description": "Placeholder for subscriber event handles, used to destroy cleanly",
            "itemtype": "property",
            "name": "_subscr",
            "type": "{EventHandles} Array of eventhandles",
            "default": "null",
            "static": 1,
            "since": "3.6.0",
            "access": "private",
            "tagname": "",
            "class": "Y.FooterView",
            "module": "FooterView"
        },
        {
            "file": "js/dt_footerview.js",
            "line": 182,
            "description": "DataTable instance that utilizes this footerview, derived from initializer \"config.host\"\nUsed to reference changes to DT modellist, and to retrieve the underlying \"data\"",
            "itemtype": "property",
            "name": "_dt",
            "type": "Y.DataTable",
            "default": "null",
            "static": 1,
            "since": "3.6.0",
            "access": "private",
            "tagname": "",
            "class": "Y.FooterView",
            "module": "FooterView"
        },
        {
            "file": "js/dt_footerview.js",
            "line": 195,
            "description": "Called when view is initialized.  Stores reference to calling DataTable and\n creates listeners to link building or refreshing the footer back to the\n parent DataTable.",
            "itemtype": "method",
            "name": "initializer",
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Y.FooterView",
            "module": "FooterView"
        },
        {
            "file": "js/dt_footerview.js",
            "line": 223,
            "description": "Default destructor method, cleans up the listeners that were created and\n removes and/or empties the created DOM elements for the footerView.",
            "itemtype": "method",
            "name": "destructor",
            "access": "protected",
            "tagname": "",
            "class": "Y.FooterView",
            "module": "FooterView"
        },
        {
            "file": "js/dt_footerview.js",
            "line": 239,
            "description": "Creates the DOM elements and attaches them to the footerView container.\n Reads the configuration parameters (i.e. from DataTable's config as \"footerConfig\")\n and structures a single TR element, with a leading TH in first column, and the\n requested TD elements following.",
            "itemtype": "method",
            "name": "render",
            "access": "public",
            "tagname": "",
            "chainable": 1,
            "return": {
                "description": "this"
            },
            "class": "Y.FooterView",
            "module": "FooterView"
        },
        {
            "file": "js/dt_footerview.js",
            "line": 396,
            "description": "Fires after the footer has been created and rendered.",
            "itemtype": "event",
            "name": "renderFooter",
            "params": [
                {
                    "name": "none",
                    "description": ""
                }
            ],
            "class": "Y.FooterView",
            "module": "FooterView"
        },
        {
            "file": "js/dt_footerview.js",
            "line": 406,
            "description": "Calculates a DataSet summary item defined in 'calc' for the given colKey, by\n  looping through the current \"data\" (i.e. Recordset).\n\n  Currently, the 'calc' is set to lowercase ...\n\nExample calc settings are as follows (for given 'colKey');\n\n{sum}\t\tCalculate the arithmetic sum of dataset\n{min}\t\tCalculate the minimum value within the dataset\n{max}\t\tCalculate the maximum value within the dataset\n{avg}\t\tCalculate the arithmetic average of the datset\n               (synonyms are {mean}, {average})\n\nAlso, non-dataset iterating calcs are;\n {row_count}\t Returns the number of rows in the dataset\n {col_count}  Returns the number of columns in the dataset (no visibility check)\n {date}\t\t Returns the current date (via dateFormat setting)\n {time}\t\t Returns the current time (via timeFormat setting)\n\nIf 'calc' argument is a function(), then call it (in the \"this\" context of this\n FooterView) with one argument, the DataTable.data property.\n\nDoesn't handle non-numeric calculations (i.e. `Date` or `String`)\n\nTODO:  Consider one call to this (with mult keys) for one loop thru only ...\n\n not a really possible use case, but ...\n whatif user tries to enter calc='this is a {sum} and {min} value' ??",
            "itemtype": "method",
            "name": "calcDatasetValue",
            "params": [
                {
                    "name": "colKey",
                    "description": "The column key name to be calculated",
                    "type": "String"
                },
                {
                    "name": "calc",
                    "description": "A recognizable calc setting from above",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the return value",
                "type": "Number"
            },
            "access": "public",
            "tagname": "",
            "class": "Y.FooterView",
            "module": "FooterView"
        },
        {
            "file": "js/dt_footerview.js",
            "line": 518,
            "description": "Calculates a DataSet summary item defined in 'calc' for the given colKey, by",
            "itemtype": "method",
            "name": "formatFootCell",
            "params": [
                {
                    "name": "col",
                    "description": "The column key name to be calculated",
                    "type": "String"
                },
                {
                    "name": "foot_col",
                    "description": "A recognizable calc setting from above",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the return value",
                "type": "Float"
            },
            "access": "public",
            "tagname": "",
            "class": "Y.FooterView",
            "module": "FooterView"
        },
        {
            "file": "js/dt_footerview.js",
            "line": 557,
            "description": "Refreshes the summary items in the footer view and populates the footer\n elements based on the current \"data\" contents.",
            "itemtype": "method",
            "name": "refreshFooter",
            "return": {
                "description": "this"
            },
            "chainable": 1,
            "access": "public",
            "tagname": "",
            "class": "Y.FooterView",
            "module": "FooterView"
        },
        {
            "file": "js/dt_footerview.js",
            "line": 606,
            "description": "Fires after the footer has been recalculated and updated.",
            "itemtype": "event",
            "name": "refreshFooter",
            "params": [
                {
                    "name": "none",
                    "description": ""
                }
            ],
            "class": "Y.FooterView",
            "module": "FooterView"
        },
        {
            "file": "js/dt_footerview.js",
            "line": 613,
            "description": "For scrollable tables only, adjusts the sizes of the TFOOT cells to match the widths\nof the THEAD cells.",
            "itemtype": "method",
            "name": "resizeFooter",
            "return": {
                "description": "this"
            },
            "access": "public",
            "tagname": "",
            "chainable": 1,
            "class": "Y.FooterView",
            "module": "FooterView"
        },
        {
            "file": "js/dt_footerview.js",
            "line": 660,
            "description": "Fires after the footer has been resized to match the parent DataTable",
            "itemtype": "event",
            "name": "resizeFooter",
            "params": [
                {
                    "name": "none",
                    "description": ""
                }
            ],
            "class": "Y.FooterView",
            "module": "FooterView"
        },
        {
            "file": "js/dt_footerview.js",
            "line": 670,
            "description": "Method that builds a separate TABLE / TFOOT container outside of the Y-scrolling\n container and places the view \"container\" within this.\n\nThis is specifically required for a \"fixed\" footer ... i.e. with a scrolling DataTable,\nwhere the footer is expected to remain stationary as the records are scrolled through.\n\n NOTE: A bug exists where the viewFooter container (TFOOT) is improperly placed within\n       the y-scroller container (http://yuilibrary.com/projects/yui3/ticket/2531723)\n       This function is a workaround for that.",
            "itemtype": "method",
            "name": "_buildFixedFooter",
            "access": "private",
            "tagname": "",
            "class": "Y.FooterView",
            "module": "FooterView"
        },
        {
            "file": "js/dt_footerview.js",
            "line": 721,
            "description": "Flag indicating if the footer is desired to be \"fixed\" (i.e. non-scrolling, true) or floating with Datatable scrolling (false)",
            "itemtype": "attribute",
            "name": "fixed",
            "type": "boolean",
            "default": "false",
            "class": "Y.FooterView",
            "module": "FooterView"
        },
        {
            "file": "js/dt_footerview.js",
            "line": 728,
            "description": "Defines the TH properties for the footer row, the leftmost column (including optional colspan)",
            "itemtype": "attribute",
            "name": "heading",
            "type": "Object",
            "default": "null",
            "class": "Y.FooterView",
            "module": "FooterView"
        },
        {
            "file": "js/dt_footerview.js",
            "line": 735,
            "description": "A string template defining the contents of the TH column.  May include any non-set related fields, including `{row_count}`, `{col_count}`, `{date}`,`{time}`\n\nExample:\n\n    heading.content : 'Totals for {row_count} Orders as-of {date} :'",
            "itemtype": "attribute",
            "name": "heading.content",
            "type": "String",
            "default": "null",
            "class": "Y.FooterView",
            "module": "FooterView"
        },
        {
            "file": "js/dt_footerview.js",
            "line": 747,
            "description": "The number of columns from the DataTable columns that should be spanned for the TH in the footer",
            "itemtype": "attribute",
            "name": "heading.colspan",
            "type": "Integer",
            "default": "1",
            "class": "Y.FooterView",
            "module": "FooterView"
        },
        {
            "file": "js/dt_footerview.js",
            "line": 754,
            "description": "A CSS class name to be added to the TH element of the footer",
            "itemtype": "attribute",
            "name": "heading.className",
            "type": "String",
            "default": "null",
            "class": "Y.FooterView",
            "module": "FooterView"
        },
        {
            "file": "js/dt_footerview.js",
            "line": 761,
            "description": "An array of objects, one row per *desired* column of TD representing a summary from the dataset.\n\nOnly TD's with a row included in this array will be processed and rendered, otherwise any visible\n columns from the DataTable, that are not within a TH colspan, will be created as empty.",
            "itemtype": "attribute",
            "name": "columns",
            "type": "Array",
            "default": "null",
            "class": "Y.FooterView",
            "module": "FooterView"
        },
        {
            "file": "js/dt_footerview.js",
            "line": 771,
            "description": "The dataset \"key\" corresponding to the columns of the DataTable for this desired TD in the footer.",
            "itemtype": "attribute",
            "name": "columns.key",
            "type": "String",
            "default": "null",
            "class": "Y.FooterView",
            "module": "FooterView"
        },
        {
            "file": "js/dt_footerview.js",
            "line": 778,
            "description": "A string template defining the contents of this TD column in the footer.  May include any set-based (i.e. `{sum}`,`{min}`,`{max}`,`{avg}`) or non-set related fields, including `{row_count}`, `{col_count}`, `{date}`,`{time}`.\n<br/>The {average} and {mean} placeholders are equivalent to {avg} in this implementation.\n\nExample:\n\n    columns[2].content : '{sum}'",
            "itemtype": "attribute",
            "name": "columns.content",
            "type": "String",
            "default": "null",
            "class": "Y.FooterView",
            "module": "FooterView"
        },
        {
            "file": "js/dt_footerview.js",
            "line": 791,
            "description": "A CSS class name to be added to this TD element of the footer",
            "itemtype": "attribute",
            "name": "columns.className",
            "type": "String",
            "default": "null",
            "class": "Y.FooterView",
            "module": "FooterView"
        },
        {
            "file": "js/dt_footerview.js",
            "line": 799,
            "description": "Specifies a formatter to apply to the numeric field denoted in this TD column.  A formatter from the original DataTable columns can be specified.\n\nIf this attribute is set to null (or missing), the formatter from the DataTable column associated with the \"key\" (if any), will be used.\n\nIf this attribute is set to '', no formatting will be applied.",
            "itemtype": "attribute",
            "name": "columns.formatter",
            "type": "{String|Function}",
            "default": "null",
            "class": "Y.FooterView",
            "module": "FooterView"
        },
        {
            "file": "js/dt_footerview.js",
            "line": 811,
            "description": "Specifies a strftime format string to be applied for {date} entries, using Y.DataType.Date.format",
            "itemtype": "attribute",
            "name": "dateFormat",
            "type": "String",
            "default": "\"%D\"",
            "class": "Y.FooterView",
            "module": "FooterView"
        },
        {
            "file": "js/dt_footerview.js",
            "line": 818,
            "description": "Specifies a strftime format string to be applied for {time} entries, using Y.DataType.Date.format",
            "itemtype": "attribute",
            "name": "timeFormat",
            "type": "String",
            "default": "\"%T\"",
            "class": "Y.FooterView",
            "module": "FooterView"
        }
    ]
}