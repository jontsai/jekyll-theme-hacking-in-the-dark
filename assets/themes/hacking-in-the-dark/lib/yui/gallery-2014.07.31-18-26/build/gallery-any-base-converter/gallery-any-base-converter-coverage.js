if (typeof __coverage__ === 'undefined') { __coverage__ = {}; }
if (!__coverage__['build/gallery-any-base-converter/gallery-any-base-converter.js']) {
   __coverage__['build/gallery-any-base-converter/gallery-any-base-converter.js'] = {"path":"build/gallery-any-base-converter/gallery-any-base-converter.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":38},"end":{"line":1,"column":57}}},"2":{"name":"(anonymous_2)","line":7,"loc":{"start":{"line":7,"column":1},"end":{"line":7,"column":26}}},"3":{"name":"(anonymous_3)","line":38,"loc":{"start":{"line":38,"column":18},"end":{"line":38,"column":33}}},"4":{"name":"(anonymous_4)","line":54,"loc":{"start":{"line":54,"column":45},"end":{"line":54,"column":73}}},"5":{"name":"(anonymous_5)","line":74,"loc":{"start":{"line":74,"column":16},"end":{"line":74,"column":33}}},"6":{"name":"(anonymous_6)","line":122,"loc":{"start":{"line":122,"column":28},"end":{"line":122,"column":45}}},"7":{"name":"(anonymous_7)","line":177,"loc":{"start":{"line":177,"column":22},"end":{"line":177,"column":40}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":185,"column":55}},"2":{"start":{"line":7,"column":0},"end":{"line":183,"column":12}},"3":{"start":{"line":8,"column":4},"end":{"line":8,"column":17}},"4":{"start":{"line":10,"column":4},"end":{"line":180,"column":11}},"5":{"start":{"line":39,"column":16},"end":{"line":47,"column":30}},"6":{"start":{"line":49,"column":16},"end":{"line":52,"column":17}},"7":{"start":{"line":50,"column":20},"end":{"line":50,"column":36}},"8":{"start":{"line":51,"column":20},"end":{"line":51,"column":40}},"9":{"start":{"line":54,"column":16},"end":{"line":56,"column":19}},"10":{"start":{"line":55,"column":20},"end":{"line":55,"column":67}},"11":{"start":{"line":58,"column":16},"end":{"line":60,"column":17}},"12":{"start":{"line":59,"column":20},"end":{"line":59,"column":143}},"13":{"start":{"line":62,"column":16},"end":{"line":64,"column":17}},"14":{"start":{"line":63,"column":20},"end":{"line":63,"column":35}},"15":{"start":{"line":66,"column":16},"end":{"line":66,"column":29}},"16":{"start":{"line":75,"column":16},"end":{"line":82,"column":37}},"17":{"start":{"line":84,"column":16},"end":{"line":84,"column":31}},"18":{"start":{"line":86,"column":16},"end":{"line":89,"column":17}},"19":{"start":{"line":87,"column":20},"end":{"line":87,"column":36}},"20":{"start":{"line":88,"column":20},"end":{"line":88,"column":35}},"21":{"start":{"line":91,"column":16},"end":{"line":91,"column":44}},"22":{"start":{"line":92,"column":16},"end":{"line":92,"column":75}},"23":{"start":{"line":94,"column":16},"end":{"line":97,"column":38}},"24":{"start":{"line":95,"column":20},"end":{"line":95,"column":68}},"25":{"start":{"line":96,"column":20},"end":{"line":96,"column":61}},"26":{"start":{"line":99,"column":16},"end":{"line":101,"column":17}},"27":{"start":{"line":100,"column":20},"end":{"line":100,"column":95}},"28":{"start":{"line":103,"column":16},"end":{"line":105,"column":17}},"29":{"start":{"line":104,"column":20},"end":{"line":104,"column":58}},"30":{"start":{"line":107,"column":16},"end":{"line":107,"column":27}},"31":{"start":{"line":123,"column":24},"end":{"line":125,"column":50}},"32":{"start":{"line":127,"column":24},"end":{"line":129,"column":25}},"33":{"start":{"line":128,"column":28},"end":{"line":128,"column":56}},"34":{"start":{"line":131,"column":24},"end":{"line":131,"column":58}},"35":{"start":{"line":178,"column":16},"end":{"line":178,"column":83}},"36":{"start":{"line":182,"column":4},"end":{"line":182,"column":32}}},"branchMap":{"1":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":16},"end":{"line":49,"column":16}},{"start":{"line":49,"column":16},"end":{"line":49,"column":16}}]},"2":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":16},"end":{"line":58,"column":16}},{"start":{"line":58,"column":16},"end":{"line":58,"column":16}}]},"3":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":16},"end":{"line":62,"column":16}},{"start":{"line":62,"column":16},"end":{"line":62,"column":16}}]},"4":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":16},"end":{"line":86,"column":16}},{"start":{"line":86,"column":16},"end":{"line":86,"column":16}}]},"5":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":16},"end":{"line":99,"column":16}},{"start":{"line":99,"column":16},"end":{"line":99,"column":16}}]},"6":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":16},"end":{"line":103,"column":16}},{"start":{"line":103,"column":16},"end":{"line":103,"column":16}}]}},"code":["(function () { YUI.add('gallery-any-base-converter', function (Y, NAME) {","","/**","@module gallery-any-base-converter","@author Steven Olmsted","*/","(function (Y, moduleName) {","    'use strict';","","    var _string__empty = '',","        _string__fullStop = '.',","        _string_alphabet = 'alphabet',","        _string_lookup = 'lookup',","        _string_minusSign = 'minusSign',","        _string_radixPoint = 'radixPoint',","","        _Base = Y.Base,","","        _each = Y.each,","        _floor = Math.floor,","        _pow = Math.pow,","","        /**","        AnyBaseConverter is an object that will convert numbers to and from a","        positional notation with a custom alphabet and base.","        @class AnyBaseConverter","        @constructor","        @extends Base","        @param {Object} config Configuration Object.","        */","        _Class = _Base.create(moduleName, _Base, [], {","            /**","            Converts a string from a custom base and returns a number.","            @method from","            @param {String} any","            @return {Number} value","            */","            from: function (any) {","                var me = this,","","                    anySplit = any.split(me.get(_string_radixPoint)),","                    base = me.get(_string_alphabet).length,","                    fractionalPart = anySplit[1],","                    integerPart = anySplit[0].split(_string__empty),","                    lookup = me.get(_string_lookup),","                    negative = false,","                    value = 0;","","                if (integerPart[0] === me.get(_string_minusSign)) {","                    negative = true;","                    integerPart.shift();","                }","","                _each(integerPart.reverse(), function (character, index) {","                    value += _pow(base, index) * lookup[character];","                });","","                if (fractionalPart) {","                    value = parseFloat(_string__empty + value + _string__fullStop + _Class._reverse(_string__empty + me.from(fractionalPart)));","                }","","                if (negative) {","                    value = -value;","                }","","                return value;","            },","            /**","            Converts a number to a custom base and returns a string.","            @method to","            @param {Number} value","            @return {String} any","            */","            to: function (value) {","                var me = this,","","                    alphabet = me.get(_string_alphabet),","                    base = alphabet.length,","                    fractionalPart,","                    integerPart,","                    any = _string__empty,","                    negative = false;","","                value = +value;","","                if (value < 0) {","                    negative = true;","                    value = -value;","                }","","                integerPart = _floor(value);","                fractionalPart = String(value).split(_string__fullStop)[1];","","                do {","                    any = alphabet.charAt(integerPart % base) + any;","                    integerPart = _floor(integerPart / base);","                } while (integerPart);","","                if (fractionalPart) {","                    any += me.get(_string_radixPoint) + me.to(_Class._reverse(fractionalPart));","                }","","                if (negative) {","                    any = me.get(_string_minusSign) + any;","                }","","                return any;","            }","        }, {","            ATTRS: {","                /**","                The string of characters to use as single-digit numbers. The","                length of this string determines the base of the result. Each","                character should be unique within the string or else it will be","                impossible to correctly convert a string back into a number.","                Currently, non-BMP characters are not supported.","                @attribute alphabet","                @default '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz~'","                @type String","                */","                alphabet: {","                    setter: function (value) {","                        var lookup = {},","                            i = 0,","                            length = value.length;","","                        for (; i < length; i += 1) {","                            lookup[value.charAt(i)] = i;","                        }","","                        this._set(_string_lookup, lookup);","                    },","                    value: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz~'","                },","                /**","                Used as a reverse lookup for a character index in alphabet.","                @attribute lookup","                @protected","                @readOnly","                @type Object","                */","                lookup: {","                    readOnly: true,","                    value: null","                },","                /**","                A single character string to prepend to negative values. This","                character should not be in the alphabet.","                Currently, non-BMP characters are not supported.","                @attribute minusSign","                @default '-'","                @type String","                */","                minusSign: {","                    value: '-'","                },","                /**","                A single character string to insert between the integer and","                fractional parts of the number.  This character should not be in","                the alphabet.  Currently, non-BMP characters are not supported.","                @attribute radixPoint","                @default '.'","                @type String","                */","                radixPoint: {","                    value: _string__fullStop","                }","            },","            /**","            Reverse a string.","            @method _reverse","            @param {String} string","            @protected","            @return {String} reversedString","            @static","            */","            _reverse: function (string) {","                return string.split(_string__empty).reverse().join(_string__empty);","            }","        });","","    Y.AnyBaseConverter = _Class;","}(Y, NAME));","","}, 'gallery-2013.05.02-22-59', {\"requires\": [\"base\"]});","","}());"]};
}
var __cov_eOnTDC8eQKOtrUH_rK1ZpA = __coverage__['build/gallery-any-base-converter/gallery-any-base-converter.js'];
__cov_eOnTDC8eQKOtrUH_rK1ZpA.s['1']++;YUI.add('gallery-any-base-converter',function(Y,NAME){__cov_eOnTDC8eQKOtrUH_rK1ZpA.f['1']++;__cov_eOnTDC8eQKOtrUH_rK1ZpA.s['2']++;(function(Y,moduleName){__cov_eOnTDC8eQKOtrUH_rK1ZpA.f['2']++;__cov_eOnTDC8eQKOtrUH_rK1ZpA.s['3']++;'use strict';__cov_eOnTDC8eQKOtrUH_rK1ZpA.s['4']++;var _string__empty='',_string__fullStop='.',_string_alphabet='alphabet',_string_lookup='lookup',_string_minusSign='minusSign',_string_radixPoint='radixPoint',_Base=Y.Base,_each=Y.each,_floor=Math.floor,_pow=Math.pow,_Class=_Base.create(moduleName,_Base,[],{from:function(any){__cov_eOnTDC8eQKOtrUH_rK1ZpA.f['3']++;__cov_eOnTDC8eQKOtrUH_rK1ZpA.s['5']++;var me=this,anySplit=any.split(me.get(_string_radixPoint)),base=me.get(_string_alphabet).length,fractionalPart=anySplit[1],integerPart=anySplit[0].split(_string__empty),lookup=me.get(_string_lookup),negative=false,value=0;__cov_eOnTDC8eQKOtrUH_rK1ZpA.s['6']++;if(integerPart[0]===me.get(_string_minusSign)){__cov_eOnTDC8eQKOtrUH_rK1ZpA.b['1'][0]++;__cov_eOnTDC8eQKOtrUH_rK1ZpA.s['7']++;negative=true;__cov_eOnTDC8eQKOtrUH_rK1ZpA.s['8']++;integerPart.shift();}else{__cov_eOnTDC8eQKOtrUH_rK1ZpA.b['1'][1]++;}__cov_eOnTDC8eQKOtrUH_rK1ZpA.s['9']++;_each(integerPart.reverse(),function(character,index){__cov_eOnTDC8eQKOtrUH_rK1ZpA.f['4']++;__cov_eOnTDC8eQKOtrUH_rK1ZpA.s['10']++;value+=_pow(base,index)*lookup[character];});__cov_eOnTDC8eQKOtrUH_rK1ZpA.s['11']++;if(fractionalPart){__cov_eOnTDC8eQKOtrUH_rK1ZpA.b['2'][0]++;__cov_eOnTDC8eQKOtrUH_rK1ZpA.s['12']++;value=parseFloat(_string__empty+value+_string__fullStop+_Class._reverse(_string__empty+me.from(fractionalPart)));}else{__cov_eOnTDC8eQKOtrUH_rK1ZpA.b['2'][1]++;}__cov_eOnTDC8eQKOtrUH_rK1ZpA.s['13']++;if(negative){__cov_eOnTDC8eQKOtrUH_rK1ZpA.b['3'][0]++;__cov_eOnTDC8eQKOtrUH_rK1ZpA.s['14']++;value=-value;}else{__cov_eOnTDC8eQKOtrUH_rK1ZpA.b['3'][1]++;}__cov_eOnTDC8eQKOtrUH_rK1ZpA.s['15']++;return value;},to:function(value){__cov_eOnTDC8eQKOtrUH_rK1ZpA.f['5']++;__cov_eOnTDC8eQKOtrUH_rK1ZpA.s['16']++;var me=this,alphabet=me.get(_string_alphabet),base=alphabet.length,fractionalPart,integerPart,any=_string__empty,negative=false;__cov_eOnTDC8eQKOtrUH_rK1ZpA.s['17']++;value=+value;__cov_eOnTDC8eQKOtrUH_rK1ZpA.s['18']++;if(value<0){__cov_eOnTDC8eQKOtrUH_rK1ZpA.b['4'][0]++;__cov_eOnTDC8eQKOtrUH_rK1ZpA.s['19']++;negative=true;__cov_eOnTDC8eQKOtrUH_rK1ZpA.s['20']++;value=-value;}else{__cov_eOnTDC8eQKOtrUH_rK1ZpA.b['4'][1]++;}__cov_eOnTDC8eQKOtrUH_rK1ZpA.s['21']++;integerPart=_floor(value);__cov_eOnTDC8eQKOtrUH_rK1ZpA.s['22']++;fractionalPart=String(value).split(_string__fullStop)[1];__cov_eOnTDC8eQKOtrUH_rK1ZpA.s['23']++;do{__cov_eOnTDC8eQKOtrUH_rK1ZpA.s['24']++;any=alphabet.charAt(integerPart%base)+any;__cov_eOnTDC8eQKOtrUH_rK1ZpA.s['25']++;integerPart=_floor(integerPart/base);}while(integerPart);__cov_eOnTDC8eQKOtrUH_rK1ZpA.s['26']++;if(fractionalPart){__cov_eOnTDC8eQKOtrUH_rK1ZpA.b['5'][0]++;__cov_eOnTDC8eQKOtrUH_rK1ZpA.s['27']++;any+=me.get(_string_radixPoint)+me.to(_Class._reverse(fractionalPart));}else{__cov_eOnTDC8eQKOtrUH_rK1ZpA.b['5'][1]++;}__cov_eOnTDC8eQKOtrUH_rK1ZpA.s['28']++;if(negative){__cov_eOnTDC8eQKOtrUH_rK1ZpA.b['6'][0]++;__cov_eOnTDC8eQKOtrUH_rK1ZpA.s['29']++;any=me.get(_string_minusSign)+any;}else{__cov_eOnTDC8eQKOtrUH_rK1ZpA.b['6'][1]++;}__cov_eOnTDC8eQKOtrUH_rK1ZpA.s['30']++;return any;}},{ATTRS:{alphabet:{setter:function(value){__cov_eOnTDC8eQKOtrUH_rK1ZpA.f['6']++;__cov_eOnTDC8eQKOtrUH_rK1ZpA.s['31']++;var lookup={},i=0,length=value.length;__cov_eOnTDC8eQKOtrUH_rK1ZpA.s['32']++;for(;i<length;i+=1){__cov_eOnTDC8eQKOtrUH_rK1ZpA.s['33']++;lookup[value.charAt(i)]=i;}__cov_eOnTDC8eQKOtrUH_rK1ZpA.s['34']++;this._set(_string_lookup,lookup);},value:'0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz~'},lookup:{readOnly:true,value:null},minusSign:{value:'-'},radixPoint:{value:_string__fullStop}},_reverse:function(string){__cov_eOnTDC8eQKOtrUH_rK1ZpA.f['7']++;__cov_eOnTDC8eQKOtrUH_rK1ZpA.s['35']++;return string.split(_string__empty).reverse().join(_string__empty);}});__cov_eOnTDC8eQKOtrUH_rK1ZpA.s['36']++;Y.AnyBaseConverter=_Class;}(Y,NAME));},'gallery-2013.05.02-22-59',{'requires':['base']});
