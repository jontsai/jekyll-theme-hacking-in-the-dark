if (typeof __coverage__ === 'undefined') { __coverage__ = {}; }
if (!__coverage__['build/gallery-md-timespinner/gallery-md-timespinner.js']) {
   __coverage__['build/gallery-md-timespinner/gallery-md-timespinner.js'] = {"path":"build/gallery-md-timespinner/gallery-md-timespinner.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":34},"end":{"line":1,"column":53}}},"2":{"name":"(anonymous_2)","line":109,"loc":{"start":{"line":109,"column":17},"end":{"line":109,"column":46}}},"3":{"name":"(anonymous_3)","line":125,"loc":{"start":{"line":125,"column":18},"end":{"line":125,"column":29}}},"4":{"name":"(anonymous_4)","line":136,"loc":{"start":{"line":136,"column":16},"end":{"line":136,"column":28}}},"5":{"name":"(anonymous_5)","line":144,"loc":{"start":{"line":144,"column":17},"end":{"line":144,"column":29}}},"6":{"name":"(anonymous_6)","line":148,"loc":{"start":{"line":148,"column":98},"end":{"line":148,"column":112}}},"7":{"name":"(anonymous_7)","line":162,"loc":{"start":{"line":162,"column":27},"end":{"line":162,"column":43}}},"8":{"name":"(anonymous_8)","line":174,"loc":{"start":{"line":174,"column":54},"end":{"line":174,"column":68}}},"9":{"name":"(anonymous_9)","line":188,"loc":{"start":{"line":188,"column":24},"end":{"line":188,"column":41}}},"10":{"name":"(anonymous_10)","line":192,"loc":{"start":{"line":192,"column":31},"end":{"line":192,"column":47}}},"11":{"name":"(anonymous_11)","line":195,"loc":{"start":{"line":195,"column":28},"end":{"line":195,"column":45}}},"12":{"name":"(anonymous_12)","line":233,"loc":{"start":{"line":233,"column":21},"end":{"line":233,"column":43}}},"13":{"name":"(anonymous_13)","line":258,"loc":{"start":{"line":258,"column":24},"end":{"line":258,"column":41}}},"14":{"name":"(anonymous_14)","line":272,"loc":{"start":{"line":272,"column":23},"end":{"line":272,"column":40}}},"15":{"name":"(anonymous_15)","line":282,"loc":{"start":{"line":282,"column":27},"end":{"line":282,"column":39}}},"16":{"name":"(anonymous_16)","line":300,"loc":{"start":{"line":300,"column":23},"end":{"line":300,"column":37}}},"17":{"name":"(anonymous_17)","line":315,"loc":{"start":{"line":315,"column":21},"end":{"line":315,"column":32}}},"18":{"name":"(anonymous_18)","line":325,"loc":{"start":{"line":325,"column":18},"end":{"line":325,"column":29}}},"19":{"name":"(anonymous_19)","line":339,"loc":{"start":{"line":339,"column":18},"end":{"line":339,"column":35}}},"20":{"name":"(anonymous_20)","line":349,"loc":{"start":{"line":349,"column":15},"end":{"line":349,"column":27}}},"21":{"name":"(anonymous_21)","line":357,"loc":{"start":{"line":357,"column":14},"end":{"line":357,"column":26}}},"22":{"name":"(anonymous_22)","line":391,"loc":{"start":{"line":391,"column":25},"end":{"line":391,"column":36}}},"23":{"name":"(anonymous_23)","line":394,"loc":{"start":{"line":394,"column":27},"end":{"line":394,"column":44}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":444,"column":74}},"2":{"start":{"line":10,"column":0},"end":{"line":10,"column":13}},"3":{"start":{"line":12,"column":0},"end":{"line":28,"column":18}},"4":{"start":{"line":37,"column":0},"end":{"line":441,"column":2}},"5":{"start":{"line":110,"column":12},"end":{"line":115,"column":34}},"6":{"start":{"line":116,"column":12},"end":{"line":116,"column":58}},"7":{"start":{"line":117,"column":12},"end":{"line":117,"column":22}},"8":{"start":{"line":126,"column":12},"end":{"line":126,"column":36}},"9":{"start":{"line":128,"column":12},"end":{"line":128,"column":97}},"10":{"start":{"line":129,"column":12},"end":{"line":129,"column":59}},"11":{"start":{"line":137,"column":12},"end":{"line":141,"column":14}},"12":{"start":{"line":145,"column":12},"end":{"line":147,"column":13}},"13":{"start":{"line":146,"column":16},"end":{"line":146,"column":37}},"14":{"start":{"line":148,"column":12},"end":{"line":152,"column":15}},"15":{"start":{"line":149,"column":16},"end":{"line":151,"column":17}},"16":{"start":{"line":150,"column":20},"end":{"line":150,"column":32}},"17":{"start":{"line":153,"column":12},"end":{"line":153,"column":56}},"18":{"start":{"line":163,"column":12},"end":{"line":180,"column":13}},"19":{"start":{"line":164,"column":16},"end":{"line":166,"column":19}},"20":{"start":{"line":167,"column":16},"end":{"line":167,"column":73}},"21":{"start":{"line":168,"column":16},"end":{"line":171,"column":18}},"22":{"start":{"line":172,"column":19},"end":{"line":180,"column":13}},"23":{"start":{"line":173,"column":16},"end":{"line":179,"column":17}},"24":{"start":{"line":174,"column":20},"end":{"line":176,"column":23}},"25":{"start":{"line":175,"column":24},"end":{"line":175,"column":36}},"26":{"start":{"line":177,"column":20},"end":{"line":177,"column":42}},"27":{"start":{"line":178,"column":20},"end":{"line":178,"column":39}},"28":{"start":{"line":189,"column":12},"end":{"line":223,"column":13}},"29":{"start":{"line":190,"column":16},"end":{"line":205,"column":19}},"30":{"start":{"line":193,"column":24},"end":{"line":193,"column":47}},"31":{"start":{"line":196,"column":24},"end":{"line":203,"column":25}},"32":{"start":{"line":198,"column":32},"end":{"line":198,"column":41}},"33":{"start":{"line":200,"column":32},"end":{"line":200,"column":41}},"34":{"start":{"line":202,"column":32},"end":{"line":202,"column":45}},"35":{"start":{"line":206,"column":16},"end":{"line":206,"column":109}},"36":{"start":{"line":207,"column":16},"end":{"line":207,"column":105}},"37":{"start":{"line":208,"column":16},"end":{"line":211,"column":19}},"38":{"start":{"line":212,"column":16},"end":{"line":212,"column":50}},"39":{"start":{"line":214,"column":16},"end":{"line":217,"column":19}},"40":{"start":{"line":218,"column":16},"end":{"line":222,"column":17}},"41":{"start":{"line":219,"column":20},"end":{"line":219,"column":51}},"42":{"start":{"line":220,"column":20},"end":{"line":220,"column":43}},"43":{"start":{"line":221,"column":20},"end":{"line":221,"column":40}},"44":{"start":{"line":234,"column":12},"end":{"line":236,"column":13}},"45":{"start":{"line":235,"column":16},"end":{"line":235,"column":23}},"46":{"start":{"line":237,"column":12},"end":{"line":237,"column":33}},"47":{"start":{"line":238,"column":12},"end":{"line":238,"column":41}},"48":{"start":{"line":239,"column":12},"end":{"line":244,"column":13}},"49":{"start":{"line":240,"column":16},"end":{"line":240,"column":60}},"50":{"start":{"line":241,"column":16},"end":{"line":241,"column":57}},"51":{"start":{"line":243,"column":16},"end":{"line":243,"column":47}},"52":{"start":{"line":245,"column":12},"end":{"line":245,"column":55}},"53":{"start":{"line":246,"column":12},"end":{"line":248,"column":13}},"54":{"start":{"line":247,"column":16},"end":{"line":247,"column":59}},"55":{"start":{"line":249,"column":12},"end":{"line":249,"column":34}},"56":{"start":{"line":259,"column":12},"end":{"line":261,"column":13}},"57":{"start":{"line":260,"column":16},"end":{"line":260,"column":37}},"58":{"start":{"line":262,"column":12},"end":{"line":264,"column":13}},"59":{"start":{"line":263,"column":16},"end":{"line":263,"column":79}},"60":{"start":{"line":273,"column":12},"end":{"line":273,"column":61}},"61":{"start":{"line":274,"column":12},"end":{"line":274,"column":42}},"62":{"start":{"line":283,"column":12},"end":{"line":285,"column":13}},"63":{"start":{"line":284,"column":16},"end":{"line":284,"column":23}},"64":{"start":{"line":286,"column":12},"end":{"line":286,"column":31}},"65":{"start":{"line":287,"column":12},"end":{"line":287,"column":104}},"66":{"start":{"line":288,"column":12},"end":{"line":288,"column":49}},"67":{"start":{"line":289,"column":12},"end":{"line":289,"column":63}},"68":{"start":{"line":290,"column":12},"end":{"line":290,"column":42}},"69":{"start":{"line":301,"column":12},"end":{"line":301,"column":50}},"70":{"start":{"line":302,"column":12},"end":{"line":304,"column":13}},"71":{"start":{"line":303,"column":16},"end":{"line":303,"column":69}},"72":{"start":{"line":305,"column":12},"end":{"line":307,"column":13}},"73":{"start":{"line":306,"column":16},"end":{"line":306,"column":71}},"74":{"start":{"line":316,"column":12},"end":{"line":316,"column":46}},"75":{"start":{"line":326,"column":12},"end":{"line":330,"column":13}},"76":{"start":{"line":327,"column":16},"end":{"line":327,"column":59}},"77":{"start":{"line":329,"column":16},"end":{"line":329,"column":65}},"78":{"start":{"line":340,"column":12},"end":{"line":340,"column":56}},"79":{"start":{"line":341,"column":12},"end":{"line":341,"column":25}},"80":{"start":{"line":350,"column":12},"end":{"line":350,"column":36}},"81":{"start":{"line":358,"column":12},"end":{"line":358,"column":37}},"82":{"start":{"line":392,"column":20},"end":{"line":392,"column":38}},"83":{"start":{"line":395,"column":20},"end":{"line":395,"column":49}}},"branchMap":{"1":{"line":128,"type":"cond-expr","locations":[{"start":{"line":128,"column":67},"end":{"line":128,"column":81}},{"start":{"line":128,"column":82},"end":{"line":128,"column":90}}]},"2":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":12},"end":{"line":145,"column":12}},{"start":{"line":145,"column":12},"end":{"line":145,"column":12}}]},"3":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":16},"end":{"line":149,"column":16}},{"start":{"line":149,"column":16},"end":{"line":149,"column":16}}]},"4":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":12},"end":{"line":163,"column":12}},{"start":{"line":163,"column":12},"end":{"line":163,"column":12}}]},"5":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":19},"end":{"line":172,"column":19}},{"start":{"line":172,"column":19},"end":{"line":172,"column":19}}]},"6":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":16},"end":{"line":173,"column":16}},{"start":{"line":173,"column":16},"end":{"line":173,"column":16}}]},"7":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":12},"end":{"line":189,"column":12}},{"start":{"line":189,"column":12},"end":{"line":189,"column":12}}]},"8":{"line":193,"type":"cond-expr","locations":[{"start":{"line":193,"column":37},"end":{"line":193,"column":41}},{"start":{"line":193,"column":42},"end":{"line":193,"column":46}}]},"9":{"line":196,"type":"switch","locations":[{"start":{"line":197,"column":28},"end":{"line":198,"column":41}},{"start":{"line":199,"column":28},"end":{"line":200,"column":41}},{"start":{"line":201,"column":28},"end":{"line":202,"column":45}}]},"10":{"line":206,"type":"cond-expr","locations":[{"start":{"line":206,"column":29},"end":{"line":206,"column":49}},{"start":{"line":206,"column":50},"end":{"line":206,"column":70}}]},"11":{"line":218,"type":"if","locations":[{"start":{"line":218,"column":16},"end":{"line":218,"column":16}},{"start":{"line":218,"column":16},"end":{"line":218,"column":16}}]},"12":{"line":234,"type":"if","locations":[{"start":{"line":234,"column":12},"end":{"line":234,"column":12}},{"start":{"line":234,"column":12},"end":{"line":234,"column":12}}]},"13":{"line":239,"type":"if","locations":[{"start":{"line":239,"column":12},"end":{"line":239,"column":12}},{"start":{"line":239,"column":12},"end":{"line":239,"column":12}}]},"14":{"line":240,"type":"binary-expr","locations":[{"start":{"line":240,"column":41},"end":{"line":240,"column":51}},{"start":{"line":240,"column":56},"end":{"line":240,"column":58}}]},"15":{"line":241,"type":"cond-expr","locations":[{"start":{"line":241,"column":52},"end":{"line":241,"column":53}},{"start":{"line":241,"column":54},"end":{"line":241,"column":55}}]},"16":{"line":246,"type":"if","locations":[{"start":{"line":246,"column":12},"end":{"line":246,"column":12}},{"start":{"line":246,"column":12},"end":{"line":246,"column":12}}]},"17":{"line":259,"type":"if","locations":[{"start":{"line":259,"column":12},"end":{"line":259,"column":12}},{"start":{"line":259,"column":12},"end":{"line":259,"column":12}}]},"18":{"line":262,"type":"if","locations":[{"start":{"line":262,"column":12},"end":{"line":262,"column":12}},{"start":{"line":262,"column":12},"end":{"line":262,"column":12}}]},"19":{"line":273,"type":"binary-expr","locations":[{"start":{"line":273,"column":32},"end":{"line":273,"column":37}},{"start":{"line":273,"column":41},"end":{"line":273,"column":59}}]},"20":{"line":283,"type":"if","locations":[{"start":{"line":283,"column":12},"end":{"line":283,"column":12}},{"start":{"line":283,"column":12},"end":{"line":283,"column":12}}]},"21":{"line":287,"type":"cond-expr","locations":[{"start":{"line":287,"column":65},"end":{"line":287,"column":93}},{"start":{"line":287,"column":94},"end":{"line":287,"column":95}}]},"22":{"line":289,"type":"cond-expr","locations":[{"start":{"line":289,"column":37},"end":{"line":289,"column":59}},{"start":{"line":289,"column":60},"end":{"line":289,"column":61}}]},"23":{"line":301,"type":"cond-expr","locations":[{"start":{"line":301,"column":45},"end":{"line":301,"column":47}},{"start":{"line":301,"column":48},"end":{"line":301,"column":49}}]},"24":{"line":302,"type":"if","locations":[{"start":{"line":302,"column":12},"end":{"line":302,"column":12}},{"start":{"line":302,"column":12},"end":{"line":302,"column":12}}]},"25":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":12},"end":{"line":305,"column":12}},{"start":{"line":305,"column":12},"end":{"line":305,"column":12}}]},"26":{"line":326,"type":"if","locations":[{"start":{"line":326,"column":12},"end":{"line":326,"column":12}},{"start":{"line":326,"column":12},"end":{"line":326,"column":12}}]}},"code":["(function () { YUI.add('gallery-md-timespinner', function (Y, NAME) {","","/*js lint white: true, nomen: true, maxerr: 50, indent: 4 */","/*gl obal Y*/","/**","* Shows and accepts a time via a set of spinners.","* It can run showing the current time.","* @module gallery-md-timespinner","*/","\"use strict\";","","var Spinner = Y.Spinner,","    Lang = Y.Lang,","    CBX = 'contentBox',","    BBX = 'boundingBox',","    CHANGE = 'Change',","    VALUE = 'value',","    UI = 'ui',","    SHOW_AMPM = 'showAmPm',","    INTERVAL = 'interval',","    SHOW_SECONDS = 'showSeconds',","    RUNNING = 'running',","    AFTER = 'after',","    WRAPPED = 'wrapped',","    HOURS = 'hours',","    MINUTES = 'minutes',","    SECONDS = 'seconds',","    AMPM = 'ampm';","/**"," * The TimeSpinner shows a set of spinners for hour, minute and optionally seconds and AM/PM."," * @class TimeSpinner"," * @extends Widget"," * @uses Y.Spinner, Y.MakeNode"," * @constructor"," * @param cfg {object} (optional) configuration attributes"," */","Y.TimeSpinner = Y.Base.create(","    'timeSpinner',","    Y.Widget,","    [Y.MakeNode],","    {","        /**","         * Reference to the Spinner showing the hours.","         * @property _hourSp","         * @type Y.Spinner","         * @default null","         * @private","         */","        _hourSp: null,","        /**","         * Reference to the Spinner showing the minutes.","         * @property _minSp","         * @type Y.Spinner","         * @default null","         * @private","         */","        _minSp: null,","        /**","         * Reference to the Spinner showing the seconds.","         * @property _secSp","         * @type Y.Spinner","         * @default null","         * @private","         */","        _secSp: null,","        /**","         * Reference to the Spinner showingam/pm.","         * @property _ampmSp","         * @type Y.Spinner","         * @default null","         * @private","         */","        _ampmSp: null,","        /**","         * Reference to the timer created by Y.later that updates the time.","         * @property _timer","         * @type timer object","         * @default null","         * @private","         */","        _timer: null,","        /**","         * Difference in milliseconds in between the current time and that displayed.","         * Used when the timer is running to display times other than the current time.","         * @property _offset","         * @type Number","         * @default 0","         * @private","         */","        _offset: 0,","","        /** Used to store the moment when the timer was stopped","         * @property _frozenTime","         * @type Number (milliseconds)","         * @default 0","         * @private","         */","        _frozenTime: 0,","","        /**","         * Helper factory to make a single Spinner","         * @method _spFact","         * @param which {String} ClassName key for the spinner and strings subkey for its title","         * @param cfg {object} (optional) configuration attribute overrides","         * @param where {Node} (optional) where to render it","         * @return {Spinner} Spinner instance","         * @private","         */","        _spFact: function (which, cfg, where) {","            var sp = new Spinner(Y.merge({","                min: 0,","                max: 59,","                wraparound: true,","                'strings.input': this.get('strings.' + which)","            },cfg)).render(where);","            sp.get(BBX).addClass(this._classNames[which]);","            return sp;","        },","        /**","         * Renders the hours and minutes spinners.","         * The other two, being optional, are rendered when set.","         * @method renderUI","         * @protected","         */","        renderUI: function() {","            var cbx = this.get(CBX);","","            this._hourSp = this._spFact(HOURS, this.get(SHOW_AMPM)?{min:1,max:12}:{max:23}, cbx);","            this._minSp = this._spFact(MINUTES, null, cbx);","        },","        /**","         * Sets the listeners for events from the hours and minutes spinners.","         * @method bindUI","         * @protected","         */","        bindUI: function () {","            this._eventHandles = [","                this._hourSp.after(VALUE + CHANGE, this._afterValueChange, this),","                this._minSp.after(VALUE + CHANGE, this._afterValueChange, this),","                this._minSp.after(WRAPPED, this._afterWrapped, this)","            ];","        },","","        destroy: function () {","            if (this._timer) {","                this._timer.cancel();","            }","            Y.each([].concat(this._eventHandles,this._secondsEventHandles,this._ampmEventHandle), function (eh) {","                if (eh) {","                    eh.detach();","                }","            });","            Y.TimeSpinner.superclass.destroy.call(this);","        },","","        /**","         * Creates or destroys the seconds spinner and attaches/detaches the event listeners.","         * @method _uiSetSeconds","         * @param value {Boolean} whether to show the seconds spinner or not","         * @private","         */","        _uiSetShowSeconds: function(value) {","            if (value) {","                this._secSp = this._spFact(SECONDS,{","                    value: this.get(VALUE).getSeconds()","                });","                this._minSp.get(BBX).insert(this._secSp.get(BBX), AFTER);","                this._secondsEventHandles = [","                    this._secSp.after(VALUE + CHANGE, this._afterValueChange, this),","                    this._secSp.after(WRAPPED, this._afterWrapped, this)","                ];","            } else if (this._secSp) {","                if (this._secSp) {","                    Y.each(this._secondsEventHandles, function (eh) {","                        eh.detach();","                    });","                    this._secSp.destroy();","                    this._secSp = null;","                }","            }","        },","        /**","         * Creates or destroys the am/pm spinner and attaches/detaches the event listeners.","         * @method _uiSetAmpm","         * @param value {Boolean} whether to show the am/pm spinner or not","         * @private","         */","        _uiSetShowAmPm: function (value) {","            if (value) {","                this._ampmSp = this._spFact(AMPM, {","                    max:1,","                    formatter: function(value) {","                        return value?'PM':'AM';","                    },","                    parser: function (value) {","                        switch (value.toUpperCase()) {","                            case 'AM':","                                return 0;","                            case 'PM':","                                return 1;","                            default:","                                return false;","                        }","                    }","                });","                (this._secSp?this._secSp.get(BBX):this._minSp.get(BBX)).insert(this._ampmSp.get(BBX), AFTER);","                this._ampmEventHandle = this._ampmSp.after(VALUE + CHANGE, this._afterValueChange, this);","                this._hourSp.setAttrs({","                    max: 12,","                    min: 1","                });","                this._uiSetValue(this.get(VALUE));","            } else {","                this._hourSp.setAttrs({","                    max: 23,","                    min: 0","                });","                if (this._ampmSp) {","                    this._ampmEventHandle.detach();","                    this._ampmSp.destroy();","                    this._ampmSp = null;","                }","            }","        },","        /**","         * Shows the current value in the set of spinners","         * @method _uiSetValue","         * @param value {Date} value to be shown","         * @param src {String} source of the change in value.","         *        If src===UI, the value comes from the spinners, it needs not be refreshed","         * @private","         */","        _uiSetValue: function (value, src) {","            if (src === UI) {","                return;","            }","            this._setting = true;","            var hours = value.getHours();","            if (this._ampmSp) {","                this._hourSp.set(VALUE, (hours % 12) || 12);","                this._ampmSp.set(VALUE, hours >= 12?1:0);","            } else {","                this._hourSp.set(VALUE, hours);","            }","            this._minSp.set(VALUE, value.getMinutes());","            if (this._secSp) {","                this._secSp.set(VALUE, value.getSeconds());","            }","            this._setting = false;","        },","","        /**","         * Sets the interval for refreshing the display","         * @method _uiSetInterval","         * @param value {number} milliseconds in between refreshes","         * @private","         */","        _uiSetInterval: function (value) {","            if (this._timer) {","                this._timer.cancel();","            }","            if (value) {","                this._timer = Y.later(value, this, this._updateTime, [], true);","            }","        },","        /**","         * Sets the timer running.","         * @method _uiSetRunning","         * @param value {Boolean} run or not","         * @private","         */","        _uiSetRunning: function (value) {","            this._uiSetInterval(value && this.get(INTERVAL));","            this._frozenTime = Date.now();","        },","","        /**","         * Listener for a change in any of the spinners, sets the value.","         * @method _afterValueChange","         * @private","         */","        _afterValueChange: function () {","            if (this._setting) {","                return;","            }","            var d = new Date();","            d.setHours((this._hourSp.get(VALUE) + (this._ampmSp? 12 * this._ampmSp.get(VALUE):0)) % 24);","            d.setMinutes(this._minSp.get(VALUE));","            d.setSeconds(this._secSp?this._secSp.get(VALUE):0);","            this.set(VALUE, d, {src: UI});","        },","","        /**","         * Listener for the wrapped event of the spinners to propagate","         * the changes from seconds to minutes and minutes to hours.","         * @method","         * @param ev {EventFacade} to find out which one wrapped and which way","         * @private","         */","        _afterWrapped: function (ev) {","            var dir = ev.newVal > ev.prevVal?-1:1;","            if (ev.target === this._secSp) {","                this._minSp.set(VALUE, this._minSp.get(VALUE) + dir);","            }","            if (ev.target === this._minSp) {","                this._hourSp.set(VALUE, this._hourSp.get(VALUE) + dir);","            }","        },","","        /**","         * Callback for the interval timer to update the time shown","         * @method _updateTime","         * @private","         */","        _updateTime: function() {","            this._uiSetValue(this._getTime());","        },","        /**","         * Getter for the time value.  It returns the current time minus the offset","         * or the time when it was stopped.","         * @method _getTime","         * @return {Date} Time shown","         * @private","         */","        _getTime: function() {","            if (this.get(RUNNING)) {","                return new Date(Date.now() - this._offset);","            } else {","                return new Date(this._frozenTime - this._offset);","            }","        },","        /**","         * Setter for the time value.","         * It calculates and saves the offset in between the current time and that set.","         * @method _setTime","         * @param value {Date} time to be shown","         * @private","         */","        _setTime: function (value) {","            this._offset = Date.now() - value.getTime();","            return value;","        },","","        /**","         * Helper method to set the timer running.","         * Same as <code>this.set('running', true);</code>","         * @method start","         */","        start: function () {","            this.set(RUNNING, true);","        },","        /**","         * Helper method to stop the timer.","         * Same as <code>this.set('running', false);</code>","         * @method stop","         */","        stop: function () {","            this.set(RUNNING, false);","        }","    },","    {","        _CLASS_NAMES: [HOURS, MINUTES, SECONDS, AMPM],","        ATTRS: {","            /**","             * Whether to show the am/pm indicator or show a 24 hours timer.","             * @attribute showAmPm","             * @type Boolean","             * @default false","             */","            showAmPm : {","                value:false,","                validator: Lang.isBoolean","            },","            /**","             * Whether to show the seconds indicator","             * @attribute showSeconds","             * @type Boolean","             * @default true","             */","            showSeconds:{","                value:true,","                validator: Lang.isBoolean","            },","            /**","             * Value of the timer","             * @attribute value","             * @type Date","             * @default time at initialization or current time if running","             */","            value: {","                valueFn: function() {","                    return new Date();","                },","                validator: function (value) {","                    return value instanceof Date;","                },","                getter:'_getTime',","                setter:'_setTime'","            },","","            /**","             * How often to refresh the time displayed","             * @attribute interval","             * @type Number (milliseconds)","             * @default 500","             */","            interval: {","                value: 500,","                validator: Lang.isNumber","            },","","            /**","             * Whether the timer is running.","             * @attribute running","             * @type Boolean","             * @default true","             */","            running: {","                value: true,","                validator: Lang.isBoolean","            },","","            /**","             * Set of localizable strings to be used as tooltips on the spinners.","             * @attribute strings","             */","            strings: {","                value: {","                    hours:HOURS,","                    minutes:MINUTES,","                    seconds: SECONDS,","                    ampm: 'am/pm'","                }","            }","        },","        _ATTRS_2_UI: {","            BIND: [INTERVAL, RUNNING, SHOW_AMPM, SHOW_SECONDS, VALUE],","            SYNC: [INTERVAL, RUNNING, SHOW_AMPM, SHOW_SECONDS, VALUE]","        }","    }",");","","","}, 'gallery-2013.01.23-21-59', {\"requires\": [\"gallery-md-spinner\", \"gallery-makenode\"]});","","}());"]};
}
var __cov_2PCPQq2xCt9fJtiYvXiQzw = __coverage__['build/gallery-md-timespinner/gallery-md-timespinner.js'];
__cov_2PCPQq2xCt9fJtiYvXiQzw.s['1']++;YUI.add('gallery-md-timespinner',function(Y,NAME){__cov_2PCPQq2xCt9fJtiYvXiQzw.f['1']++;__cov_2PCPQq2xCt9fJtiYvXiQzw.s['2']++;'use strict';__cov_2PCPQq2xCt9fJtiYvXiQzw.s['3']++;var Spinner=Y.Spinner,Lang=Y.Lang,CBX='contentBox',BBX='boundingBox',CHANGE='Change',VALUE='value',UI='ui',SHOW_AMPM='showAmPm',INTERVAL='interval',SHOW_SECONDS='showSeconds',RUNNING='running',AFTER='after',WRAPPED='wrapped',HOURS='hours',MINUTES='minutes',SECONDS='seconds',AMPM='ampm';__cov_2PCPQq2xCt9fJtiYvXiQzw.s['4']++;Y.TimeSpinner=Y.Base.create('timeSpinner',Y.Widget,[Y.MakeNode],{_hourSp:null,_minSp:null,_secSp:null,_ampmSp:null,_timer:null,_offset:0,_frozenTime:0,_spFact:function(which,cfg,where){__cov_2PCPQq2xCt9fJtiYvXiQzw.f['2']++;__cov_2PCPQq2xCt9fJtiYvXiQzw.s['5']++;var sp=new Spinner(Y.merge({min:0,max:59,wraparound:true,'strings.input':this.get('strings.'+which)},cfg)).render(where);__cov_2PCPQq2xCt9fJtiYvXiQzw.s['6']++;sp.get(BBX).addClass(this._classNames[which]);__cov_2PCPQq2xCt9fJtiYvXiQzw.s['7']++;return sp;},renderUI:function(){__cov_2PCPQq2xCt9fJtiYvXiQzw.f['3']++;__cov_2PCPQq2xCt9fJtiYvXiQzw.s['8']++;var cbx=this.get(CBX);__cov_2PCPQq2xCt9fJtiYvXiQzw.s['9']++;this._hourSp=this._spFact(HOURS,this.get(SHOW_AMPM)?(__cov_2PCPQq2xCt9fJtiYvXiQzw.b['1'][0]++,{min:1,max:12}):(__cov_2PCPQq2xCt9fJtiYvXiQzw.b['1'][1]++,{max:23}),cbx);__cov_2PCPQq2xCt9fJtiYvXiQzw.s['10']++;this._minSp=this._spFact(MINUTES,null,cbx);},bindUI:function(){__cov_2PCPQq2xCt9fJtiYvXiQzw.f['4']++;__cov_2PCPQq2xCt9fJtiYvXiQzw.s['11']++;this._eventHandles=[this._hourSp.after(VALUE+CHANGE,this._afterValueChange,this),this._minSp.after(VALUE+CHANGE,this._afterValueChange,this),this._minSp.after(WRAPPED,this._afterWrapped,this)];},destroy:function(){__cov_2PCPQq2xCt9fJtiYvXiQzw.f['5']++;__cov_2PCPQq2xCt9fJtiYvXiQzw.s['12']++;if(this._timer){__cov_2PCPQq2xCt9fJtiYvXiQzw.b['2'][0]++;__cov_2PCPQq2xCt9fJtiYvXiQzw.s['13']++;this._timer.cancel();}else{__cov_2PCPQq2xCt9fJtiYvXiQzw.b['2'][1]++;}__cov_2PCPQq2xCt9fJtiYvXiQzw.s['14']++;Y.each([].concat(this._eventHandles,this._secondsEventHandles,this._ampmEventHandle),function(eh){__cov_2PCPQq2xCt9fJtiYvXiQzw.f['6']++;__cov_2PCPQq2xCt9fJtiYvXiQzw.s['15']++;if(eh){__cov_2PCPQq2xCt9fJtiYvXiQzw.b['3'][0]++;__cov_2PCPQq2xCt9fJtiYvXiQzw.s['16']++;eh.detach();}else{__cov_2PCPQq2xCt9fJtiYvXiQzw.b['3'][1]++;}});__cov_2PCPQq2xCt9fJtiYvXiQzw.s['17']++;Y.TimeSpinner.superclass.destroy.call(this);},_uiSetShowSeconds:function(value){__cov_2PCPQq2xCt9fJtiYvXiQzw.f['7']++;__cov_2PCPQq2xCt9fJtiYvXiQzw.s['18']++;if(value){__cov_2PCPQq2xCt9fJtiYvXiQzw.b['4'][0]++;__cov_2PCPQq2xCt9fJtiYvXiQzw.s['19']++;this._secSp=this._spFact(SECONDS,{value:this.get(VALUE).getSeconds()});__cov_2PCPQq2xCt9fJtiYvXiQzw.s['20']++;this._minSp.get(BBX).insert(this._secSp.get(BBX),AFTER);__cov_2PCPQq2xCt9fJtiYvXiQzw.s['21']++;this._secondsEventHandles=[this._secSp.after(VALUE+CHANGE,this._afterValueChange,this),this._secSp.after(WRAPPED,this._afterWrapped,this)];}else{__cov_2PCPQq2xCt9fJtiYvXiQzw.b['4'][1]++;__cov_2PCPQq2xCt9fJtiYvXiQzw.s['22']++;if(this._secSp){__cov_2PCPQq2xCt9fJtiYvXiQzw.b['5'][0]++;__cov_2PCPQq2xCt9fJtiYvXiQzw.s['23']++;if(this._secSp){__cov_2PCPQq2xCt9fJtiYvXiQzw.b['6'][0]++;__cov_2PCPQq2xCt9fJtiYvXiQzw.s['24']++;Y.each(this._secondsEventHandles,function(eh){__cov_2PCPQq2xCt9fJtiYvXiQzw.f['8']++;__cov_2PCPQq2xCt9fJtiYvXiQzw.s['25']++;eh.detach();});__cov_2PCPQq2xCt9fJtiYvXiQzw.s['26']++;this._secSp.destroy();__cov_2PCPQq2xCt9fJtiYvXiQzw.s['27']++;this._secSp=null;}else{__cov_2PCPQq2xCt9fJtiYvXiQzw.b['6'][1]++;}}else{__cov_2PCPQq2xCt9fJtiYvXiQzw.b['5'][1]++;}}},_uiSetShowAmPm:function(value){__cov_2PCPQq2xCt9fJtiYvXiQzw.f['9']++;__cov_2PCPQq2xCt9fJtiYvXiQzw.s['28']++;if(value){__cov_2PCPQq2xCt9fJtiYvXiQzw.b['7'][0]++;__cov_2PCPQq2xCt9fJtiYvXiQzw.s['29']++;this._ampmSp=this._spFact(AMPM,{max:1,formatter:function(value){__cov_2PCPQq2xCt9fJtiYvXiQzw.f['10']++;__cov_2PCPQq2xCt9fJtiYvXiQzw.s['30']++;return value?(__cov_2PCPQq2xCt9fJtiYvXiQzw.b['8'][0]++,'PM'):(__cov_2PCPQq2xCt9fJtiYvXiQzw.b['8'][1]++,'AM');},parser:function(value){__cov_2PCPQq2xCt9fJtiYvXiQzw.f['11']++;__cov_2PCPQq2xCt9fJtiYvXiQzw.s['31']++;switch(value.toUpperCase()){case'AM':__cov_2PCPQq2xCt9fJtiYvXiQzw.b['9'][0]++;__cov_2PCPQq2xCt9fJtiYvXiQzw.s['32']++;return 0;case'PM':__cov_2PCPQq2xCt9fJtiYvXiQzw.b['9'][1]++;__cov_2PCPQq2xCt9fJtiYvXiQzw.s['33']++;return 1;default:__cov_2PCPQq2xCt9fJtiYvXiQzw.b['9'][2]++;__cov_2PCPQq2xCt9fJtiYvXiQzw.s['34']++;return false;}}});__cov_2PCPQq2xCt9fJtiYvXiQzw.s['35']++;(this._secSp?(__cov_2PCPQq2xCt9fJtiYvXiQzw.b['10'][0]++,this._secSp.get(BBX)):(__cov_2PCPQq2xCt9fJtiYvXiQzw.b['10'][1]++,this._minSp.get(BBX))).insert(this._ampmSp.get(BBX),AFTER);__cov_2PCPQq2xCt9fJtiYvXiQzw.s['36']++;this._ampmEventHandle=this._ampmSp.after(VALUE+CHANGE,this._afterValueChange,this);__cov_2PCPQq2xCt9fJtiYvXiQzw.s['37']++;this._hourSp.setAttrs({max:12,min:1});__cov_2PCPQq2xCt9fJtiYvXiQzw.s['38']++;this._uiSetValue(this.get(VALUE));}else{__cov_2PCPQq2xCt9fJtiYvXiQzw.b['7'][1]++;__cov_2PCPQq2xCt9fJtiYvXiQzw.s['39']++;this._hourSp.setAttrs({max:23,min:0});__cov_2PCPQq2xCt9fJtiYvXiQzw.s['40']++;if(this._ampmSp){__cov_2PCPQq2xCt9fJtiYvXiQzw.b['11'][0]++;__cov_2PCPQq2xCt9fJtiYvXiQzw.s['41']++;this._ampmEventHandle.detach();__cov_2PCPQq2xCt9fJtiYvXiQzw.s['42']++;this._ampmSp.destroy();__cov_2PCPQq2xCt9fJtiYvXiQzw.s['43']++;this._ampmSp=null;}else{__cov_2PCPQq2xCt9fJtiYvXiQzw.b['11'][1]++;}}},_uiSetValue:function(value,src){__cov_2PCPQq2xCt9fJtiYvXiQzw.f['12']++;__cov_2PCPQq2xCt9fJtiYvXiQzw.s['44']++;if(src===UI){__cov_2PCPQq2xCt9fJtiYvXiQzw.b['12'][0]++;__cov_2PCPQq2xCt9fJtiYvXiQzw.s['45']++;return;}else{__cov_2PCPQq2xCt9fJtiYvXiQzw.b['12'][1]++;}__cov_2PCPQq2xCt9fJtiYvXiQzw.s['46']++;this._setting=true;__cov_2PCPQq2xCt9fJtiYvXiQzw.s['47']++;var hours=value.getHours();__cov_2PCPQq2xCt9fJtiYvXiQzw.s['48']++;if(this._ampmSp){__cov_2PCPQq2xCt9fJtiYvXiQzw.b['13'][0]++;__cov_2PCPQq2xCt9fJtiYvXiQzw.s['49']++;this._hourSp.set(VALUE,(__cov_2PCPQq2xCt9fJtiYvXiQzw.b['14'][0]++,hours%12)||(__cov_2PCPQq2xCt9fJtiYvXiQzw.b['14'][1]++,12));__cov_2PCPQq2xCt9fJtiYvXiQzw.s['50']++;this._ampmSp.set(VALUE,hours>=12?(__cov_2PCPQq2xCt9fJtiYvXiQzw.b['15'][0]++,1):(__cov_2PCPQq2xCt9fJtiYvXiQzw.b['15'][1]++,0));}else{__cov_2PCPQq2xCt9fJtiYvXiQzw.b['13'][1]++;__cov_2PCPQq2xCt9fJtiYvXiQzw.s['51']++;this._hourSp.set(VALUE,hours);}__cov_2PCPQq2xCt9fJtiYvXiQzw.s['52']++;this._minSp.set(VALUE,value.getMinutes());__cov_2PCPQq2xCt9fJtiYvXiQzw.s['53']++;if(this._secSp){__cov_2PCPQq2xCt9fJtiYvXiQzw.b['16'][0]++;__cov_2PCPQq2xCt9fJtiYvXiQzw.s['54']++;this._secSp.set(VALUE,value.getSeconds());}else{__cov_2PCPQq2xCt9fJtiYvXiQzw.b['16'][1]++;}__cov_2PCPQq2xCt9fJtiYvXiQzw.s['55']++;this._setting=false;},_uiSetInterval:function(value){__cov_2PCPQq2xCt9fJtiYvXiQzw.f['13']++;__cov_2PCPQq2xCt9fJtiYvXiQzw.s['56']++;if(this._timer){__cov_2PCPQq2xCt9fJtiYvXiQzw.b['17'][0]++;__cov_2PCPQq2xCt9fJtiYvXiQzw.s['57']++;this._timer.cancel();}else{__cov_2PCPQq2xCt9fJtiYvXiQzw.b['17'][1]++;}__cov_2PCPQq2xCt9fJtiYvXiQzw.s['58']++;if(value){__cov_2PCPQq2xCt9fJtiYvXiQzw.b['18'][0]++;__cov_2PCPQq2xCt9fJtiYvXiQzw.s['59']++;this._timer=Y.later(value,this,this._updateTime,[],true);}else{__cov_2PCPQq2xCt9fJtiYvXiQzw.b['18'][1]++;}},_uiSetRunning:function(value){__cov_2PCPQq2xCt9fJtiYvXiQzw.f['14']++;__cov_2PCPQq2xCt9fJtiYvXiQzw.s['60']++;this._uiSetInterval((__cov_2PCPQq2xCt9fJtiYvXiQzw.b['19'][0]++,value)&&(__cov_2PCPQq2xCt9fJtiYvXiQzw.b['19'][1]++,this.get(INTERVAL)));__cov_2PCPQq2xCt9fJtiYvXiQzw.s['61']++;this._frozenTime=Date.now();},_afterValueChange:function(){__cov_2PCPQq2xCt9fJtiYvXiQzw.f['15']++;__cov_2PCPQq2xCt9fJtiYvXiQzw.s['62']++;if(this._setting){__cov_2PCPQq2xCt9fJtiYvXiQzw.b['20'][0]++;__cov_2PCPQq2xCt9fJtiYvXiQzw.s['63']++;return;}else{__cov_2PCPQq2xCt9fJtiYvXiQzw.b['20'][1]++;}__cov_2PCPQq2xCt9fJtiYvXiQzw.s['64']++;var d=new Date();__cov_2PCPQq2xCt9fJtiYvXiQzw.s['65']++;d.setHours((this._hourSp.get(VALUE)+(this._ampmSp?(__cov_2PCPQq2xCt9fJtiYvXiQzw.b['21'][0]++,12*this._ampmSp.get(VALUE)):(__cov_2PCPQq2xCt9fJtiYvXiQzw.b['21'][1]++,0)))%24);__cov_2PCPQq2xCt9fJtiYvXiQzw.s['66']++;d.setMinutes(this._minSp.get(VALUE));__cov_2PCPQq2xCt9fJtiYvXiQzw.s['67']++;d.setSeconds(this._secSp?(__cov_2PCPQq2xCt9fJtiYvXiQzw.b['22'][0]++,this._secSp.get(VALUE)):(__cov_2PCPQq2xCt9fJtiYvXiQzw.b['22'][1]++,0));__cov_2PCPQq2xCt9fJtiYvXiQzw.s['68']++;this.set(VALUE,d,{src:UI});},_afterWrapped:function(ev){__cov_2PCPQq2xCt9fJtiYvXiQzw.f['16']++;__cov_2PCPQq2xCt9fJtiYvXiQzw.s['69']++;var dir=ev.newVal>ev.prevVal?(__cov_2PCPQq2xCt9fJtiYvXiQzw.b['23'][0]++,-1):(__cov_2PCPQq2xCt9fJtiYvXiQzw.b['23'][1]++,1);__cov_2PCPQq2xCt9fJtiYvXiQzw.s['70']++;if(ev.target===this._secSp){__cov_2PCPQq2xCt9fJtiYvXiQzw.b['24'][0]++;__cov_2PCPQq2xCt9fJtiYvXiQzw.s['71']++;this._minSp.set(VALUE,this._minSp.get(VALUE)+dir);}else{__cov_2PCPQq2xCt9fJtiYvXiQzw.b['24'][1]++;}__cov_2PCPQq2xCt9fJtiYvXiQzw.s['72']++;if(ev.target===this._minSp){__cov_2PCPQq2xCt9fJtiYvXiQzw.b['25'][0]++;__cov_2PCPQq2xCt9fJtiYvXiQzw.s['73']++;this._hourSp.set(VALUE,this._hourSp.get(VALUE)+dir);}else{__cov_2PCPQq2xCt9fJtiYvXiQzw.b['25'][1]++;}},_updateTime:function(){__cov_2PCPQq2xCt9fJtiYvXiQzw.f['17']++;__cov_2PCPQq2xCt9fJtiYvXiQzw.s['74']++;this._uiSetValue(this._getTime());},_getTime:function(){__cov_2PCPQq2xCt9fJtiYvXiQzw.f['18']++;__cov_2PCPQq2xCt9fJtiYvXiQzw.s['75']++;if(this.get(RUNNING)){__cov_2PCPQq2xCt9fJtiYvXiQzw.b['26'][0]++;__cov_2PCPQq2xCt9fJtiYvXiQzw.s['76']++;return new Date(Date.now()-this._offset);}else{__cov_2PCPQq2xCt9fJtiYvXiQzw.b['26'][1]++;__cov_2PCPQq2xCt9fJtiYvXiQzw.s['77']++;return new Date(this._frozenTime-this._offset);}},_setTime:function(value){__cov_2PCPQq2xCt9fJtiYvXiQzw.f['19']++;__cov_2PCPQq2xCt9fJtiYvXiQzw.s['78']++;this._offset=Date.now()-value.getTime();__cov_2PCPQq2xCt9fJtiYvXiQzw.s['79']++;return value;},start:function(){__cov_2PCPQq2xCt9fJtiYvXiQzw.f['20']++;__cov_2PCPQq2xCt9fJtiYvXiQzw.s['80']++;this.set(RUNNING,true);},stop:function(){__cov_2PCPQq2xCt9fJtiYvXiQzw.f['21']++;__cov_2PCPQq2xCt9fJtiYvXiQzw.s['81']++;this.set(RUNNING,false);}},{_CLASS_NAMES:[HOURS,MINUTES,SECONDS,AMPM],ATTRS:{showAmPm:{value:false,validator:Lang.isBoolean},showSeconds:{value:true,validator:Lang.isBoolean},value:{valueFn:function(){__cov_2PCPQq2xCt9fJtiYvXiQzw.f['22']++;__cov_2PCPQq2xCt9fJtiYvXiQzw.s['82']++;return new Date();},validator:function(value){__cov_2PCPQq2xCt9fJtiYvXiQzw.f['23']++;__cov_2PCPQq2xCt9fJtiYvXiQzw.s['83']++;return value instanceof Date;},getter:'_getTime',setter:'_setTime'},interval:{value:500,validator:Lang.isNumber},running:{value:true,validator:Lang.isBoolean},strings:{value:{hours:HOURS,minutes:MINUTES,seconds:SECONDS,ampm:'am/pm'}}},_ATTRS_2_UI:{BIND:[INTERVAL,RUNNING,SHOW_AMPM,SHOW_SECONDS,VALUE],SYNC:[INTERVAL,RUNNING,SHOW_AMPM,SHOW_SECONDS,VALUE]}});},'gallery-2013.01.23-21-59',{'requires':['gallery-md-spinner','gallery-makenode']});
