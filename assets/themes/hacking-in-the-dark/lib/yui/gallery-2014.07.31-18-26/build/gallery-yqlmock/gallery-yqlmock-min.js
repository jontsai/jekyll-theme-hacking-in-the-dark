YUI.add("gallery-yqlmock",function(e,t){"use strict";function n(){function o(e,t){var n={errno:e};switch(e){case 0:n.name="Unexpected numbers of calls",n.message="YQL Call numbers unexpected.\nExpected calls: "+t.expectedCalls+"\nActual calls: "+t.actuallCalls,n.message+="\nDetails:\nsql: "+t.sql+"\nparams: "+t.params+"\nopts: "+t.opts;break;case 1:n.name="Invalid expectation object",n.message='Expectation Object needs to have at least a "sql" field';break;case 2:n.name="Query Type Error",n.message="Query needs to be a String";break;case 3:n.name="Unexpected Query",n.message="Unexpected YQL call:\nsql: "+t.sql+"\ncallback: "+t.callback+"\nparams: ",n.message+=t.params+"\nopts: "+t.opts+"\nPlease check your expectation again."}return n}function u(e){var t={},n=[],r,i;for(r in e)e.hasOwnProperty(r)&&(typeof e[r]=="object"&&(e[r]=u(e[r])),n.push(r));n.sort();for(i=0;i<n.length;i+=1)t[n[i]]=e[n[i]];return t}function a(e){var t;if(typeof e.sql!="string")throw o(2);return t="sql="+String(e.sql)+"&params="+JSON.stringify(u(e.params)),t+="&opts="+JSON.stringify(u(e.opts)),t}function f(e,t,n,i){var s=typeof t=="function",u={sql:e,params:s?n:t,opts:s?i:n},f=a(u);if(!r[f])throw o(3,{sql:String(u.sql),callback:s?String(t):"undefined",params:JSON.stringify(u.params),opts:JSON.stringify(u.opts)});r[f].actuallCalls+=1,s&&t(r[f].returnItem)}var t=YUITest.Assert,n={},r={},i=e.YQL,s=e.YQLRequest;return n.expect=function(e){var t,n=function(e){var t;if(!e||!e.sql)throw o(1);t=a(e),r[t]={sql:String(e.sql),params:JSON.stringify(e.params),opts:JSON.stringify(e.opts),expectedCalls:parseInt(e.callCount,10)||1,actuallCalls:0,returnItem:{query:{results:e.resultSet||{}}}}};if(e instanceof Array)for(t=0;t<e.length;t+=1)n(e[t]);else n(e)},n.verify=function(){e.YQL=i,e.YQLRequest=s,e.Object.each(r,function(e){if(e.expectedCalls!==e.actuallCalls)throw o(0,e)}),t.pass()},n.restoreYQL=function(){e.YQL=i,e.YQLRequest=s},n.mockYQL=function(){e.YQL=f,e.YQLRequest=f},e.YQL=f,e.YQLRequest=f,n}e.YQLMock=n},"gallery-2013.04.10-22-48",{requires:["yui-base"]});
