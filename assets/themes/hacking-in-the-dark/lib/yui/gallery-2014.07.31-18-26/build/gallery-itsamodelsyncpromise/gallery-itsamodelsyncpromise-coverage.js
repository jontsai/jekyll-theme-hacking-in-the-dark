if (typeof __coverage__ === 'undefined') { __coverage__ = {}; }
if (!__coverage__['build/gallery-itsamodelsyncpromise/gallery-itsamodelsyncpromise.js']) {
   __coverage__['build/gallery-itsamodelsyncpromise/gallery-itsamodelsyncpromise.js'] = {"path":"build/gallery-itsamodelsyncpromise/gallery-itsamodelsyncpromise.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0,0,0],"12":[0,0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0,0],"38":[0,0],"39":[0,0],"40":[0,0,0],"41":[0,0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0,0],"50":[0,0],"51":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":40},"end":{"line":1,"column":59}}},"2":{"name":"(anonymous_2)","line":98,"loc":{"start":{"line":98,"column":9},"end":{"line":98,"column":29}}},"3":{"name":"(anonymous_3)","line":124,"loc":{"start":{"line":124,"column":36},"end":{"line":124,"column":64}}},"4":{"name":"(anonymous_4)","line":127,"loc":{"start":{"line":127,"column":8},"end":{"line":127,"column":19}}},"5":{"name":"(anonymous_5)","line":131,"loc":{"start":{"line":131,"column":8},"end":{"line":131,"column":19}}},"6":{"name":"(anonymous_6)","line":142,"loc":{"start":{"line":142,"column":20},"end":{"line":142,"column":32}}},"7":{"name":"(anonymous_7)","line":156,"loc":{"start":{"line":156,"column":32},"end":{"line":156,"column":43}}},"8":{"name":"(anonymous_8)","line":159,"loc":{"start":{"line":159,"column":32},"end":{"line":159,"column":43}}},"9":{"name":"(anonymous_9)","line":166,"loc":{"start":{"line":166,"column":84},"end":{"line":166,"column":95}}},"10":{"name":"(anonymous_10)","line":169,"loc":{"start":{"line":169,"column":88},"end":{"line":169,"column":99}}},"11":{"name":"(anonymous_11)","line":186,"loc":{"start":{"line":186,"column":34},"end":{"line":186,"column":45}}},"12":{"name":"(anonymous_12)","line":187,"loc":{"start":{"line":187,"column":25},"end":{"line":187,"column":44}}},"13":{"name":"(anonymous_13)","line":333,"loc":{"start":{"line":333,"column":4},"end":{"line":333,"column":17}}},"14":{"name":"(anonymous_14)","line":334,"loc":{"start":{"line":334,"column":31},"end":{"line":334,"column":59}}},"15":{"name":"(anonymous_15)","line":341,"loc":{"start":{"line":341,"column":16},"end":{"line":341,"column":35}}},"16":{"name":"(anonymous_16)","line":344,"loc":{"start":{"line":344,"column":16},"end":{"line":344,"column":30}}},"17":{"name":"(anonymous_17)","line":351,"loc":{"start":{"line":351,"column":39},"end":{"line":351,"column":58}}},"18":{"name":"(anonymous_18)","line":377,"loc":{"start":{"line":377,"column":39},"end":{"line":377,"column":50}}},"19":{"name":"(anonymous_19)","line":398,"loc":{"start":{"line":398,"column":34},"end":{"line":398,"column":58}}},"20":{"name":"(anonymous_20)","line":416,"loc":{"start":{"line":416,"column":34},"end":{"line":416,"column":58}}},"21":{"name":"(anonymous_21)","line":420,"loc":{"start":{"line":420,"column":28},"end":{"line":420,"column":55}}},"22":{"name":"(anonymous_22)","line":437,"loc":{"start":{"line":437,"column":8},"end":{"line":437,"column":29}}},"23":{"name":"(anonymous_23)","line":468,"loc":{"start":{"line":468,"column":34},"end":{"line":468,"column":46}}},"24":{"name":"(anonymous_24)","line":480,"loc":{"start":{"line":480,"column":17},"end":{"line":480,"column":28}}},"25":{"name":"(anonymous_25)","line":483,"loc":{"start":{"line":483,"column":49},"end":{"line":483,"column":65}}},"26":{"name":"(anonymous_26)","line":489,"loc":{"start":{"line":489,"column":22},"end":{"line":489,"column":36}}},"27":{"name":"(anonymous_27)","line":498,"loc":{"start":{"line":498,"column":26},"end":{"line":498,"column":45}}},"28":{"name":"(anonymous_28)","line":510,"loc":{"start":{"line":510,"column":47},"end":{"line":510,"column":72}}},"29":{"name":"(anonymous_29)","line":539,"loc":{"start":{"line":539,"column":31},"end":{"line":539,"column":43}}},"30":{"name":"(anonymous_30)","line":544,"loc":{"start":{"line":544,"column":14},"end":{"line":544,"column":28}}},"31":{"name":"(anonymous_31)","line":553,"loc":{"start":{"line":553,"column":18},"end":{"line":553,"column":37}}},"32":{"name":"(anonymous_32)","line":577,"loc":{"start":{"line":577,"column":37},"end":{"line":577,"column":62}}},"33":{"name":"(anonymous_33)","line":601,"loc":{"start":{"line":601,"column":31},"end":{"line":601,"column":43}}},"34":{"name":"(anonymous_34)","line":616,"loc":{"start":{"line":616,"column":46},"end":{"line":616,"column":69}}},"35":{"name":"(anonymous_35)","line":624,"loc":{"start":{"line":624,"column":26},"end":{"line":624,"column":40}}},"36":{"name":"(anonymous_36)","line":630,"loc":{"start":{"line":630,"column":30},"end":{"line":630,"column":49}}},"37":{"name":"(anonymous_37)","line":659,"loc":{"start":{"line":659,"column":59},"end":{"line":659,"column":84}}},"38":{"name":"(anonymous_38)","line":691,"loc":{"start":{"line":691,"column":30},"end":{"line":691,"column":42}}},"39":{"name":"(anonymous_39)","line":765,"loc":{"start":{"line":765,"column":33},"end":{"line":765,"column":54}}},"40":{"name":"(anonymous_40)","line":773,"loc":{"start":{"line":773,"column":39},"end":{"line":773,"column":58}}},"41":{"name":"(anonymous_41)","line":775,"loc":{"start":{"line":775,"column":22},"end":{"line":775,"column":38}}},"42":{"name":"(anonymous_42)","line":779,"loc":{"start":{"line":779,"column":53},"end":{"line":779,"column":65}}},"43":{"name":"(anonymous_43)","line":817,"loc":{"start":{"line":817,"column":68},"end":{"line":817,"column":86}}},"44":{"name":"(anonymous_44)","line":820,"loc":{"start":{"line":820,"column":60},"end":{"line":820,"column":72}}},"45":{"name":"(anonymous_45)","line":843,"loc":{"start":{"line":843,"column":30},"end":{"line":843,"column":48}}},"46":{"name":"(anonymous_46)","line":847,"loc":{"start":{"line":847,"column":8},"end":{"line":847,"column":25}}},"47":{"name":"(anonymous_47)","line":856,"loc":{"start":{"line":856,"column":23},"end":{"line":856,"column":39}}},"48":{"name":"(anonymous_48)","line":870,"loc":{"start":{"line":870,"column":39},"end":{"line":870,"column":56}}},"49":{"name":"(anonymous_49)","line":894,"loc":{"start":{"line":894,"column":39},"end":{"line":894,"column":65}}},"50":{"name":"(anonymous_50)","line":898,"loc":{"start":{"line":898,"column":8},"end":{"line":898,"column":29}}},"51":{"name":"(anonymous_51)","line":901,"loc":{"start":{"line":901,"column":37},"end":{"line":901,"column":64}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":953,"column":3}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":13}},"3":{"start":{"line":22,"column":0},"end":{"line":112,"column":2}},"4":{"start":{"line":99,"column":4},"end":{"line":110,"column":5}},"5":{"start":{"line":100,"column":8},"end":{"line":109,"column":9}},"6":{"start":{"line":101,"column":12},"end":{"line":101,"column":46}},"7":{"start":{"line":103,"column":12},"end":{"line":107,"column":15}},"8":{"start":{"line":108,"column":12},"end":{"line":108,"column":22}},"9":{"start":{"line":111,"column":4},"end":{"line":111,"column":26}},"10":{"start":{"line":124,"column":0},"end":{"line":177,"column":2}},"11":{"start":{"line":125,"column":4},"end":{"line":125,"column":24}},"12":{"start":{"line":126,"column":4},"end":{"line":176,"column":6}},"13":{"start":{"line":128,"column":12},"end":{"line":128,"column":53}},"14":{"start":{"line":133,"column":12},"end":{"line":133,"column":111}},"15":{"start":{"line":134,"column":12},"end":{"line":134,"column":138}},"16":{"start":{"line":136,"column":12},"end":{"line":174,"column":13}},"17":{"start":{"line":138,"column":16},"end":{"line":138,"column":80}},"18":{"start":{"line":140,"column":16},"end":{"line":165,"column":18}},"19":{"start":{"line":143,"column":24},"end":{"line":148,"column":55}},"20":{"start":{"line":149,"column":24},"end":{"line":163,"column":25}},"21":{"start":{"line":150,"column":28},"end":{"line":150,"column":69}},"22":{"start":{"line":151,"column":28},"end":{"line":154,"column":45}},"23":{"start":{"line":155,"column":28},"end":{"line":162,"column":30}},"24":{"start":{"line":157,"column":36},"end":{"line":157,"column":81}},"25":{"start":{"line":160,"column":36},"end":{"line":160,"column":81}},"26":{"start":{"line":166,"column":16},"end":{"line":168,"column":19}},"27":{"start":{"line":167,"column":20},"end":{"line":167,"column":59}},"28":{"start":{"line":169,"column":16},"end":{"line":171,"column":19}},"29":{"start":{"line":170,"column":20},"end":{"line":170,"column":59}},"30":{"start":{"line":186,"column":0},"end":{"line":190,"column":2}},"31":{"start":{"line":187,"column":4},"end":{"line":189,"column":7}},"32":{"start":{"line":188,"column":8},"end":{"line":188,"column":20}},"33":{"start":{"line":331,"column":0},"end":{"line":355,"column":2}},"34":{"start":{"line":334,"column":8},"end":{"line":350,"column":10}},"35":{"start":{"line":335,"column":12},"end":{"line":336,"column":24}},"36":{"start":{"line":340,"column":12},"end":{"line":347,"column":14}},"37":{"start":{"line":342,"column":20},"end":{"line":342,"column":45}},"38":{"start":{"line":345,"column":20},"end":{"line":345,"column":34}},"39":{"start":{"line":349,"column":12},"end":{"line":349,"column":28}},"40":{"start":{"line":351,"column":8},"end":{"line":353,"column":10}},"41":{"start":{"line":352,"column":12},"end":{"line":352,"column":52}},"42":{"start":{"line":377,"column":0},"end":{"line":385,"column":2}},"43":{"start":{"line":378,"column":4},"end":{"line":378,"column":24}},"44":{"start":{"line":380,"column":4},"end":{"line":380,"column":76}},"45":{"start":{"line":381,"column":4},"end":{"line":381,"column":92}},"46":{"start":{"line":382,"column":4},"end":{"line":382,"column":92}},"47":{"start":{"line":384,"column":4},"end":{"line":384,"column":41}},"48":{"start":{"line":398,"column":0},"end":{"line":405,"column":2}},"49":{"start":{"line":399,"column":4},"end":{"line":399,"column":24}},"50":{"start":{"line":401,"column":4},"end":{"line":401,"column":64}},"51":{"start":{"line":402,"column":4},"end":{"line":402,"column":77}},"52":{"start":{"line":404,"column":4},"end":{"line":404,"column":20}},"53":{"start":{"line":416,"column":0},"end":{"line":454,"column":2}},"54":{"start":{"line":417,"column":4},"end":{"line":418,"column":61}},"55":{"start":{"line":420,"column":4},"end":{"line":423,"column":7}},"56":{"start":{"line":421,"column":8},"end":{"line":421,"column":33}},"57":{"start":{"line":422,"column":8},"end":{"line":422,"column":31}},"58":{"start":{"line":426,"column":4},"end":{"line":433,"column":6}},"59":{"start":{"line":435,"column":4},"end":{"line":440,"column":6}},"60":{"start":{"line":438,"column":12},"end":{"line":438,"column":38}},"61":{"start":{"line":442,"column":4},"end":{"line":450,"column":82}},"62":{"start":{"line":452,"column":4},"end":{"line":452,"column":38}},"63":{"start":{"line":453,"column":4},"end":{"line":453,"column":19}},"64":{"start":{"line":468,"column":0},"end":{"line":525,"column":2}},"65":{"start":{"line":469,"column":4},"end":{"line":474,"column":37}},"66":{"start":{"line":476,"column":4},"end":{"line":523,"column":5}},"67":{"start":{"line":477,"column":8},"end":{"line":477,"column":63}},"68":{"start":{"line":480,"column":8},"end":{"line":486,"column":10}},"69":{"start":{"line":482,"column":12},"end":{"line":482,"column":36}},"70":{"start":{"line":483,"column":12},"end":{"line":485,"column":15}},"71":{"start":{"line":484,"column":16},"end":{"line":484,"column":47}},"72":{"start":{"line":488,"column":8},"end":{"line":522,"column":9}},"73":{"start":{"line":489,"column":12},"end":{"line":497,"column":14}},"74":{"start":{"line":490,"column":16},"end":{"line":494,"column":18}},"75":{"start":{"line":495,"column":16},"end":{"line":495,"column":53}},"76":{"start":{"line":496,"column":16},"end":{"line":496,"column":46}},"77":{"start":{"line":498,"column":12},"end":{"line":501,"column":14}},"78":{"start":{"line":499,"column":16},"end":{"line":499,"column":25}},"79":{"start":{"line":500,"column":16},"end":{"line":500,"column":41}},"80":{"start":{"line":502,"column":12},"end":{"line":518,"column":13}},"81":{"start":{"line":504,"column":16},"end":{"line":507,"column":18}},"82":{"start":{"line":510,"column":16},"end":{"line":517,"column":19}},"83":{"start":{"line":511,"column":20},"end":{"line":516,"column":21}},"84":{"start":{"line":512,"column":24},"end":{"line":512,"column":37}},"85":{"start":{"line":515,"column":24},"end":{"line":515,"column":46}},"86":{"start":{"line":520,"column":12},"end":{"line":520,"column":21}},"87":{"start":{"line":521,"column":12},"end":{"line":521,"column":29}},"88":{"start":{"line":524,"column":4},"end":{"line":524,"column":21}},"89":{"start":{"line":539,"column":0},"end":{"line":587,"column":2}},"90":{"start":{"line":540,"column":4},"end":{"line":542,"column":29}},"91":{"start":{"line":544,"column":4},"end":{"line":552,"column":6}},"92":{"start":{"line":545,"column":8},"end":{"line":549,"column":10}},"93":{"start":{"line":550,"column":8},"end":{"line":550,"column":45}},"94":{"start":{"line":551,"column":8},"end":{"line":551,"column":40}},"95":{"start":{"line":553,"column":4},"end":{"line":568,"column":6}},"96":{"start":{"line":554,"column":8},"end":{"line":554,"column":19}},"97":{"start":{"line":555,"column":8},"end":{"line":555,"column":30}},"98":{"start":{"line":556,"column":8},"end":{"line":556,"column":34}},"99":{"start":{"line":557,"column":8},"end":{"line":563,"column":9}},"100":{"start":{"line":559,"column":12},"end":{"line":562,"column":13}},"101":{"start":{"line":561,"column":16},"end":{"line":561,"column":53}},"102":{"start":{"line":564,"column":8},"end":{"line":564,"column":26}},"103":{"start":{"line":565,"column":8},"end":{"line":565,"column":43}},"104":{"start":{"line":566,"column":8},"end":{"line":566,"column":30}},"105":{"start":{"line":567,"column":8},"end":{"line":567,"column":35}},"106":{"start":{"line":569,"column":4},"end":{"line":585,"column":5}},"107":{"start":{"line":571,"column":8},"end":{"line":574,"column":10}},"108":{"start":{"line":577,"column":8},"end":{"line":584,"column":11}},"109":{"start":{"line":578,"column":12},"end":{"line":583,"column":13}},"110":{"start":{"line":579,"column":16},"end":{"line":579,"column":29}},"111":{"start":{"line":582,"column":16},"end":{"line":582,"column":38}},"112":{"start":{"line":586,"column":4},"end":{"line":586,"column":21}},"113":{"start":{"line":601,"column":0},"end":{"line":678,"column":2}},"114":{"start":{"line":602,"column":4},"end":{"line":610,"column":10}},"115":{"start":{"line":612,"column":4},"end":{"line":676,"column":5}},"116":{"start":{"line":613,"column":8},"end":{"line":613,"column":74}},"117":{"start":{"line":616,"column":8},"end":{"line":675,"column":11}},"118":{"start":{"line":617,"column":12},"end":{"line":674,"column":13}},"119":{"start":{"line":618,"column":16},"end":{"line":618,"column":43}},"120":{"start":{"line":619,"column":16},"end":{"line":619,"column":34}},"121":{"start":{"line":620,"column":16},"end":{"line":620,"column":53}},"122":{"start":{"line":621,"column":16},"end":{"line":621,"column":54}},"123":{"start":{"line":624,"column":16},"end":{"line":629,"column":18}},"124":{"start":{"line":625,"column":20},"end":{"line":625,"column":39}},"125":{"start":{"line":626,"column":20},"end":{"line":626,"column":40}},"126":{"start":{"line":627,"column":20},"end":{"line":627,"column":57}},"127":{"start":{"line":628,"column":20},"end":{"line":628,"column":50}},"128":{"start":{"line":630,"column":16},"end":{"line":648,"column":18}},"129":{"start":{"line":631,"column":20},"end":{"line":631,"column":31}},"130":{"start":{"line":632,"column":20},"end":{"line":632,"column":42}},"131":{"start":{"line":633,"column":20},"end":{"line":633,"column":46}},"132":{"start":{"line":634,"column":20},"end":{"line":637,"column":21}},"133":{"start":{"line":636,"column":24},"end":{"line":636,"column":61}},"134":{"start":{"line":638,"column":20},"end":{"line":645,"column":21}},"135":{"start":{"line":639,"column":24},"end":{"line":639,"column":42}},"136":{"start":{"line":643,"column":24},"end":{"line":643,"column":130}},"137":{"start":{"line":646,"column":20},"end":{"line":646,"column":42}},"138":{"start":{"line":647,"column":20},"end":{"line":647,"column":47}},"139":{"start":{"line":650,"column":16},"end":{"line":673,"column":17}},"140":{"start":{"line":651,"column":20},"end":{"line":667,"column":21}},"141":{"start":{"line":653,"column":24},"end":{"line":656,"column":26}},"142":{"start":{"line":659,"column":24},"end":{"line":666,"column":27}},"143":{"start":{"line":660,"column":28},"end":{"line":665,"column":29}},"144":{"start":{"line":661,"column":32},"end":{"line":661,"column":45}},"145":{"start":{"line":664,"column":32},"end":{"line":664,"column":54}},"146":{"start":{"line":671,"column":20},"end":{"line":671,"column":56}},"147":{"start":{"line":672,"column":20},"end":{"line":672,"column":108}},"148":{"start":{"line":677,"column":4},"end":{"line":677,"column":21}},"149":{"start":{"line":691,"column":0},"end":{"line":693,"column":2}},"150":{"start":{"line":692,"column":4},"end":{"line":692,"column":51}},"151":{"start":{"line":765,"column":0},"end":{"line":860,"column":2}},"152":{"start":{"line":766,"column":4},"end":{"line":767,"column":50}},"153":{"start":{"line":770,"column":4},"end":{"line":770,"column":58}},"154":{"start":{"line":771,"column":4},"end":{"line":771,"column":60}},"155":{"start":{"line":773,"column":4},"end":{"line":773,"column":74}},"156":{"start":{"line":773,"column":60},"end":{"line":773,"column":70}},"157":{"start":{"line":775,"column":4},"end":{"line":854,"column":6}},"158":{"start":{"line":776,"column":8},"end":{"line":777,"column":24}},"159":{"start":{"line":779,"column":8},"end":{"line":853,"column":11}},"160":{"start":{"line":780,"column":12},"end":{"line":789,"column":14}},"161":{"start":{"line":790,"column":12},"end":{"line":790,"column":38}},"162":{"start":{"line":792,"column":12},"end":{"line":794,"column":26}},"163":{"start":{"line":796,"column":16},"end":{"line":796,"column":46}},"164":{"start":{"line":797,"column":16},"end":{"line":797,"column":52}},"165":{"start":{"line":799,"column":12},"end":{"line":799,"column":44}},"166":{"start":{"line":800,"column":12},"end":{"line":808,"column":13}},"167":{"start":{"line":801,"column":16},"end":{"line":807,"column":17}},"168":{"start":{"line":802,"column":20},"end":{"line":806,"column":21}},"169":{"start":{"line":803,"column":24},"end":{"line":803,"column":60}},"170":{"start":{"line":810,"column":12},"end":{"line":813,"column":13}},"171":{"start":{"line":811,"column":16},"end":{"line":811,"column":63}},"172":{"start":{"line":812,"column":16},"end":{"line":812,"column":69}},"173":{"start":{"line":816,"column":12},"end":{"line":845,"column":19}},"174":{"start":{"line":818,"column":20},"end":{"line":818,"column":33}},"175":{"start":{"line":824,"column":20},"end":{"line":824,"column":46}},"176":{"start":{"line":825,"column":20},"end":{"line":833,"column":21}},"177":{"start":{"line":826,"column":24},"end":{"line":832,"column":25}},"178":{"start":{"line":827,"column":28},"end":{"line":831,"column":29}},"179":{"start":{"line":828,"column":32},"end":{"line":828,"column":68}},"180":{"start":{"line":835,"column":20},"end":{"line":839,"column":21}},"181":{"start":{"line":836,"column":24},"end":{"line":838,"column":25}},"182":{"start":{"line":837,"column":28},"end":{"line":837,"column":35}},"183":{"start":{"line":844,"column":20},"end":{"line":844,"column":33}},"184":{"start":{"line":848,"column":12},"end":{"line":851,"column":14}},"185":{"start":{"line":852,"column":12},"end":{"line":852,"column":49}},"186":{"start":{"line":856,"column":4},"end":{"line":858,"column":6}},"187":{"start":{"line":857,"column":8},"end":{"line":857,"column":40}},"188":{"start":{"line":859,"column":4},"end":{"line":859,"column":22}},"189":{"start":{"line":870,"column":0},"end":{"line":880,"column":2}},"190":{"start":{"line":871,"column":4},"end":{"line":871,"column":24}},"191":{"start":{"line":874,"column":4},"end":{"line":878,"column":5}},"192":{"start":{"line":875,"column":8},"end":{"line":877,"column":11}},"193":{"start":{"line":879,"column":4},"end":{"line":879,"column":33}},"194":{"start":{"line":894,"column":0},"end":{"line":909,"column":2}},"195":{"start":{"line":895,"column":4},"end":{"line":895,"column":24}},"196":{"start":{"line":897,"column":4},"end":{"line":908,"column":6}},"197":{"start":{"line":899,"column":12},"end":{"line":899,"column":89}},"198":{"start":{"line":900,"column":12},"end":{"line":905,"column":13}},"199":{"start":{"line":901,"column":16},"end":{"line":904,"column":19}},"200":{"start":{"line":902,"column":20},"end":{"line":902,"column":126}},"201":{"start":{"line":903,"column":20},"end":{"line":903,"column":52}},"202":{"start":{"line":906,"column":12},"end":{"line":906,"column":31}}},"branchMap":{"1":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":4},"end":{"line":99,"column":4}},{"start":{"line":99,"column":4},"end":{"line":99,"column":4}}]},"2":{"line":111,"type":"binary-expr","locations":[{"start":{"line":111,"column":11},"end":{"line":111,"column":19}},{"start":{"line":111,"column":23},"end":{"line":111,"column":25}}]},"3":{"line":133,"type":"binary-expr","locations":[{"start":{"line":133,"column":13},"end":{"line":133,"column":53}},{"start":{"line":133,"column":59},"end":{"line":133,"column":109}}]},"4":{"line":134,"type":"binary-expr","locations":[{"start":{"line":134,"column":12},"end":{"line":134,"column":29}},{"start":{"line":134,"column":35},"end":{"line":134,"column":79}},{"start":{"line":134,"column":85},"end":{"line":134,"column":135}}]},"5":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":12},"end":{"line":136,"column":12}},{"start":{"line":136,"column":12},"end":{"line":136,"column":12}}]},"6":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":16},"end":{"line":138,"column":45}},{"start":{"line":138,"column":49},"end":{"line":138,"column":79}}]},"7":{"line":144,"type":"binary-expr","locations":[{"start":{"line":144,"column":37},"end":{"line":144,"column":51}},{"start":{"line":144,"column":55},"end":{"line":144,"column":70}}]},"8":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":38},"end":{"line":147,"column":50}},{"start":{"line":147,"column":54},"end":{"line":147,"column":66}}]},"9":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":24},"end":{"line":149,"column":24}},{"start":{"line":149,"column":24},"end":{"line":149,"column":24}}]},"10":{"line":149,"type":"binary-expr","locations":[{"start":{"line":149,"column":29},"end":{"line":149,"column":46}},{"start":{"line":149,"column":51},"end":{"line":149,"column":57}}]},"11":{"line":152,"type":"binary-expr","locations":[{"start":{"line":152,"column":47},"end":{"line":152,"column":60}},{"start":{"line":152,"column":65},"end":{"line":152,"column":77}},{"start":{"line":152,"column":81},"end":{"line":152,"column":102}},{"start":{"line":152,"column":107},"end":{"line":152,"column":155}}]},"12":{"line":340,"type":"binary-expr","locations":[{"start":{"line":340,"column":13},"end":{"line":340,"column":50}},{"start":{"line":340,"column":55},"end":{"line":340,"column":63}},{"start":{"line":340,"column":67},"end":{"line":347,"column":13}}]},"13":{"line":380,"type":"binary-expr","locations":[{"start":{"line":380,"column":4},"end":{"line":380,"column":33}},{"start":{"line":380,"column":37},"end":{"line":380,"column":75}}]},"14":{"line":381,"type":"binary-expr","locations":[{"start":{"line":381,"column":4},"end":{"line":381,"column":41}},{"start":{"line":381,"column":45},"end":{"line":381,"column":91}}]},"15":{"line":382,"type":"binary-expr","locations":[{"start":{"line":382,"column":4},"end":{"line":382,"column":41}},{"start":{"line":382,"column":45},"end":{"line":382,"column":91}}]},"16":{"line":401,"type":"binary-expr","locations":[{"start":{"line":401,"column":4},"end":{"line":401,"column":29}},{"start":{"line":401,"column":34},"end":{"line":401,"column":62}}]},"17":{"line":402,"type":"binary-expr","locations":[{"start":{"line":402,"column":4},"end":{"line":402,"column":31}},{"start":{"line":402,"column":36},"end":{"line":402,"column":75}}]},"18":{"line":435,"type":"binary-expr","locations":[{"start":{"line":435,"column":4},"end":{"line":435,"column":26}},{"start":{"line":435,"column":30},"end":{"line":440,"column":5}}]},"19":{"line":442,"type":"binary-expr","locations":[{"start":{"line":442,"column":4},"end":{"line":442,"column":28}},{"start":{"line":442,"column":33},"end":{"line":450,"column":80}}]},"20":{"line":473,"type":"binary-expr","locations":[{"start":{"line":473,"column":17},"end":{"line":473,"column":31}},{"start":{"line":473,"column":35},"end":{"line":473,"column":50}}]},"21":{"line":476,"type":"if","locations":[{"start":{"line":476,"column":4},"end":{"line":476,"column":4}},{"start":{"line":476,"column":4},"end":{"line":476,"column":4}}]},"22":{"line":488,"type":"if","locations":[{"start":{"line":488,"column":8},"end":{"line":488,"column":8}},{"start":{"line":488,"column":8},"end":{"line":488,"column":8}}]},"23":{"line":502,"type":"if","locations":[{"start":{"line":502,"column":12},"end":{"line":502,"column":12}},{"start":{"line":502,"column":12},"end":{"line":502,"column":12}}]},"24":{"line":511,"type":"if","locations":[{"start":{"line":511,"column":20},"end":{"line":511,"column":20}},{"start":{"line":511,"column":20},"end":{"line":511,"column":20}}]},"25":{"line":557,"type":"if","locations":[{"start":{"line":557,"column":8},"end":{"line":557,"column":8}},{"start":{"line":557,"column":8},"end":{"line":557,"column":8}}]},"26":{"line":559,"type":"if","locations":[{"start":{"line":559,"column":12},"end":{"line":559,"column":12}},{"start":{"line":559,"column":12},"end":{"line":559,"column":12}}]},"27":{"line":569,"type":"if","locations":[{"start":{"line":569,"column":4},"end":{"line":569,"column":4}},{"start":{"line":569,"column":4},"end":{"line":569,"column":4}}]},"28":{"line":578,"type":"if","locations":[{"start":{"line":578,"column":12},"end":{"line":578,"column":12}},{"start":{"line":578,"column":12},"end":{"line":578,"column":12}}]},"29":{"line":603,"type":"cond-expr","locations":[{"start":{"line":603,"column":40},"end":{"line":603,"column":48}},{"start":{"line":603,"column":51},"end":{"line":603,"column":59}}]},"30":{"line":612,"type":"if","locations":[{"start":{"line":612,"column":4},"end":{"line":612,"column":4}},{"start":{"line":612,"column":4},"end":{"line":612,"column":4}}]},"31":{"line":617,"type":"if","locations":[{"start":{"line":617,"column":12},"end":{"line":617,"column":12}},{"start":{"line":617,"column":12},"end":{"line":617,"column":12}}]},"32":{"line":634,"type":"if","locations":[{"start":{"line":634,"column":20},"end":{"line":634,"column":20}},{"start":{"line":634,"column":20},"end":{"line":634,"column":20}}]},"33":{"line":638,"type":"if","locations":[{"start":{"line":638,"column":20},"end":{"line":638,"column":20}},{"start":{"line":638,"column":20},"end":{"line":638,"column":20}}]},"34":{"line":643,"type":"cond-expr","locations":[{"start":{"line":643,"column":43},"end":{"line":643,"column":61}},{"start":{"line":643,"column":64},"end":{"line":643,"column":129}}]},"35":{"line":643,"type":"binary-expr","locations":[{"start":{"line":643,"column":91},"end":{"line":643,"column":116}},{"start":{"line":643,"column":121},"end":{"line":643,"column":128}}]},"36":{"line":650,"type":"if","locations":[{"start":{"line":650,"column":16},"end":{"line":650,"column":16}},{"start":{"line":650,"column":16},"end":{"line":650,"column":16}}]},"37":{"line":650,"type":"binary-expr","locations":[{"start":{"line":650,"column":20},"end":{"line":650,"column":38}},{"start":{"line":650,"column":44},"end":{"line":650,"column":84}},{"start":{"line":650,"column":89},"end":{"line":650,"column":111}}]},"38":{"line":651,"type":"if","locations":[{"start":{"line":651,"column":20},"end":{"line":651,"column":20}},{"start":{"line":651,"column":20},"end":{"line":651,"column":20}}]},"39":{"line":660,"type":"if","locations":[{"start":{"line":660,"column":28},"end":{"line":660,"column":28}},{"start":{"line":660,"column":28},"end":{"line":660,"column":28}}]},"40":{"line":770,"type":"binary-expr","locations":[{"start":{"line":770,"column":4},"end":{"line":770,"column":8}},{"start":{"line":770,"column":13},"end":{"line":770,"column":31}},{"start":{"line":770,"column":36},"end":{"line":770,"column":57}}]},"41":{"line":771,"type":"binary-expr","locations":[{"start":{"line":771,"column":4},"end":{"line":771,"column":8}},{"start":{"line":771,"column":13},"end":{"line":771,"column":31}},{"start":{"line":771,"column":36},"end":{"line":771,"column":59}}]},"42":{"line":799,"type":"binary-expr","locations":[{"start":{"line":799,"column":23},"end":{"line":799,"column":31}},{"start":{"line":799,"column":35},"end":{"line":799,"column":43}}]},"43":{"line":800,"type":"if","locations":[{"start":{"line":800,"column":12},"end":{"line":800,"column":12}},{"start":{"line":800,"column":12},"end":{"line":800,"column":12}}]},"44":{"line":810,"type":"if","locations":[{"start":{"line":810,"column":12},"end":{"line":810,"column":12}},{"start":{"line":810,"column":12},"end":{"line":810,"column":12}}]},"45":{"line":810,"type":"binary-expr","locations":[{"start":{"line":810,"column":16},"end":{"line":810,"column":34}},{"start":{"line":810,"column":38},"end":{"line":810,"column":57}}]},"46":{"line":816,"type":"cond-expr","locations":[{"start":{"line":817,"column":16},"end":{"line":819,"column":18}},{"start":{"line":820,"column":16},"end":{"line":845,"column":18}}]},"47":{"line":825,"type":"if","locations":[{"start":{"line":825,"column":20},"end":{"line":825,"column":20}},{"start":{"line":825,"column":20},"end":{"line":825,"column":20}}]},"48":{"line":835,"type":"if","locations":[{"start":{"line":835,"column":20},"end":{"line":835,"column":20}},{"start":{"line":835,"column":20},"end":{"line":835,"column":20}}]},"49":{"line":849,"type":"binary-expr","locations":[{"start":{"line":849,"column":27},"end":{"line":849,"column":33}},{"start":{"line":849,"column":38},"end":{"line":849,"column":52}},{"start":{"line":849,"column":56},"end":{"line":849,"column":62}}]},"50":{"line":874,"type":"if","locations":[{"start":{"line":874,"column":4},"end":{"line":874,"column":4}},{"start":{"line":874,"column":4},"end":{"line":874,"column":4}}]},"51":{"line":900,"type":"if","locations":[{"start":{"line":900,"column":12},"end":{"line":900,"column":12}},{"start":{"line":900,"column":12},"end":{"line":900,"column":12}}]}},"code":["(function () { YUI.add('gallery-itsamodelsyncpromise', function (Y, NAME) {","","'use strict';","","/*jshint maxlen:205 */","","/**"," *"," * This module extends Y.Model by introducing Promised sync-methods. It also transforms Y.Model's sync-events into true events with a defaultFunc which can be prevented."," * This means the 'on'-events will be fired before syncing and the 'after'-events after syncing."," *"," * @module gallery-itsamodelsyncpromise"," * @class Y.Model"," * @constructor"," * @since 0.1"," *"," * <i>Copyright (c) 2013 Marco Asbreuk - http://itsasbreuk.nl</i>"," * YUI BSD License - http://developer.yahoo.com/yui/license.html"," *","*/","","var YModel = Y.Model,","    Lang = Y.Lang,","    YObject = Y.Object,","    YArray = Y.Array,","    DESTROY = 'destroy',","    LOAD = 'load',","    SAVE = 'save',","    SUBMIT = 'submit',","    ERROR = 'error',","    DELETE = 'delete',","    READ = 'read',","    DESTROYED = DESTROY+'ed',","    PUBLISHED = '_pub_',","    ROMISE = 'romise',","    PROMISE = 'P'+ROMISE,","    AVAILABLESYNCMESSAGES = {","        load: true,","        save: true,","        submit: true,","        destroy: true","    },","    MODELSYNC = 'modelsync',","    GALLERY_ITSA = 'gallery-itsa',","    GALLERYITSAMODELSYNCPROMISE = GALLERY_ITSA+MODELSYNC+'p'+ROMISE,","/**"," * Fired when an error occurs, such as when an attribute (or property) doesn't validate or when"," * the sync layer submit-function returns an error."," * @event error"," * @param e {EventFacade} Event Facade including:"," * @param e.error {any} Error message."," * @param e.src {String} Source of the error. May be one of the following (or any"," *                     custom error source defined by a Model subclass):"," *"," * `submit`: An error submitting the model from within a sync layer."," *"," * `attributevalidation`: An error validating an attribute (or property). The attribute (or objectproperty)"," *                        that failed validation will be provided as the `attribute` property on the event facade."," *"," * @param e.attribute {String} The attribute/property that failed validation."," * @param e.validationerror {String} The errormessage in case of attribute-validation error.","**/","","/**"," * Fired when model is destroyed. In case {remove: true} is used, the after-event occurs after the synlayer is finished."," * @event destroy"," * @param e {EventFacade} Event Facade including:"," * @param e.promise {Promise} The promise that is automaticly created during the event. You could examine this instead of listening to both the `after`- and `error`-event."," * @param [e.options] {Object} The options=object that was passed to the sync-layer, if there was one.","statusmessage"," * @since 0.1","**/","","/**"," * Fired when model needs to be read from the sync layer. The after-event occurs after the synlayer is finished."," * @event load"," * @param e {EventFacade} Event Facade including:"," * @param e.promise {Promise} The promise that is automaticly created during the event. You could examine this instead of listening to both the `after`- and `error`-event."," * @param [e.options] {Object} The options=object that was passed to the sync-layer, if there was one."," * @param [e.response] {any} The sync layer's raw, unparsed response to the submit-request, if there was one."," *                            This value is only available in the after-event."," * @since 0.1","**/","","/**"," * Fired when model needs to be saved through the sync layer. The after-event occurs after the synlayer is finished."," * @event save"," * @param e {EventFacade} Event Facade including:"," * @param e.promise {Promise} The promise that is automaticly created during the event. You could examine this instead of listening to both the `after`- and `error`-event."," * @param [e.options] {Object} The options=object that was passed to the sync-layer, if there was one."," * @param [e.parsed] {Object} The parsed version of the sync layer's response to the save-request, if there was a response."," *                            This value is only available in the after-event."," * @param [e.response] {any} The sync layer's raw, unparsed response to the save-request, if there was one."," *                            This value is only available in the after-event."," * @since 0.1","**/","","PARSED = function (response) {","    if (typeof response === 'string') {","        try {","            return Y.JSON.fullparse(response);","        } catch (ex) {","            this.fire(ERROR, {","                error   : ex,","                response: response,","                src     : 'parse'","            });","            return {};","        }","    }","    return response || {};","};","","// -- Mixing extra Methods to Y.Model -----------------------------------","","/**"," * Makes sync-messages to target the specified messageViewer. You can only target to 1 MessageViewer at the same time.<br>"," * See gallery-itsamessageviewer for more info."," *"," * @method addMessageTarget"," * @param itsamessageviewer {Y.ITSAMessageViewer|Y.ITSAPanel}"," * @since 0.1","*/","YModel.prototype.addMessageTarget = function(itsamessageviewer) {","    var instance = this;","    Y.usePromise(GALLERY_ITSA+'messagecontroller', GALLERY_ITSA+'messageviewer', GALLERY_ITSA+'panel', GALLERY_ITSA+'viewmodel').then(","        function() {","            return Y.ITSAMessageController.isReady();","        }","    ).then(","        function() {","/*jshint expr:true */","            (itsamessageviewer instanceof Y.ITSAPanel) && (itsamessageviewer=itsamessageviewer._itsastatusbar);","            itsamessageviewer || ((itsamessageviewer instanceof Y.ITSAViewModel) && (itsamessageviewer=itsamessageviewer._itsastatusbar));","/*jshint expr:false */","            if (itsamessageviewer instanceof Y.ITSAMessageViewer) {","/*jshint expr:true */","                instance._itsamessageListener && instance.removeMessageTarget();","/*jshint expr:false */","                instance._itsamessageListener = instance.on(","                    [LOAD, SUBMIT, SAVE, DESTROY],","                    function(e) {","                        var options = e.options,","                            remove = options.remove || options[DELETE],","                            type = e.type,","                            typesplit = type.split(':'),","                            subtype = typesplit[1] || typesplit[0],","                            statushandle, syncMessages;","                        if ((subtype!==DESTROY) || remove) {","                            syncMessages = instance._defSyncMessages;","                            statushandle = itsamessageviewer.showStatus(","                                               e.syncmessage || (syncMessages && syncMessages[subtype]) || Y.Intl.get(GALLERYITSAMODELSYNCPROMISE)[subtype],","                                               {source: MODELSYNC, busy: true}","                                           );","                            e.promise.then(","                                function() {","                                    itsamessageviewer.removeStatus(statushandle);","                                },","                                function() {","                                    itsamessageviewer.removeStatus(statushandle);","                                }","                            );","                        }","                    }","                );","                instance._itsamessagedestroylistener1 = instance.onceAfter(DESTROY, function() {","                    instance._itsamessageListener.detach();","                });","                instance._itsamessagedestroylistener2 = itsamessageviewer.once(DESTROY, function() {","                    instance._itsamessageListener.detach();","                });","            }","            else {","            }","        }","    );","};","","/**"," * Promise that returns the default-options (object) that will be passed through the synclayer."," * Is used as the syncoptions, along with manual syncoptions that could be supplied. Both objects are merged (actually cloned)."," *"," * @method defSyncOptions"," * @return {Y.Promise} --> resolve(defaultOptionsObject) NEVER reject","**/","YModel.prototype.defSyncOptions = function() {","    return new Y.Promise(function (resolve) {","        resolve({});","    });","};","","/**","  * Destroys this model instance and removes it from its containing lists, if any. The 'callback', if one is provided,","  * will be called after the model is destroyed.<br /><br />","  * If `options.remove` is `true`, then this method delegates to the `sync()` method to delete the model from the persistence layer, which is an","  * asynchronous action. In this case, the 'callback' (if provided) will be called after the sync layer indicates success or failure of the delete operation.","  * <br /><br />","  * To keep track of the proccess, it is preferable to use <b>destroyPromise()</b>.<br />","  * This method will fire an `error` event when syncing (using options.remove=true) should fail.","  * <br /><br />","  * <b>CAUTION</b> The sync-method with action 'destroy' <b>must call its callback-function</b> in order to work as espected!","  *","  * @method destroy","  * @param {Object} [options] Sync options. It's up to the custom sync implementation to determine what options it supports or requires, if any.","  *   @param {Boolean} [options.remove=false] If `true`, the model will be deleted via the sync layer in addition to the instance being destroyed.","  *   @param {String} [options.syncmessage] Message that should appear on a Y.ITSAMessageViewer during asynchronious destruction. Will overrule the default message. See gallery-itsamessageviewer.","  * @param {callback} [callback] Called after the model has been destroyed (and deleted via the sync layer if `options.remove` is `true`).","  *   @param {Error|null} callback.err If an error occurred, this parameter will contain the error. Otherwise 'err' will be null.","  *   @param {Any} callback.response The server's response. This value will be passed to the `parse()` method, which is expected to parse it and return an attribute hash.","  * @chainable","*/","","/**"," * Destroys this model instance and removes it from its containing lists, if any."," * <br /><br />"," * If `options.remove` is `true`, then this method delegates to the `sync()`"," * method to delete the model from the persistence layer, which is an"," * asynchronous action."," * <br /><br />","  * This method will fire an `error` event when syncing (using options.remove=true) should fail."," * <br /><br />"," * <b>CAUTION</b> The sync-method with action 'destroy' <b>must call its callback-function</b> in order to work as espected!"," *"," * @method destroyPromise"," * @param {Object} [options] Options to be passed to `sync()`. It's up to the custom sync"," *                 implementation to determine what options it supports or requires, if any."," *   @param {Boolean} [options.remove=false] If `true`, the model will be deleted via the sync layer in addition to the instance being destroyed."," *   @param {String} [options.syncmessage] Message that should appear on a Y.ITSAMessageViewer during asynchronious destruction. Will overrule the default message. See gallery-itsamessageviewer."," * @return {Y.Promise} promised response --> resolve(response) OR reject(reason). (examine reason.message).","**/","","/**","  * Loads this model from the server.<br />","  * This method delegates to the `sync()` method to perform the actual load","  * operation, which is an asynchronous action. Specify a 'callback' function to","  * be notified of success or failure.","  * <br /><br />","  * An unsuccessful load operation will fire an `error` event with the `src` value \"load\".","  * <br /><br />","  * If the load operation succeeds and one or more of the loaded attributes","  * differ from this model's current attributes, a `change` event will be fired.","  * <br /><br />","  * To keep track of the proccess, it is preferable to use <b>loadPromise()</b>.<br />","  * This method will fire 2 events: 'loadstart' before syncing and 'load' or ERROR after syncing.","  * <br /><br />","  * <b>CAUTION</b> The sync-method with action 'read' <b>must call its callback-function</b> in order to work as espected!","  *","  * @method load","  * @param {Object} [options] Options to be passed to `sync()` and to `set()` when setting the loaded attributes.","  *                           It's up to the custom sync implementation to determine what options it supports or requires, if any."," *   @param {String} [options.syncmessage] Message that should appear on a Y.ITSAMessageViewer during asynchronious loading. Will overrule the default message. See gallery-itsamessageviewer.","  * @param {callback} [callback] Called when the sync operation finishes.","  *   @param {Error|null} callback.err If an error occurred, this parameter will contain the error. If the sync operation succeeded, 'err' will be null.","  *   @param {Any} callback.response The server's response. This value will be passed to the `parse()` method, which is expected to parse it and return an attribute hash.","  * @chainable"," */","","/**"," * Loads this model from the server."," * <br /><br />"," * This method delegates to the `sync()` method to perform the actual load"," * operation, which is an asynchronous action."," * <br /><br />"," * An unsuccessful load operation will fire an `error` event with the `src` value \"load\"."," * <br /><br />"," * If the load operation succeeds and one or more of the loaded attributes"," * differ from this model's current attributes, a `change` event will be fired."," * <br /><br />"," * <b>CAUTION</b> The sync-method with action 'read' <b>must call its callback-function</b> in order to work as espected!"," *"," * @method loadPromise"," * @param {Object} [options] Options to be passed to `sync()`. It's up to the custom sync"," *                 implementation to determine what options it supports or requires, if any."," *   @param {String} [options.syncmessage] Message that should appear on a Y.ITSAMessageViewer during asynchronious loading. Will overrule the default message. See gallery-itsamessageviewer."," * @return {Y.Promise} promised response --> resolve(response) where response is an object with all model-attributes as properties OR reject(reason) (examine reason.message).","**/","","/**"," * Saves this model to the server."," *"," * This method delegates to the `sync()` method to perform the actual save operation, which is an asynchronous action."," * Specify a 'callback' function to be notified of success or failure, or better: use savePromise()."," * <br /><br />"," * An unsuccessful save operation will fire an `error` event with the `src` value \"save\"."," * <br /><br />"," * If the save operation succeeds and one or more of the attributes returned in the server's response differ from this model's current attributes,"," * a `change` event will be fired."," * <br /><br />"," * If the operation succeeds, but you let the server return an <b>id=-1</b> then the model is assumed to be destroyed. This will lead to fireing the `destroy` event."," * <br /><br />"," * To keep track of the process, it is preferable to use <b>savePromise()</b>.<br />"," * This method will fire 2 events: 'savestart' before syncing and 'save' or ERROR after syncing."," * <br /><br />"," * <b>CAUTION</b> The sync-method with action 'save' <b>must call its callback-function</b> in order to work as espected!"," *"," * @method save"," * @param {Object} [options] Options to be passed to `sync()` and to `set()` when setting synced attributes."," *                           It's up to the custom sync implementation to determine what options it supports or requires, if any."," *   @param {String} [options.syncmessage] Message that should appear on a Y.ITSAMessageViewer during asynchronious saving. Will overrule the default message. See gallery-itsamessageviewer."," * @param {Function} [callback] Called when the sync operation finishes."," *   @param {Error|null} callback.err If an error occurred or validation failed, this parameter will contain the error."," *                                    If the sync operation succeeded, 'err' will be null."," *   @param {Any} callback.response The server's response. This value will be passed to the `parse()` method,"," *                                  which is expected to parse it and return an attribute hash."," * @chainable","*/","","/**"," * Saves this model to the server."," * <br /><br />"," * This method delegates to the `sync()` method to perform the actual save"," * operation, which is an asynchronous action."," * <br /><br />"," * An unsuccessful save operation will fire an `error` event with the `src` value \"save\"."," * <br /><br />"," * If the save operation succeeds and one or more of the attributes returned in"," * the server's response differ from this model's current attributes, a"," * `change` event will be fired."," * <br /><br />"," * If the operation succeeds, but you let the server return an <b>id=-1</b> then the model is assumed to be destroyed. This will lead to fireing the `destroy` event."," * <br /><br />"," * <b>CAUTION</b> The sync-method with action 'save' <b>must call its callback-function</b> in order to work as espected!"," *"," * @method savePromise"," * @param {Object} [options] Options to be passed to `sync()`. It's up to the custom sync"," *                 implementation to determine what options it supports or requires, if any."," *   @param {String} [options.syncmessage] Message that should appear on a Y.ITSAMessageViewer during asynchronious saving. Will overrule the default message. See gallery-itsamessageviewer."," * @return {Y.Promise} promised response --> resolve(response) OR reject(reason). (examine reason.message).","**/","","YArray.each(","    [LOAD, DESTROY, SAVE],","    function(Fn) {","        YModel.prototype[Fn] = function(options, callback) {","            var instance = this,","                promise;","","            // by overwriting the default 'save'-method we manage to fire 'destroystart'-event.","        /*jshint expr:true */","            (promise=instance[Fn+PROMISE](options)) && callback && promise.then(","                function(response) {","                    callback(null, response);","                },","                function(err) {","                    callback(err);","                }","            );","        /*jshint expr:false */","            return instance;","        };","        YModel.prototype[Fn+PROMISE] = function (options) {","            return this._createPromise(Fn, options);","        };","    }",");","","//===============================================================================================","/**"," * This method can be defined in descendend classes.<br />"," * If syncPromise is defined, then the syncPromise() definition will be used instead of sync() definition.<br />"," * In case an invalid 'action' is defined, the promise will be rejected."," *"," * @method syncPromise"," * @param action {String} The sync-action to perform."," * @param [options] {Object} Sync options. The custom synclayer should pass through all options-properties to the server."," * @return {Y.Promise} returned response for each 'action' --> response --> resolve(dataobject) OR reject(reason)."," * The returned 'dataobject' might be an object or a string that can be turned into a json-object","*/","//===============================================================================================","","/**"," * Removes the messageViewer-target that was set up by addMessageTarget()."," *"," * @method removeMessageTarget"," * @since 0.1","*/","YModel.prototype.removeMessageTarget = function() {","    var instance = this;","/*jshint expr:true */","    instance._itsamessageListener && instance._itsamessageListener.detach();","    instance._itsamessagedestroylistener1 && instance._itsamessagedestroylistener1.detach();","    instance._itsamessagedestroylistener2 && instance._itsamessagedestroylistener2.detach();","/*jshint expr:false */","    instance._itsamessageListener = null;","};","","/**"," * Defines the syncmessage to be used when calling the synclayer. When not defined (and not declared during calling the syncmethod by 'options.syncmessage'),"," * a default i18n-message will be used."," * See gallery-itsamessageviewer for more info about syncmessages."," *"," * @method setSyncMessage"," * @param type {String} the syncaction = 'load'|'save'|destroy'|'submit'"," * @param message {String} the syncmessage that should be viewed by a Y.ITSAMessageViewer"," * @chainable"," * @since 0.4","*/","YModel.prototype.setSyncMessage = function(type, message) {","    var instance = this;","/*jshint expr:true */","    instance._defSyncMessages || (instance._defSyncMessages={});","    AVAILABLESYNCMESSAGES[type] && (instance._defSyncMessages[type]=message);","/*jshint expr:false */","    return instance;","};","","/**"," * Private function that creates the promises for all promise-events"," *"," * @method _createPromise"," * @param type {String} Method to create a promise for"," * @param options {Object} options to be send with the event"," * @private"," * @since 0.3","*/","YModel.prototype._createPromise = function(type, options) {","    var instance = this,","        promise, promiseResolve, promiseReject, extraOptions;","","    promise = new Y.Promise(function (resolve, reject) {","        promiseResolve = resolve;","        promiseReject = reject;","    });","    // we pass the promise, together with the resolve and reject handlers as an option to the event.","    // this way we can fullfill the promise in the defaultFn or prevDefaultFn.","    extraOptions = {","        promise: promise,","        promiseResolve: promiseResolve,","        promiseReject: promiseReject,","        response: '', // making available at the after listener","        parsed: {}, // making available at the after listener","        options: Y.merge(options) // making passing only options to other events possible","    };","/*jshint expr:true */","    Lang.isObject(options) && YObject.each(","        options,","        function(value, key) {","            extraOptions[key] = value;","        }","    );","    // lazy publish the event","    instance[PUBLISHED+type] || (instance[PUBLISHED+type]=instance._publishAsync(type,","                                                                                {","                                                                                  defaultTargetOnly: true,","                                                                                  emitFacade: true,","                                                                                  broadcast: 1,","                                                                                  defaultFn: instance['_defFn_'+type],","                                                                                  preventedFn: instance._prevDefFn","                                                                                }","                                                                               ));","/*jshint expr:false */","    instance.fire(type, extraOptions);","    return promise;","};","","/**"," * DefaultFn for the 'destroy'-event"," *"," * @method _defFn_destroy"," * @param e {EventTarget}"," * @param e.promise {Y.Promise} promise passed by with the eventobject"," * @param e.promiseReject {Function} handle to the reject-method"," * @param e.promiseResolve {Function} handle to the resolve-method"," * @private"," * @return {Y.Promise} do not handle yourself: is handled by internal eventsystem."," * @since 0.3","*/","YModel.prototype._defFn_destroy = function(e) {","    var instance = this,","        promiseResolve = e.promiseResolve,","        promiseReject = e.promiseReject,","        options = e.options,","        remove = options.remove || options[DELETE],","        errFunc, successFunc, finish;","","    if (instance.get(DESTROYED)) {","        promiseReject(new Error('Model is already destroyed'));","    }","    else {","        finish = function() {","            // first the destruction through Base needs to be done","            instance._baseDestroy();","            YArray.each(instance.lists.concat(), function (list) {","                list.remove(instance, options);","            });","        };","        // next the typical Model-destroy-code:","        if (remove) {","            errFunc = function(err) {","                var facade = {","                    error   : err,","                    src     : DESTROY,","                    options : options","                };","                instance._lazyFireErrorEvent(facade);","                promiseReject(new Error(err));","            };","            successFunc = function(response) {","                finish();","                promiseResolve(response);","            };","            if (instance.syncPromise) {","                // use the syncPromise-layer","                instance._syncTimeoutPromise(DELETE, options).then(","                    successFunc,","                    errFunc","                );","            }","            else {","                instance.sync(DELETE, options, function (err, response) {","                    if (err) {","                        errFunc(err);","                    }","                    else {","                        successFunc(response);","                    }","                });","            }","        } else {","            finish();","            promiseResolve();","        }","    }","    return e.promise;","};","","/**"," * DefaultFn for the 'load'-event"," *"," * @method _defFn_load"," * @param e {EventTarget}"," * @param e.promise {Y.Promise} promise passed by with the eventobject"," * @param e.promiseReject {Function} handle to the reject-method"," * @param e.promiseResolve {Function} handle to the resolve-method"," * @private"," * @return {Y.Promise} do not handle yourself: is handled by internal eventsystem."," * @since 0.3","*/","YModel.prototype._defFn_load = function(e) {","    var instance = this,","        options = e.options,","        errFunc, successFunc;","","    errFunc = function(err) {","        var facade = {","            options: options,","            error: err,","            src: LOAD","        };","        instance._lazyFireErrorEvent(facade);","        e.promiseReject(new Error(err));","    };","    successFunc = function(response) {","        var parsed;","        e.response = response;","        parsed = PARSED(response);","        if (parsed.responseText) {","            // XMLHttpRequest","            if (parsed.responseText) {","                // XMLHttpRequest","                parsed = PARSED(parsed.responseText);","            }","        }","        e.parsed = parsed;","        instance.setAttrs(parsed, options);","        instance.changed = {};","        e.promiseResolve(response);","    };","    if (instance.syncPromise) {","        // use the syncPromise-layer","        instance._syncTimeoutPromise(READ, options).then(","            successFunc,","            errFunc","        );","    }","    else {","        instance.sync(READ, options, function (err, response) {","            if (err) {","                errFunc(err);","            }","            else {","                successFunc(response);","            }","        });","    }","    return e.promise;","};","","/**"," * DefaultFn for the 'save'-event"," *"," * @method _defFn_save"," * @param e {EventTarget}"," * @param e.promise {Y.Promise} promise passed by with the eventobject"," * @param e.promiseReject {Function} handle to the reject-method"," * @param e.promiseResolve {Function} handle to the resolve-method"," * @private"," * @return {Y.Promise} do not handle yourself: is handled by internal eventsystem."," * @since 0.3","*/","YModel.prototype._defFn_save = function(e) {","    var instance = this,","        usedmethod = instance.isNew() ? 'create' : 'update',","        options = e.options,","        promiseReject = e.promiseReject,","        errFunc, successFunc, unvalidNodes,","        facade = {","            options : options,","            method: usedmethod","        };","","    if (!instance.isModified()) {","        promiseReject(new Error('Model will not be saved: not modified'));","    }","    else {","        instance._validate(instance.toJSON(), function (validateErr) {","            if (validateErr) {","                facade.error = validateErr;","                facade.src = SAVE;","                instance._lazyFireErrorEvent(facade);","                promiseReject(new Error(validateErr));","            }","            else {","                errFunc = function(err) {","                    facade.error = err;","                    facade.src   = SAVE;","                    instance._lazyFireErrorEvent(facade);","                    promiseReject(new Error(err));","                };","                successFunc = function(response) {","                    var parsed;","                    e.response = response;","                    parsed = PARSED(response);","                    if (parsed.responseText) {","                        // XMLHttpRequest","                        parsed = PARSED(parsed.responseText);","                    }","                    if (YObject.keys(parsed).length>0) {","                        e.parsed = parsed;","                        // if removed then fire destroy-event (not through synclayer), else update data","/*jshint expr:true */","                        // fromInternal is used to suppress Y.ITSAFormModel to notificate changes","                        (parsed.id===-1) ? instance.destroy() : instance.setAttrs(parsed, (options.fromInternal=true) && options);","/*jshint expr:false */","                    }","                    instance.changed = {};","                    e.promiseResolve(response);","                };","                // in case of Y.ITSAFormModel, we first check whether all fields are validated","                if (!instance.toJSONUI || ((unvalidNodes=instance.getUnvalidatedUI()) && unvalidNodes.isEmpty())) {","                    if (instance.syncPromise) {","                        // use the syncPromise-layer","                        instance._syncTimeoutPromise(usedmethod, options).then(","                            successFunc,","                            errFunc","                        );","                    }","                    else {","                        instance.sync(usedmethod, options, function (err, response) {","                            if (err) {","                                errFunc(err);","                            }","                            else {","                                successFunc(response);","                            }","                        });","                    }","                }","                else {","                    // because we have an Y.ITSAFormModel instance, ._intl.unvalidated is available","                    errFunc(instance._intl.unvalidated);","                    instance.fire('validationerror', {target: instance, nodelist: unvalidNodes, src: SAVE});","                }","            }","        });","    }","    return e.promise;","};","","/**"," * Prevented defaultFn as a Promise. Makes internal e.promise to be rejected."," *"," * @method _prevDefFn"," * @param e {EventTarget}"," * @param e.promise {Y.Promise} promise passed by with the eventobject"," * @param e.promiseReject {Function} handle to the reject-method"," * @param e.promiseResolve {Function} handle to the resolve-method"," * @private"," * @since 0.3","*/","YModel.prototype._prevDefFn = function(e) {","    e.promiseReject(new Error('preventDefaulted'));","};",""," /**","   * Hack with the help of Luke Smith: https://gist.github.com/lsmith/6664382/d688740bb91f9ecfc3c89456a82f30d35c5095cb","   * Variant of publish(), but works with asynchronious defaultFn and preventedFn.","   *","   * Creates a new custom event of the specified type.  If a custom event","   * by that name already exists, it will not be re-created.  In either","   * case the custom event is returned.","   *","   * @method _publishAsync","   *","   * @param type {String} the type, or name of the event","   * @param opts {object} optional config params.  Valid properties are:","   *","   *  <ul>","   *    <li>","   *   'broadcast': whether or not the YUI instance and YUI global are notified when the event is fired (false)","   *    </li>","   *    <li>","   *   'bubbles': whether or not this event bubbles (true)","   *              Events can only bubble if emitFacade is true.","   *    </li>","   *    <li>","   *   'context': the default execution context for the listeners (this)","   *    </li>","   *    <li>","   *   'defaultFn': the default function to execute when this event fires if preventDefault was not called","   *    </li>","   *    <li>","   *   'emitFacade': whether or not this event emits a facade (false)","   *    </li>","   *    <li>","   *   'prefix': the prefix for this targets events, e.g., 'menu' in 'menu:click'","   *    </li>","   *    <li>","   *   'fireOnce': if an event is configured to fire once, new subscribers after","   *   the fire will be notified immediately.","   *    </li>","   *    <li>","   *   'async': fireOnce event listeners will fire synchronously if the event has already","   *    fired unless async is true.","   *    </li>","   *    <li>","   *   'preventable': whether or not preventDefault() has an effect (true)","   *    </li>","   *    <li>","   *   'preventedFn': a function that is executed when preventDefault is called","   *    </li>","   *    <li>","   *   'queuable': whether or not this event can be queued during bubbling (false)","   *    </li>","   *    <li>","   *   'silent': if silent is true, debug messages are not provided for this event.","   *    </li>","   *    <li>","   *   'stoppedFn': a function that is executed when stopPropagation is called","   *    </li>","   *","   *    <li>","   *   'monitored': specifies whether or not this event should send notifications about","   *   when the event has been attached, detached, or published.","   *    </li>","   *    <li>","   *   'type': the event type (valid option if not provided as the first parameter to publish)","   *    </li>","   *  </ul>","   *","   *  @return {CustomEvent} the custom event","   *  @private","   *","  **/","YModel.prototype._publishAsync = function(type, opts) {","    var instance = this,","        asyncEvent = instance.publish(type, opts);","","/*jshint expr:true */","    opts && (opts.broadcast===1) && instance.addTarget(Y);","    opts && (opts.broadcast===2) && instance.addTarget(YUI);","/*jshint expr:false */","    asyncEvent._firing = new Y.Promise(function (resolve) { resolve(); });","","    asyncEvent.fire = function (data) {","        var args  = Y.Array(arguments, 0, true),","            stack, next;","","        asyncEvent._firing = asyncEvent._firing.then(function () {","            stack = {","                id: asyncEvent.id,","                next: asyncEvent,","                silent: asyncEvent.silent,","                stopped: 0,","                prevented: 0,","                bubbling: null,","                type: asyncEvent.type,","                defaultTargetOnly: asyncEvent.defaultTargetOnly","            };","            asyncEvent.details = args;","            // Execute on() subscribers","            var subs = asyncEvent._subscribers,","                args2 = [],","                e, i, len;","","                args2.push.apply(args2, data);","                e = asyncEvent._createFacade(args2);","","            e.target = e.target || instance;","            if (subs) {","                for (i = 0, len = subs.length; i < len; ++i) {","                    try {","                        subs[i].fn.call(subs[i].context, e);","                    }","                    catch (catchErr) {","                    }","                }","            }","            // Execute on() subscribers for each bubble target and their respective targets:","            if (asyncEvent.bubbles && !asyncEvent.stopped) {","                instance.bubble(asyncEvent, args, null, stack);","                e.prevented = Math.max(e.prevented, stack.prevented);","            }","            // Resolve the _firing promise with either prefentedFn promise if it was prevented, or with a promise for","            // the result of the defaultFn followed by the execution of the after subs.","            return e.prevented ?","                asyncEvent.preventedFn.call(instance, e).then(null, function (reason) {","                    return false;","                }) :","                asyncEvent.defaultFn.call(instance, e).then(function () {","                    // no need to handle 'response' it is merged into 'e' within the defaultfunction","                    // Execute after() subscribers","","                    subs = asyncEvent._afters;","                    if (subs) {","                        for (i = 0, len = subs.length; i < len; ++i) {","                            try {","                                subs[i].fn.call(subs[i].context, e);","                            }","                            catch (catchErr) {","                            }","                        }","                    }","                    // Execute after() subscribers for each bubble target and their respective targets:","                    if (stack.afterQueue) {","                        while ((next = stack.afterQueue.last())) {","                            next();","                        }","                    }","","                // Catch errors/preventions and reset the promise state to fulfilled for","                // the next call to fire();","                }).then(null, function (reason) {","                    return false;","                });","        },","        function(reason) {","            var facade = {","                error   : (reason && (reason.message || reason)),","                src     : 'Model._publishAsync()'","            };","            instance._lazyFireErrorEvent(facade);","        });","    };","","    asyncEvent._fire = function (args) {","        return asyncEvent.fire(args[0]);","    };","    return asyncEvent;","};","","/**"," * Fires the ERROR-event and -if not published yet- publish it broadcasted to Y."," * Because the error-event is broadcasted to Y, it can be catched by gallery-itsaerrorreporter."," *"," * @method _lazyFireErrorEvent"," * @param {Object} [facade] eventfacade."," * @private","**/","YModel.prototype._lazyFireErrorEvent = function(facade) {","    var instance = this;","","    // lazy publish","    if (!instance._errorEvent) {","        instance._errorEvent = instance.publish(ERROR, {","            broadcast: 1","        });","    }","    instance.fire(ERROR, facade);","};","","/**"," * This method is used internally and returns syncPromise() that is called with 'action'."," * If 'action' is not handled as a Promise -inside syncPromise- then this method will reject the promisi."," *"," * @method _syncTimeoutPromise"," * @param action {String} The sync-action to perform."," * @param [options] {Object} Sync options. The custom synclayer should pass through all options-properties to the server."," * @return {Y.Promise} returned response for each 'action' --> response --> resolve(dataobject) OR reject(reason)."," * The returned 'dataobject' might be an object or a string that can be turned into a json-object"," * @private"," * @since 0.2","*/","YModel.prototype._syncTimeoutPromise = function(action, options) {","    var instance = this;","","    return instance.defSyncOptions().then(","        function(defoptions) {","            var syncpromise = instance.syncPromise(action, Y.merge(defoptions, options));","            if (!(syncpromise instanceof Y.Promise)) {","                return new Y.Promise(function (resolve, reject) {","                    var errormessage = 'syncPromise is rejected --> '+action+' not defined as a Promise inside syncPromise()';","                    reject(new Error(errormessage));","                });","            }","            return syncpromise;","        }","    );","};","","}, 'gallery-2014.01.28-00-45', {","    \"requires\": [","        \"yui-base\",","        \"intl\",","        \"base-base\",","        \"base-build\",","        \"node-base\",","        \"json-parse\",","        \"promise\",","        \"model\",","        \"gallery-itsamodulesloadedpromise\",","        \"gallery-itsautils\"","    ],","    \"lang\": [","        \"ar\",","        \"bg\",","        \"bs\",","        \"cs\",","        \"da\",","        \"de\",","        \"en\",","        \"es\",","        \"fa\",","        \"fi\",","        \"fr\",","        \"he\",","        \"hi\",","        \"hr\",","        \"hu\",","        \"it\",","        \"ja\",","        \"nb\",","        \"nl\",","        \"pl\",","        \"pt\",","        \"ru\",","        \"sk\",","        \"sr\",","        \"sv\",","        \"uk\",","        \"zh\"","    ]","});","","}());"]};
}
var __cov_XDpPLj7Fz_gPyxqtPO4DtQ = __coverage__['build/gallery-itsamodelsyncpromise/gallery-itsamodelsyncpromise.js'];
__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['1']++;YUI.add('gallery-itsamodelsyncpromise',function(Y,NAME){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['1']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['2']++;'use strict';__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['3']++;var YModel=Y.Model,Lang=Y.Lang,YObject=Y.Object,YArray=Y.Array,DESTROY='destroy',LOAD='load',SAVE='save',SUBMIT='submit',ERROR='error',DELETE='delete',READ='read',DESTROYED=DESTROY+'ed',PUBLISHED='_pub_',ROMISE='romise',PROMISE='P'+ROMISE,AVAILABLESYNCMESSAGES={load:true,save:true,submit:true,destroy:true},MODELSYNC='modelsync',GALLERY_ITSA='gallery-itsa',GALLERYITSAMODELSYNCPROMISE=GALLERY_ITSA+MODELSYNC+'p'+ROMISE,PARSED=function(response){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['2']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['4']++;if(typeof response==='string'){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['1'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['5']++;try{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['6']++;return Y.JSON.fullparse(response);}catch(ex){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['7']++;this.fire(ERROR,{error:ex,response:response,src:'parse'});__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['8']++;return{};}}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['1'][1]++;}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['9']++;return(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['2'][0]++,response)||(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['2'][1]++,{});};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['10']++;YModel.prototype.addMessageTarget=function(itsamessageviewer){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['3']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['11']++;var instance=this;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['12']++;Y.usePromise(GALLERY_ITSA+'messagecontroller',GALLERY_ITSA+'messageviewer',GALLERY_ITSA+'panel',GALLERY_ITSA+'viewmodel').then(function(){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['4']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['13']++;return Y.ITSAMessageController.isReady();}).then(function(){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['5']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['14']++;(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['3'][0]++,itsamessageviewer instanceof Y.ITSAPanel)&&(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['3'][1]++,itsamessageviewer=itsamessageviewer._itsastatusbar);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['15']++;(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['4'][0]++,itsamessageviewer)||(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['4'][1]++,itsamessageviewer instanceof Y.ITSAViewModel)&&(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['4'][2]++,itsamessageviewer=itsamessageviewer._itsastatusbar);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['16']++;if(itsamessageviewer instanceof Y.ITSAMessageViewer){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['5'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['17']++;(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['6'][0]++,instance._itsamessageListener)&&(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['6'][1]++,instance.removeMessageTarget());__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['18']++;instance._itsamessageListener=instance.on([LOAD,SUBMIT,SAVE,DESTROY],function(e){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['6']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['19']++;var options=e.options,remove=(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['7'][0]++,options.remove)||(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['7'][1]++,options[DELETE]),type=e.type,typesplit=type.split(':'),subtype=(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['8'][0]++,typesplit[1])||(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['8'][1]++,typesplit[0]),statushandle,syncMessages;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['20']++;if((__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['10'][0]++,subtype!==DESTROY)||(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['10'][1]++,remove)){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['9'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['21']++;syncMessages=instance._defSyncMessages;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['22']++;statushandle=itsamessageviewer.showStatus((__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['11'][0]++,e.syncmessage)||(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['11'][1]++,syncMessages)&&(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['11'][2]++,syncMessages[subtype])||(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['11'][3]++,Y.Intl.get(GALLERYITSAMODELSYNCPROMISE)[subtype]),{source:MODELSYNC,busy:true});__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['23']++;e.promise.then(function(){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['7']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['24']++;itsamessageviewer.removeStatus(statushandle);},function(){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['8']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['25']++;itsamessageviewer.removeStatus(statushandle);});}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['9'][1]++;}});__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['26']++;instance._itsamessagedestroylistener1=instance.onceAfter(DESTROY,function(){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['9']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['27']++;instance._itsamessageListener.detach();});__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['28']++;instance._itsamessagedestroylistener2=itsamessageviewer.once(DESTROY,function(){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['10']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['29']++;instance._itsamessageListener.detach();});}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['5'][1]++;}});};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['30']++;YModel.prototype.defSyncOptions=function(){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['11']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['31']++;return new Y.Promise(function(resolve){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['12']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['32']++;resolve({});});};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['33']++;YArray.each([LOAD,DESTROY,SAVE],function(Fn){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['13']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['34']++;YModel.prototype[Fn]=function(options,callback){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['14']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['35']++;var instance=this,promise;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['36']++;(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['12'][0]++,promise=instance[Fn+PROMISE](options))&&(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['12'][1]++,callback)&&(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['12'][2]++,promise.then(function(response){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['15']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['37']++;callback(null,response);},function(err){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['16']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['38']++;callback(err);}));__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['39']++;return instance;};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['40']++;YModel.prototype[Fn+PROMISE]=function(options){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['17']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['41']++;return this._createPromise(Fn,options);};});__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['42']++;YModel.prototype.removeMessageTarget=function(){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['18']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['43']++;var instance=this;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['44']++;(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['13'][0]++,instance._itsamessageListener)&&(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['13'][1]++,instance._itsamessageListener.detach());__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['45']++;(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['14'][0]++,instance._itsamessagedestroylistener1)&&(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['14'][1]++,instance._itsamessagedestroylistener1.detach());__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['46']++;(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['15'][0]++,instance._itsamessagedestroylistener2)&&(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['15'][1]++,instance._itsamessagedestroylistener2.detach());__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['47']++;instance._itsamessageListener=null;};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['48']++;YModel.prototype.setSyncMessage=function(type,message){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['19']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['49']++;var instance=this;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['50']++;(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['16'][0]++,instance._defSyncMessages)||(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['16'][1]++,instance._defSyncMessages={});__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['51']++;(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['17'][0]++,AVAILABLESYNCMESSAGES[type])&&(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['17'][1]++,instance._defSyncMessages[type]=message);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['52']++;return instance;};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['53']++;YModel.prototype._createPromise=function(type,options){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['20']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['54']++;var instance=this,promise,promiseResolve,promiseReject,extraOptions;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['55']++;promise=new Y.Promise(function(resolve,reject){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['21']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['56']++;promiseResolve=resolve;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['57']++;promiseReject=reject;});__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['58']++;extraOptions={promise:promise,promiseResolve:promiseResolve,promiseReject:promiseReject,response:'',parsed:{},options:Y.merge(options)};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['59']++;(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['18'][0]++,Lang.isObject(options))&&(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['18'][1]++,YObject.each(options,function(value,key){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['22']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['60']++;extraOptions[key]=value;}));__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['61']++;(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['19'][0]++,instance[PUBLISHED+type])||(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['19'][1]++,instance[PUBLISHED+type]=instance._publishAsync(type,{defaultTargetOnly:true,emitFacade:true,broadcast:1,defaultFn:instance['_defFn_'+type],preventedFn:instance._prevDefFn}));__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['62']++;instance.fire(type,extraOptions);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['63']++;return promise;};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['64']++;YModel.prototype._defFn_destroy=function(e){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['23']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['65']++;var instance=this,promiseResolve=e.promiseResolve,promiseReject=e.promiseReject,options=e.options,remove=(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['20'][0]++,options.remove)||(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['20'][1]++,options[DELETE]),errFunc,successFunc,finish;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['66']++;if(instance.get(DESTROYED)){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['21'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['67']++;promiseReject(new Error('Model is already destroyed'));}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['21'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['68']++;finish=function(){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['24']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['69']++;instance._baseDestroy();__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['70']++;YArray.each(instance.lists.concat(),function(list){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['25']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['71']++;list.remove(instance,options);});};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['72']++;if(remove){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['22'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['73']++;errFunc=function(err){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['26']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['74']++;var facade={error:err,src:DESTROY,options:options};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['75']++;instance._lazyFireErrorEvent(facade);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['76']++;promiseReject(new Error(err));};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['77']++;successFunc=function(response){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['27']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['78']++;finish();__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['79']++;promiseResolve(response);};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['80']++;if(instance.syncPromise){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['23'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['81']++;instance._syncTimeoutPromise(DELETE,options).then(successFunc,errFunc);}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['23'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['82']++;instance.sync(DELETE,options,function(err,response){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['28']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['83']++;if(err){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['24'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['84']++;errFunc(err);}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['24'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['85']++;successFunc(response);}});}}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['22'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['86']++;finish();__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['87']++;promiseResolve();}}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['88']++;return e.promise;};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['89']++;YModel.prototype._defFn_load=function(e){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['29']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['90']++;var instance=this,options=e.options,errFunc,successFunc;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['91']++;errFunc=function(err){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['30']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['92']++;var facade={options:options,error:err,src:LOAD};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['93']++;instance._lazyFireErrorEvent(facade);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['94']++;e.promiseReject(new Error(err));};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['95']++;successFunc=function(response){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['31']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['96']++;var parsed;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['97']++;e.response=response;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['98']++;parsed=PARSED(response);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['99']++;if(parsed.responseText){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['25'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['100']++;if(parsed.responseText){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['26'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['101']++;parsed=PARSED(parsed.responseText);}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['26'][1]++;}}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['25'][1]++;}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['102']++;e.parsed=parsed;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['103']++;instance.setAttrs(parsed,options);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['104']++;instance.changed={};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['105']++;e.promiseResolve(response);};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['106']++;if(instance.syncPromise){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['27'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['107']++;instance._syncTimeoutPromise(READ,options).then(successFunc,errFunc);}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['27'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['108']++;instance.sync(READ,options,function(err,response){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['32']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['109']++;if(err){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['28'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['110']++;errFunc(err);}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['28'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['111']++;successFunc(response);}});}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['112']++;return e.promise;};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['113']++;YModel.prototype._defFn_save=function(e){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['33']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['114']++;var instance=this,usedmethod=instance.isNew()?(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['29'][0]++,'create'):(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['29'][1]++,'update'),options=e.options,promiseReject=e.promiseReject,errFunc,successFunc,unvalidNodes,facade={options:options,method:usedmethod};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['115']++;if(!instance.isModified()){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['30'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['116']++;promiseReject(new Error('Model will not be saved: not modified'));}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['30'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['117']++;instance._validate(instance.toJSON(),function(validateErr){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['34']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['118']++;if(validateErr){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['31'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['119']++;facade.error=validateErr;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['120']++;facade.src=SAVE;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['121']++;instance._lazyFireErrorEvent(facade);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['122']++;promiseReject(new Error(validateErr));}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['31'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['123']++;errFunc=function(err){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['35']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['124']++;facade.error=err;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['125']++;facade.src=SAVE;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['126']++;instance._lazyFireErrorEvent(facade);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['127']++;promiseReject(new Error(err));};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['128']++;successFunc=function(response){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['36']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['129']++;var parsed;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['130']++;e.response=response;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['131']++;parsed=PARSED(response);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['132']++;if(parsed.responseText){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['32'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['133']++;parsed=PARSED(parsed.responseText);}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['32'][1]++;}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['134']++;if(YObject.keys(parsed).length>0){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['33'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['135']++;e.parsed=parsed;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['136']++;parsed.id===-1?(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['34'][0]++,instance.destroy()):(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['34'][1]++,instance.setAttrs(parsed,(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['35'][0]++,options.fromInternal=true)&&(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['35'][1]++,options)));}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['33'][1]++;}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['137']++;instance.changed={};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['138']++;e.promiseResolve(response);};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['139']++;if((__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['37'][0]++,!instance.toJSONUI)||(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['37'][1]++,unvalidNodes=instance.getUnvalidatedUI())&&(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['37'][2]++,unvalidNodes.isEmpty())){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['36'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['140']++;if(instance.syncPromise){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['38'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['141']++;instance._syncTimeoutPromise(usedmethod,options).then(successFunc,errFunc);}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['38'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['142']++;instance.sync(usedmethod,options,function(err,response){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['37']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['143']++;if(err){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['39'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['144']++;errFunc(err);}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['39'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['145']++;successFunc(response);}});}}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['36'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['146']++;errFunc(instance._intl.unvalidated);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['147']++;instance.fire('validationerror',{target:instance,nodelist:unvalidNodes,src:SAVE});}}});}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['148']++;return e.promise;};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['149']++;YModel.prototype._prevDefFn=function(e){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['38']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['150']++;e.promiseReject(new Error('preventDefaulted'));};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['151']++;YModel.prototype._publishAsync=function(type,opts){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['39']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['152']++;var instance=this,asyncEvent=instance.publish(type,opts);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['153']++;(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['40'][0]++,opts)&&(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['40'][1]++,opts.broadcast===1)&&(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['40'][2]++,instance.addTarget(Y));__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['154']++;(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['41'][0]++,opts)&&(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['41'][1]++,opts.broadcast===2)&&(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['41'][2]++,instance.addTarget(YUI));__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['155']++;asyncEvent._firing=new Y.Promise(function(resolve){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['40']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['156']++;resolve();});__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['157']++;asyncEvent.fire=function(data){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['41']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['158']++;var args=Y.Array(arguments,0,true),stack,next;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['159']++;asyncEvent._firing=asyncEvent._firing.then(function(){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['42']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['160']++;stack={id:asyncEvent.id,next:asyncEvent,silent:asyncEvent.silent,stopped:0,prevented:0,bubbling:null,type:asyncEvent.type,defaultTargetOnly:asyncEvent.defaultTargetOnly};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['161']++;asyncEvent.details=args;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['162']++;var subs=asyncEvent._subscribers,args2=[],e,i,len;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['163']++;args2.push.apply(args2,data);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['164']++;e=asyncEvent._createFacade(args2);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['165']++;e.target=(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['42'][0]++,e.target)||(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['42'][1]++,instance);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['166']++;if(subs){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['43'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['167']++;for(i=0,len=subs.length;i<len;++i){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['168']++;try{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['169']++;subs[i].fn.call(subs[i].context,e);}catch(catchErr){}}}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['43'][1]++;}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['170']++;if((__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['45'][0]++,asyncEvent.bubbles)&&(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['45'][1]++,!asyncEvent.stopped)){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['44'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['171']++;instance.bubble(asyncEvent,args,null,stack);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['172']++;e.prevented=Math.max(e.prevented,stack.prevented);}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['44'][1]++;}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['173']++;return e.prevented?(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['46'][0]++,asyncEvent.preventedFn.call(instance,e).then(null,function(reason){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['43']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['174']++;return false;})):(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['46'][1]++,asyncEvent.defaultFn.call(instance,e).then(function(){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['44']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['175']++;subs=asyncEvent._afters;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['176']++;if(subs){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['47'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['177']++;for(i=0,len=subs.length;i<len;++i){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['178']++;try{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['179']++;subs[i].fn.call(subs[i].context,e);}catch(catchErr){}}}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['47'][1]++;}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['180']++;if(stack.afterQueue){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['48'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['181']++;while(next=stack.afterQueue.last()){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['182']++;next();}}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['48'][1]++;}}).then(null,function(reason){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['45']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['183']++;return false;}));},function(reason){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['46']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['184']++;var facade={error:(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['49'][0]++,reason)&&((__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['49'][1]++,reason.message)||(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['49'][2]++,reason)),src:'Model._publishAsync()'};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['185']++;instance._lazyFireErrorEvent(facade);});};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['186']++;asyncEvent._fire=function(args){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['47']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['187']++;return asyncEvent.fire(args[0]);};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['188']++;return asyncEvent;};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['189']++;YModel.prototype._lazyFireErrorEvent=function(facade){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['48']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['190']++;var instance=this;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['191']++;if(!instance._errorEvent){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['50'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['192']++;instance._errorEvent=instance.publish(ERROR,{broadcast:1});}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['50'][1]++;}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['193']++;instance.fire(ERROR,facade);};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['194']++;YModel.prototype._syncTimeoutPromise=function(action,options){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['49']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['195']++;var instance=this;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['196']++;return instance.defSyncOptions().then(function(defoptions){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['50']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['197']++;var syncpromise=instance.syncPromise(action,Y.merge(defoptions,options));__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['198']++;if(!(syncpromise instanceof Y.Promise)){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['51'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['199']++;return new Y.Promise(function(resolve,reject){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['51']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['200']++;var errormessage='syncPromise is rejected --> '+action+' not defined as a Promise inside syncPromise()';__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['201']++;reject(new Error(errormessage));});}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['51'][1]++;}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['202']++;return syncpromise;});};},'gallery-2014.01.28-00-45',{'requires':['yui-base','intl','base-base','base-build','node-base','json-parse','promise','model','gallery-itsamodulesloadedpromise','gallery-itsautils'],'lang':['ar','bg','bs','cs','da','de','en','es','fa','fi','fr','he','hi','hr','hu','it','ja','nb','nl','pl','pt','ru','sk','sr','sv','uk','zh']});
