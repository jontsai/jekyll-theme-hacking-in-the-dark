if (typeof __coverage__ === 'undefined') { __coverage__ = {}; }
if (!__coverage__['build/gallery-composite-image/gallery-composite-image.js']) {
   __coverage__['build/gallery-composite-image/gallery-composite-image.js'] = {"path":"build/gallery-composite-image/gallery-composite-image.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0,0,0,0,0,0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":35},"end":{"line":1,"column":54}}},"2":{"name":"(anonymous_2)","line":7,"loc":{"start":{"line":7,"column":1},"end":{"line":7,"column":14}}},"3":{"name":"(anonymous_3)","line":168,"loc":{"start":{"line":168,"column":17},"end":{"line":168,"column":29}}},"4":{"name":"(anonymous_4)","line":220,"loc":{"start":{"line":220,"column":19},"end":{"line":220,"column":31}}},"5":{"name":"(anonymous_5)","line":232,"loc":{"start":{"line":232,"column":19},"end":{"line":232,"column":31}}},"6":{"name":"(anonymous_6)","line":254,"loc":{"start":{"line":254,"column":28},"end":{"line":254,"column":57}}},"7":{"name":"(anonymous_7)","line":278,"loc":{"start":{"line":278,"column":31},"end":{"line":278,"column":60}}},"8":{"name":"(anonymous_8)","line":313,"loc":{"start":{"line":313,"column":26},"end":{"line":313,"column":38}}},"9":{"name":"(anonymous_9)","line":318,"loc":{"start":{"line":318,"column":56},"end":{"line":318,"column":68}}},"10":{"name":"(anonymous_10)","line":322,"loc":{"start":{"line":322,"column":38},"end":{"line":322,"column":60}}},"11":{"name":"(anonymous_11)","line":340,"loc":{"start":{"line":340,"column":27},"end":{"line":340,"column":39}}},"12":{"name":"(anonymous_12)","line":358,"loc":{"start":{"line":358,"column":28},"end":{"line":358,"column":76}}},"13":{"name":"(anonymous_13)","line":361,"loc":{"start":{"line":361,"column":76},"end":{"line":361,"column":100}}},"14":{"name":"(anonymous_14)","line":363,"loc":{"start":{"line":363,"column":20},"end":{"line":363,"column":61}}},"15":{"name":"(anonymous_15)","line":377,"loc":{"start":{"line":377,"column":22},"end":{"line":377,"column":68}}},"16":{"name":"(anonymous_16)","line":388,"loc":{"start":{"line":388,"column":26},"end":{"line":388,"column":47}}},"17":{"name":"(anonymous_17)","line":394,"loc":{"start":{"line":394,"column":41},"end":{"line":394,"column":63}}},"18":{"name":"(anonymous_18)","line":418,"loc":{"start":{"line":418,"column":28},"end":{"line":418,"column":89}}},"19":{"name":"(anonymous_19)","line":421,"loc":{"start":{"line":421,"column":70},"end":{"line":421,"column":111}}},"20":{"name":"(anonymous_20)","line":423,"loc":{"start":{"line":423,"column":20},"end":{"line":423,"column":56}}},"21":{"name":"(anonymous_21)","line":440,"loc":{"start":{"line":440,"column":22},"end":{"line":440,"column":75}}},"22":{"name":"(anonymous_22)","line":449,"loc":{"start":{"line":449,"column":20},"end":{"line":449,"column":32}}},"23":{"name":"(anonymous_23)","line":470,"loc":{"start":{"line":470,"column":22},"end":{"line":470,"column":34}}},"24":{"name":"(anonymous_24)","line":481,"loc":{"start":{"line":481,"column":22},"end":{"line":481,"column":38}}},"25":{"name":"(anonymous_25)","line":493,"loc":{"start":{"line":493,"column":19},"end":{"line":493,"column":44}}},"26":{"name":"(anonymous_26)","line":502,"loc":{"start":{"line":502,"column":56},"end":{"line":502,"column":89}}},"27":{"name":"(anonymous_27)","line":505,"loc":{"start":{"line":505,"column":53},"end":{"line":505,"column":91}}},"28":{"name":"(anonymous_28)","line":580,"loc":{"start":{"line":580,"column":29},"end":{"line":580,"column":41}}},"29":{"name":"(anonymous_29)","line":583,"loc":{"start":{"line":583,"column":29},"end":{"line":583,"column":48}}},"30":{"name":"(anonymous_30)","line":688,"loc":{"start":{"line":688,"column":22},"end":{"line":688,"column":48}}},"31":{"name":"(anonymous_31)","line":700,"loc":{"start":{"line":700,"column":41},"end":{"line":700,"column":61}}},"32":{"name":"(anonymous_32)","line":731,"loc":{"start":{"line":731,"column":41},"end":{"line":731,"column":53}}},"33":{"name":"(anonymous_33)","line":736,"loc":{"start":{"line":736,"column":27},"end":{"line":736,"column":39}}},"34":{"name":"(anonymous_34)","line":767,"loc":{"start":{"line":767,"column":36},"end":{"line":767,"column":83}}},"35":{"name":"(anonymous_35)","line":770,"loc":{"start":{"line":770,"column":30},"end":{"line":770,"column":66}}},"36":{"name":"(anonymous_36)","line":772,"loc":{"start":{"line":772,"column":16},"end":{"line":772,"column":52}}},"37":{"name":"(anonymous_37)","line":787,"loc":{"start":{"line":787,"column":36},"end":{"line":787,"column":83}}},"38":{"name":"(anonymous_38)","line":790,"loc":{"start":{"line":790,"column":30},"end":{"line":790,"column":73}}},"39":{"name":"(anonymous_39)","line":793,"loc":{"start":{"line":793,"column":16},"end":{"line":793,"column":59}}},"40":{"name":"(anonymous_40)","line":808,"loc":{"start":{"line":808,"column":30},"end":{"line":808,"column":50}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":815,"column":63}},"2":{"start":{"line":7,"column":0},"end":{"line":813,"column":6}},"3":{"start":{"line":8,"column":4},"end":{"line":8,"column":17}},"4":{"start":{"line":10,"column":4},"end":{"line":170,"column":10}},"5":{"start":{"line":169,"column":12},"end":{"line":169,"column":46}},"6":{"start":{"line":172,"column":4},"end":{"line":812,"column":14}},"7":{"start":{"line":221,"column":16},"end":{"line":221,"column":30}},"8":{"start":{"line":223,"column":16},"end":{"line":223,"column":75}},"9":{"start":{"line":225,"column":16},"end":{"line":225,"column":26}},"10":{"start":{"line":233,"column":16},"end":{"line":233,"column":30}},"11":{"start":{"line":235,"column":16},"end":{"line":240,"column":19}},"12":{"start":{"line":255,"column":16},"end":{"line":257,"column":35}},"13":{"start":{"line":259,"column":16},"end":{"line":261,"column":17}},"14":{"start":{"line":260,"column":20},"end":{"line":260,"column":54}},"15":{"start":{"line":263,"column":16},"end":{"line":263,"column":26}},"16":{"start":{"line":279,"column":16},"end":{"line":286,"column":39}},"17":{"start":{"line":288,"column":16},"end":{"line":290,"column":17}},"18":{"start":{"line":289,"column":20},"end":{"line":289,"column":54}},"19":{"start":{"line":292,"column":16},"end":{"line":304,"column":17}},"20":{"start":{"line":293,"column":20},"end":{"line":293,"column":77}},"21":{"start":{"line":295,"column":20},"end":{"line":303,"column":21}},"22":{"start":{"line":296,"column":24},"end":{"line":296,"column":59}},"23":{"start":{"line":298,"column":24},"end":{"line":300,"column":25}},"24":{"start":{"line":299,"column":28},"end":{"line":299,"column":34}},"25":{"start":{"line":302,"column":24},"end":{"line":302,"column":58}},"26":{"start":{"line":306,"column":16},"end":{"line":306,"column":26}},"27":{"start":{"line":314,"column":16},"end":{"line":316,"column":44}},"28":{"start":{"line":318,"column":16},"end":{"line":329,"column":41}},"29":{"start":{"line":319,"column":20},"end":{"line":320,"column":39}},"30":{"start":{"line":322,"column":20},"end":{"line":326,"column":23}},"31":{"start":{"line":323,"column":24},"end":{"line":325,"column":25}},"32":{"start":{"line":324,"column":28},"end":{"line":324,"column":83}},"33":{"start":{"line":328,"column":20},"end":{"line":328,"column":37}},"34":{"start":{"line":341,"column":16},"end":{"line":341,"column":76}},"35":{"start":{"line":359,"column":16},"end":{"line":359,"column":30}},"36":{"start":{"line":361,"column":16},"end":{"line":365,"column":19}},"37":{"start":{"line":362,"column":20},"end":{"line":362,"column":75}},"38":{"start":{"line":364,"column":20},"end":{"line":364,"column":75}},"39":{"start":{"line":378,"column":16},"end":{"line":378,"column":166}},"40":{"start":{"line":389,"column":16},"end":{"line":392,"column":35}},"41":{"start":{"line":394,"column":16},"end":{"line":399,"column":19}},"42":{"start":{"line":395,"column":20},"end":{"line":398,"column":21}},"43":{"start":{"line":396,"column":24},"end":{"line":396,"column":86}},"44":{"start":{"line":397,"column":24},"end":{"line":397,"column":40}},"45":{"start":{"line":419,"column":16},"end":{"line":419,"column":30}},"46":{"start":{"line":421,"column":16},"end":{"line":425,"column":19}},"47":{"start":{"line":422,"column":20},"end":{"line":422,"column":98}},"48":{"start":{"line":424,"column":20},"end":{"line":424,"column":80}},"49":{"start":{"line":427,"column":16},"end":{"line":427,"column":26}},"50":{"start":{"line":441,"column":16},"end":{"line":441,"column":173}},"51":{"start":{"line":450,"column":16},"end":{"line":457,"column":22}},"52":{"start":{"line":459,"column":16},"end":{"line":461,"column":17}},"53":{"start":{"line":460,"column":20},"end":{"line":460,"column":55}},"54":{"start":{"line":463,"column":16},"end":{"line":463,"column":30}},"55":{"start":{"line":471,"column":16},"end":{"line":471,"column":83}},"56":{"start":{"line":482,"column":16},"end":{"line":482,"column":42}},"57":{"start":{"line":483,"column":16},"end":{"line":483,"column":109}},"58":{"start":{"line":494,"column":16},"end":{"line":494,"column":52}},"59":{"start":{"line":496,"column":16},"end":{"line":518,"column":25}},"60":{"start":{"line":503,"column":24},"end":{"line":503,"column":54}},"61":{"start":{"line":506,"column":24},"end":{"line":506,"column":55}},"62":{"start":{"line":508,"column":24},"end":{"line":512,"column":25}},"63":{"start":{"line":509,"column":28},"end":{"line":509,"column":55}},"64":{"start":{"line":510,"column":31},"end":{"line":512,"column":25}},"65":{"start":{"line":511,"column":28},"end":{"line":511,"column":44}},"66":{"start":{"line":514,"column":24},"end":{"line":514,"column":76}},"67":{"start":{"line":520,"column":16},"end":{"line":624,"column":19}},"68":{"start":{"line":581,"column":28},"end":{"line":581,"column":40}},"69":{"start":{"line":584,"column":28},"end":{"line":584,"column":43}},"70":{"start":{"line":597,"column":28},"end":{"line":597,"column":79}},"71":{"start":{"line":634,"column":16},"end":{"line":634,"column":89}},"72":{"start":{"line":644,"column":16},"end":{"line":644,"column":94}},"73":{"start":{"line":655,"column":16},"end":{"line":655,"column":94}},"74":{"start":{"line":657,"column":16},"end":{"line":665,"column":17}},"75":{"start":{"line":658,"column":20},"end":{"line":658,"column":49}},"76":{"start":{"line":660,"column":20},"end":{"line":660,"column":31}},"77":{"start":{"line":662,"column":20},"end":{"line":664,"column":21}},"78":{"start":{"line":663,"column":24},"end":{"line":663,"column":59}},"79":{"start":{"line":675,"column":16},"end":{"line":675,"column":64}},"80":{"start":{"line":689,"column":12},"end":{"line":689,"column":72}},"81":{"start":{"line":701,"column":12},"end":{"line":718,"column":13}},"82":{"start":{"line":703,"column":20},"end":{"line":703,"column":40}},"83":{"start":{"line":705,"column":20},"end":{"line":705,"column":40}},"84":{"start":{"line":707,"column":20},"end":{"line":707,"column":38}},"85":{"start":{"line":709,"column":20},"end":{"line":709,"column":38}},"86":{"start":{"line":711,"column":20},"end":{"line":711,"column":37}},"87":{"start":{"line":713,"column":20},"end":{"line":713,"column":39}},"88":{"start":{"line":715,"column":20},"end":{"line":715,"column":39}},"89":{"start":{"line":717,"column":20},"end":{"line":717,"column":45}},"90":{"start":{"line":720,"column":12},"end":{"line":720,"column":29}},"91":{"start":{"line":732,"column":12},"end":{"line":734,"column":57}},"92":{"start":{"line":736,"column":12},"end":{"line":754,"column":15}},"93":{"start":{"line":737,"column":16},"end":{"line":741,"column":27}},"94":{"start":{"line":743,"column":16},"end":{"line":751,"column":17}},"95":{"start":{"line":744,"column":20},"end":{"line":744,"column":49}},"96":{"start":{"line":746,"column":20},"end":{"line":748,"column":21}},"97":{"start":{"line":747,"column":24},"end":{"line":747,"column":54}},"98":{"start":{"line":750,"column":20},"end":{"line":750,"column":36}},"99":{"start":{"line":753,"column":16},"end":{"line":753,"column":29}},"100":{"start":{"line":768,"column":12},"end":{"line":768,"column":53}},"101":{"start":{"line":770,"column":12},"end":{"line":774,"column":14}},"102":{"start":{"line":771,"column":16},"end":{"line":771,"column":80}},"103":{"start":{"line":773,"column":16},"end":{"line":773,"column":170}},"104":{"start":{"line":788,"column":12},"end":{"line":788,"column":53}},"105":{"start":{"line":790,"column":12},"end":{"line":797,"column":14}},"106":{"start":{"line":791,"column":16},"end":{"line":791,"column":81}},"107":{"start":{"line":792,"column":16},"end":{"line":792,"column":28}},"108":{"start":{"line":794,"column":16},"end":{"line":794,"column":30}},"109":{"start":{"line":795,"column":16},"end":{"line":795,"column":164}},"110":{"start":{"line":796,"column":16},"end":{"line":796,"column":26}},"111":{"start":{"line":809,"column":12},"end":{"line":809,"column":42}},"112":{"start":{"line":810,"column":12},"end":{"line":810,"column":99}}},"branchMap":{"1":{"line":298,"type":"if","locations":[{"start":{"line":298,"column":24},"end":{"line":298,"column":24}},{"start":{"line":298,"column":24},"end":{"line":298,"column":24}}]},"2":{"line":318,"type":"cond-expr","locations":[{"start":{"line":318,"column":56},"end":{"line":329,"column":19}},{"start":{"line":329,"column":23},"end":{"line":329,"column":40}}]},"3":{"line":361,"type":"binary-expr","locations":[{"start":{"line":361,"column":28},"end":{"line":361,"column":42}},{"start":{"line":361,"column":46},"end":{"line":361,"column":57}}]},"4":{"line":361,"type":"cond-expr","locations":[{"start":{"line":361,"column":76},"end":{"line":363,"column":17}},{"start":{"line":363,"column":20},"end":{"line":365,"column":17}}]},"5":{"line":378,"type":"cond-expr","locations":[{"start":{"line":378,"column":87},"end":{"line":378,"column":107}},{"start":{"line":378,"column":110},"end":{"line":378,"column":150}}]},"6":{"line":421,"type":"binary-expr","locations":[{"start":{"line":421,"column":22},"end":{"line":421,"column":36}},{"start":{"line":421,"column":40},"end":{"line":421,"column":51}}]},"7":{"line":421,"type":"cond-expr","locations":[{"start":{"line":421,"column":70},"end":{"line":423,"column":17}},{"start":{"line":423,"column":20},"end":{"line":425,"column":17}}]},"8":{"line":441,"type":"cond-expr","locations":[{"start":{"line":441,"column":87},"end":{"line":441,"column":107}},{"start":{"line":441,"column":110},"end":{"line":441,"column":150}}]},"9":{"line":459,"type":"if","locations":[{"start":{"line":459,"column":16},"end":{"line":459,"column":16}},{"start":{"line":459,"column":16},"end":{"line":459,"column":16}}]},"10":{"line":482,"type":"binary-expr","locations":[{"start":{"line":482,"column":23},"end":{"line":482,"column":27}},{"start":{"line":482,"column":31},"end":{"line":482,"column":41}}]},"11":{"line":483,"type":"binary-expr","locations":[{"start":{"line":483,"column":23},"end":{"line":483,"column":51}},{"start":{"line":483,"column":55},"end":{"line":483,"column":108}}]},"12":{"line":494,"type":"binary-expr","locations":[{"start":{"line":494,"column":32},"end":{"line":494,"column":45}},{"start":{"line":494,"column":49},"end":{"line":494,"column":51}}]},"13":{"line":498,"type":"binary-expr","locations":[{"start":{"line":498,"column":40},"end":{"line":498,"column":62}},{"start":{"line":498,"column":66},"end":{"line":498,"column":88}}]},"14":{"line":501,"type":"binary-expr","locations":[{"start":{"line":501,"column":42},"end":{"line":501,"column":66}},{"start":{"line":501,"column":70},"end":{"line":501,"column":94}}]},"15":{"line":508,"type":"if","locations":[{"start":{"line":508,"column":24},"end":{"line":508,"column":24}},{"start":{"line":508,"column":24},"end":{"line":508,"column":24}}]},"16":{"line":508,"type":"binary-expr","locations":[{"start":{"line":508,"column":28},"end":{"line":508,"column":37}},{"start":{"line":508,"column":41},"end":{"line":508,"column":58}}]},"17":{"line":510,"type":"if","locations":[{"start":{"line":510,"column":31},"end":{"line":510,"column":31}},{"start":{"line":510,"column":31},"end":{"line":510,"column":31}}]},"18":{"line":510,"type":"binary-expr","locations":[{"start":{"line":510,"column":35},"end":{"line":510,"column":43}},{"start":{"line":510,"column":47},"end":{"line":510,"column":75}}]},"19":{"line":657,"type":"if","locations":[{"start":{"line":657,"column":16},"end":{"line":657,"column":16}},{"start":{"line":657,"column":16},"end":{"line":657,"column":16}}]},"20":{"line":662,"type":"if","locations":[{"start":{"line":662,"column":20},"end":{"line":662,"column":20}},{"start":{"line":662,"column":20},"end":{"line":662,"column":20}}]},"21":{"line":701,"type":"switch","locations":[{"start":{"line":702,"column":16},"end":{"line":703,"column":40}},{"start":{"line":704,"column":16},"end":{"line":705,"column":40}},{"start":{"line":706,"column":16},"end":{"line":707,"column":38}},{"start":{"line":708,"column":16},"end":{"line":709,"column":38}},{"start":{"line":710,"column":16},"end":{"line":711,"column":37}},{"start":{"line":712,"column":16},"end":{"line":713,"column":39}},{"start":{"line":714,"column":16},"end":{"line":715,"column":39}},{"start":{"line":716,"column":16},"end":{"line":717,"column":45}}]},"22":{"line":770,"type":"cond-expr","locations":[{"start":{"line":770,"column":30},"end":{"line":772,"column":13}},{"start":{"line":772,"column":16},"end":{"line":774,"column":13}}]},"23":{"line":790,"type":"cond-expr","locations":[{"start":{"line":790,"column":30},"end":{"line":793,"column":13}},{"start":{"line":793,"column":16},"end":{"line":797,"column":13}}]},"24":{"line":810,"type":"cond-expr","locations":[{"start":{"line":810,"column":35},"end":{"line":810,"column":42}},{"start":{"line":810,"column":46},"end":{"line":810,"column":75}}]},"25":{"line":810,"type":"cond-expr","locations":[{"start":{"line":810,"column":61},"end":{"line":810,"column":66}},{"start":{"line":810,"column":69},"end":{"line":810,"column":75}}]}},"code":["(function () { YUI.add('gallery-composite-image', function (Y, NAME) {","","/**","@module gallery-composite-image","@author Steven Olmsted","*/","(function (Y) {","    'use strict';","","    var _string_f32 = 'f32',","        _string_f64 = 'f64',","        _string_number = 'number',","        _string_s16 = 's16',","        _string_s32 = 's32',","        _string_s8 = 's8',","        _string_u16 = 'u16',","        _string_u32 = 'u32',","        _string_u8 = 'u8',","        _true = true,","","        _ArrayBuffer = ArrayBuffer,","        _DataView = DataView,","        _Lang = Y.Lang,","        _Object = Object,","        _YArray = Y.Array,","","        _cached = Y.cached,","        _defineProperties = _Object.defineProperties,","        _each = _YArray.each,","        _flatten = _YArray.flatten,","        _freeze = _Object.freeze,","        _isArray = _Lang.isArray,","        _map = _YArray.map,","        _reduce = _YArray.reduce,","","        /**","        Y.Composite.Image is an interface for manipulating multi-dimensional","        arrays of uncompressed binary data.  It is primarily designed for","        working with images and its internal data is compatible with the RGBA","        image format used by the canvas context2d object.  Above and beyond","        two-dimensional images, Y.Composite.Image is theoretically capable of","        supporting unlimited pixel dimensions and unlimited data channels.  This","        opens up a wide range of potential uses including working with","        compositing layers, animation or video, or voxel data sets like those","        used for 3D rendering simulations or a world map in games like","        Minecraft.","","        Y.Composite.Image internally stores and interacts with its data by using","        typed arrays.  It uses some relatively new features of typed arrays","        including DataView and Uint8ClampedArray.  There is no support for older","        browsers without these features.","","        The Y.Composite.Image constructor accepts an optional configuration","        object with the following optional parameters:","","        * `channels`: Every pixel within an image may contain one or more","          values.  These are called channels.  A default image has four channels","          referred to as RGBA.  The first channel stores the red component of","          the pixel's color, the second channel stores the green component, then","          blue is third, and the alpha channel is last.  These channels are all","          unsigned 8-bit integers.  In other words the value can be an integer","          from 0 to 255.","","          When creating a new image, these default channels may be used or","          custom channels may be defined.  There must be at least one channel","          but there is no upper limit on the number of channels an image may","          have.  Channels may also be a data type other than unsigned 8-bit","          integers; they may be any numerical type used by typed arrays.","","          To specify custom channels, pass in an array.  The length of the array","          will determine the number of channels and the value of each item in","          the array will denote the data type of that channel.  The accepted","          types are:","","          * 'f32' - 32-bit floating point number","          * 'f64' - 64-bit floating point number","          * 's16' - Signed 16-bit integer","          * 's32' - Signed 32-bit integer","          * 's8' - Signed 8-bit integer","          * 'u16' - Unsigned 16-bit integer","          * 'u32' - Unsigned 32-bit integer","          * 'u8' - Unsigned 8-bit integer","","          If left undefined, channels is set to ['u8', 'u8', 'u8', 'u8']","","          It is permitted to use channels of different types such as","          ['u8', 's16', 'f64', 's8', 'f32'] but due to technical and boring","          reasons including byte alignment and endianness this is much less","          efficient than using homogeneous channel types.","","          Also note that the total byte size and number of channels can have","          a huge impact on memory usage.","","        * `data`: The initial data to populate the image with.  If this is left","          undefined, the image will be entirely initialized with zeros.  Data","          may be passed in as either an ArrayBuffer or a regular Array.  If a","          regular array is passed in, nothing is done to validate the data or","          the size of the array.  An invalid array will probably yield undesired","          results.","","        * `dimensions`: An image is basically just a multi-dimensional array and","          the dimensions determine the size, shape, and number of pixels in the","          image.  If left undefined, dimensions defaults to the two-dimensional","          square [512, 512].  For standard two-dimensional images, think of this","          as [width, height]","","          There must be at least one dimension but there is no upper limit on","          the number of dimensions an image may have.  Each dimension must have","          at least one pixel but there is no upper limit on the number of pixels","          a dimension may have.","","          For example a really long line could be defined with the dimensions","          [9999999999] or a 3D box could be defined with the dimensions","          [24, 37, 42] or a 4D hypercube could be defined with the dimensions","          [21, 21, 21, 21]","","          This API standardizes on the term `pixel` to mean an element of a","          multi-dimensional array even when there are more dimensions and a term","          like voxel might be more technically correct.","","          Also note that the total size and number of dimensions can have a huge","          impact on memory usage.","","        * `littleEndian`: This boolean option defaults to false and it only","          matters when there are channels of mixed types and at least one of","          them is bigger than 8 bits.  In most common uses, it can be ignored.","","        The internal data structure of Y.Composite.Image is an ArrayBuffer,","        which is like a single-dimensional array of binary numbers.  The","        dimensions and channels are sequentially stacked behind each other.  For","        example, for an image with three channels and dimensions [2, 3] the","        binary data is arranged like this:","","        * pixel 0 at (0, 0) channel 0","        * pixel 0 at (0, 0) channel 1","        * pixel 0 at (0, 0) channel 2","        * pixel 1 at (1, 0) channel 0","        * pixel 1 at (1, 0) channel 1","        * pixel 1 at (1, 0) channel 2","        * pixel 2 at (0, 1) channel 0","        * pixel 2 at (0, 1) channel 1","        * pixel 2 at (0, 1) channel 2","        * pixel 3 at (1, 1) channel 0","        * pixel 3 at (1, 1) channel 1","        * pixel 3 at (1, 1) channel 2","        * pixel 4 at (0, 2) channel 0","        * pixel 4 at (0, 2) channel 1","        * pixel 4 at (0, 2) channel 2","        * pixel 5 at (1, 2) channel 0","        * pixel 5 at (1, 2) channel 1","        * pixel 5 at (1, 2) channel 2","","        Notice that there are two ways to identify a pixel.  A pixel can be","        identified by its dimensional location or by its unique array index.","        This API refers to these values as pixelLocation and pixelIndex.  In","        some places the API may accept them interchangeably.  Accessing pixels","        by pixelIndex is generally more efficient.","        @class Image","        @constructor","        @namespace Composite","        @param {Object} [configuration] A configuration object with the","        following optional parameters:","        @param {[String]} [configuration.channels]","        @param {ArrayBuffer|[Number]} [configuration.data]","        @param {[Number]} [configuration.dimensions]","        @param {Boolean} [configuration.littleEndian]","        */","        _Class = function () {","            this._init.apply(this, arguments);","        };","","    Y.namespace('Composite').Image = Y.mix(_Class, {","        /**","        A static list of all the valid channel data types.","        @property dataTypes","        @final","        @static","        @type Object","        */","        dataTypes: {","            f32: _string_f32,","            f64: _string_f64,","            s16: _string_s16,","            s32: _string_s32,","            s8: _string_s8,","            u16: _string_u16,","            u32: _string_u32,","            u8: _string_u8","        },","        /**","        The channels value to use when custom channels are not passed in to the","        constructor.","        @property defaultChannels","        @static","        @type [String]","        */","        defaultChannels: [","            _string_u8,","            _string_u8,","            _string_u8,","            _string_u8","        ],","        /**","        The dimensions value to use when custom dimensions are not passed in to","        the constructor.","        @property defaultDimensions","        @static","        @type [Number]","        */","        defaultDimensions: [","            512,","            512","        ],","        prototype: {","            /**","            Reset all channel values of all pixels to zero.","            @method clear","            @chainable","            */","            clear: function () {","                var me = this;","","                me._data = new _ArrayBuffer(me.pixelCount * me._pixelSize);","","                return me;","            },","            /**","            Returns an exact copy of this image.","            @method clone","            @return {Composite.Image}","            */","            clone: function () {","                var me = this;","","                return new _Class({","                    channels: me.channels,","                    data: me._data.slice(0),","                    dimensions: me.dimensions,","                    littleEndian: me._littleEndian","                });","            },","            /**","            Call an iteration function for each pixel index in the image.  This","            method is more efficient than `eachPixelLocation` but it does not","            provide pixel locations.","            @method eachPixelIndex","            @chainable","            @param {Function} iterationFunction The iteration function receives","            two arguments:","            @param {Number} iterationFunction.pixelIndex The pixel's unique","            index within the image.","            @param {Composite.Image} iterationFunction.image This image.","            */","            eachPixelIndex: function (iterationFunction) {","                var me = this,","                    pixelCount = me.pixelCount,","                    pixelIndex = 0;","","                for (; pixelIndex < pixelCount; pixelIndex += 1) {","                    iterationFunction(pixelIndex, me);","                }","","                return me;","            },","            /**","            Call an iteration function for each pixel location in the image.","            @method eachPixelLocation","            @chainable","            @param {Function} iterationFunction The iteration function receives","            three arguments:","            @param {[Number]} iterationFunction.pixelLocation An array of","            dimension indicies.  The length of this array will match the number","            of dimensions in the image.","            @param {Number} iterationFunction.pixelIndex The pixel's unique","            index within the image.","            @param {Composite.Image} iterationFunction.image This image.","            */","            eachPixelLocation: function (iterationFunction) {","                var me = this,","                    dimensions = me.dimensions,","","                    dimensionCount = dimensions.length,","                    dimensionIndex = 0,","                    pixelCount = me.pixelCount,","                    pixelIndex = 0,","                    pixelLocation = [];","","                for (; dimensionIndex < dimensionCount; dimensionIndex += 1) {","                    pixelLocation[dimensionIndex] = 0;","                }","","                for (; pixelIndex < pixelCount; pixelIndex += 1) {","                    iterationFunction(pixelLocation.slice(), pixelIndex, me);","","                    for (dimensionIndex = 0; dimensionIndex < dimensionCount; dimensionIndex += 1) {","                        pixelLocation[dimensionIndex] += 1;","","                        if (pixelLocation[dimensionIndex] < dimensions[dimensionIndex]) {","                            break;","                        }","","                        pixelLocation[dimensionIndex] = 0;","                    }","                }","","                return me;","            },","            /**","            Returns a copy of the image data as a regular JavaScript array.","            @method getDataArray","            @return {[Number]}","            */","            getDataArray: function () {","                var me = this,","","                    dataView = me._dataView;","","                return dataView instanceof _DataView ? (function () {","                    var channelCount = me.channels.length,","                        dataArray = [];","","                    me.eachPixelIndex(function (pixelIndex) {","                        for (var channelIndex = 0; channelIndex < channelCount; channelIndex += 1) {","                            dataArray.push(me._getValue(pixelIndex, channelIndex));","                        }","                    });","","                    return dataArray;","                }()) : _YArray(dataView);","            },","            /**","            Returns the pixel index for the given dimension indices.","            @method getPixelIndex","            @param {Number|[Number]} dimensionIndices* The dimensionIndices may","            be provided either as positional arguments or as a single array.","            The number of indices must match the number of dimensions in the","            image.","            @return {Number}","            */","            getPixelIndex: function () {","                return this._getPixelIndex.apply(this, _flatten(arguments));","            },","            /**","            Returns an array of channel values for a specific pixel.","            @method getPixelValues","            @param {Number|[Number]} pixelIndexOrLocation This may be either the","            pixel's unique index within the image or an array of dimension","            indicies.  The length of this array must match the number of","            dimensions in the image.","            @param {[Number]} [channelIndices] By default, all channel values","            are returned in order.  Specific channels may be excluded,","            rearranged, or duplicated by passing in an array of channel indices.","            For example, if the image has four channels, the array [3, 2, 1, 0]","            would retrieve them in reverse order and the array [0, 1, 2] would","            retrieve the first three channels and ignore the fourth.","            @return {[Number]}","            */","            getPixelValues: function (pixelIndexOrLocation, channelIndices) {","                var me = this;","","                return _map(channelIndices || me.channels, channelIndices ? function (channelIndex) {","                    return me.getValue(pixelIndexOrLocation, channelIndex);","                } : function (channelDataType, channelIndex) {","                    return me.getValue(pixelIndexOrLocation, channelIndex);","                });","            },","            /**","            Returns the value from a specific channel of a specific pixel.","            @method getValue","            @param {Number|[Number]} pixelIndexOrLocation This may be either the","            pixel's unique index within the image or an array of dimension","            indicies.  The length of this array must match the number of","            dimensions in the image.","            @param {Number} channelIndex The specific channel index to get.","            @return {Number}","            */","            getValue: function (pixelIndexOrLocation, channelIndex) {","                return this._getValue(typeof pixelIndexOrLocation === _string_number ? pixelIndexOrLocation : this.getPixelIndex(pixelIndexOrLocation), channelIndex);","            },","            /**","            Sets the image data from a regular JavaScript array.  Nothing is","            done to validate the data or the size of the array.  An invalid","            array will probably yield undesired results.","            @method setDataArray","            @chainable","            @param {[Number]} dataArray","            */","            setDataArray: function (dataArray) {","                var me = this,","","                    channelCount = me.channels.length,","                    valueIndex = 0;","","                return me.eachPixelIndex(function (pixelIndex) {","                    for (var channelIndex = 0; channelIndex < channelCount; channelIndex += 1) {","                        me._setValue(pixelIndex, channelIndex, dataArray[valueIndex]);","                        valueIndex += 1;","                    }","                });","            },","            /**","            Set channel values for a specific pixel.","            @method setPixelValues","            @chainable","            @param {Number|[Number]} pixelIndexOrLocation This may be either the","            pixel's unique index within the image or an array of dimension","            indicies.  The length of this array must match the number of","            dimensions in the image.","            @param {[Number]} pixelValues The values to set.","            @param {[Number]} [channelIndices] By default, all channels are set","            in order.  Specific channels may be excluded or rearranged by","            passing in an array of channel indices.  For example, if the image","            has four channels, the array [3, 2, 1, 0] would set them in reverse","            order and the array [2, 3] would set the third and fourth channels","            but ignore the first two.  If a channel is duplicated in this array,","            later values will overwrite previous values.","            */","            setPixelValues: function (pixelIndexOrLocation, pixelValues, channelIndices) {","                var me = this;","","                _each(channelIndices || pixelValues, channelIndices ? function (channelIndex, pixelValueIndex) {","                    me.setValue(pixelIndexOrLocation, channelIndex, pixelValues[pixelValueIndex]);","                } : function (pixelValue, channelIndex) {","                    me.setValue(pixelIndexOrLocation, channelIndex, pixelValue);","                });","","                return me;","            },","            /**","            Sets the value of a specific channel of a specific pixel.","            @method setValue","            @chainable","            @param {Number|[Number]} pixelIndexOrLocation This may be either the","            pixel's unique index within the image or an array of dimension","            indicies.  The length of this array must match the number of","            dimensions in the image.","            @param {Number} channelIndex The specific channel index to set.","            @param {Number} value The value to set.","            */","            setValue: function (pixelIndexOrLocation, channelIndex, value) {","                return this._setValue(typeof pixelIndexOrLocation === _string_number ? pixelIndexOrLocation : this.getPixelIndex(pixelIndexOrLocation), channelIndex, value);","            },","            /**","            Returns a serializable object.  This object can be passed to the","            Y.Composite.Image constructor to recreate this image.","            @method toJSON","            @return {Object}","            */","            toJSON: function () {","                var me = this,","","                    littleEndian = me._littleEndian,","                    object = {","                        channels: me.channels,","                        data: me.getDataArray(),","                        dimensions: me.dimensions","                    };","","                if (littleEndian) {","                    object.littleEndian = littleEndian;","                }","","                return object;","            },","            /**","            Returns a string describing this image.","            @method toString","            @return {String}","            */","            toString: function () {","                return 'image[' + this.dimensions.join('x') + '] ' + this.channels;","            },","            /**","            Returns true if the ArrayBuffer has the correct byteLength for this","            image.","            @method validate","            @param {ArrayBuffer} [data] The ArrayBuffer to test.  If left","            undefined, this image's internal ArrayBuffer is used.","            @return {Boolean}","            */","            validate: function (data) {","                data = data || this._data;","                return data instanceof _ArrayBuffer && data.byteLength === this.pixelCount * this._pixelSize;","            },","            /**","            This method is called by the constructor.  It is here so that the","            initialization process can be hooked, overridden, or extended.","            @method _init","            @param {Object} configuration See the constructor's documentation","            for details.","            @protected","            */","            _init: function (configuration) {","                configuration = configuration || {};","","                var me = this,","","                    channels = _freeze((configuration.channels || _Class.defaultChannels).slice()),","                    channelOffsets = [],","                    dataType,","                    dimensions = _freeze((configuration.dimensions || _Class.defaultDimensions).slice()),","                    pixelCount = _reduce(dimensions, 1, function (pixelCount, dimension) {","                        return pixelCount * dimension;","                    }),","                    pixelSize = _reduce(channels, 0, function (pixelSize, channelDataType) {","                        channelOffsets.push(pixelSize);","","                        if (!dataType && dataType !== null) {","                            dataType = channelDataType;","                        } else if (dataType && dataType !== channelDataType) {","                            dataType = null;","                        }","","                        return pixelSize + (+channelDataType.substr(1)) / 8;","                    }),","","                    configurationData = configuration.data,","                    data;","","                _defineProperties(me, {","                    /**","                    The channels property is an array of strings representing","                    each channel's data type.  The number of channels in the","                    image is determined by the length of this array.  This is a","                    read only copy of the channels array that was passed to the","                    constructor.","                    @property channels","                    @final","                    @type [String]","                    */","                    channels: {","                        enumerable: _true,","                        value: channels","                    },","                    /**","                    The dimensions property is an array of numbers representing","                    the length of each dimension.  The number of dimensions in","                    the image is determined by the length of this array.  This","                    is a read only copy of the dimensions array that was passed","                    to the constructor.","                    @property dimensions","                    @final","                    @type [Number]","                    */","                    dimensions: {","                        enumerable: _true,","                        value: dimensions","                    },","                    /**","                    The total number of pixels in the image.","                    @property pixelCount","                    @final","                    @type Number","                    */","                    pixelCount: {","                        enumberable: _true,","                        value: pixelCount","                    },","                    /**","                    The _channelOffsets property is a read only array of numbers","                    describing the byte offset of each specific channel from the","                    beginning of a pixel.","                    @property _channelOffsets","                    @final","                    @protected","                    @type [Number]","                    */","                    _channelOffsets: {","                        enumerable: _true,","                        value: _freeze(channelOffsets)","                    },","                    /**","                    The ArrayBuffer that stores the image's data.","                    @property _data","                    @protected","                    @type ArrayBuffer","                    */","                    _data: {","                        enumerable: _true,","                        get: function () {","                            return data;","                        },","                        set: function (newData) {","                            data = newData;","","                            /**","                            The ArrayBufferView used to access the image's data.","                            If the image's channel types are homogeneous, this","                            will be an instance of the specific ArrayBufferView","                            class that matches the data type.  This will be an","                            instance of DataView if the image's channel types","                            are mixed.","                            @property _dataView","                            @protected","                            @type ArrayBufferView","                            */","                            me._dataView = _Class._getDataView(data, dataType);","                        }","                    },","                    /**","                    If the image's channel types are homogeneous, this will be","                    the common channel type.  This will be null if the image's","                    channel types are mixed.","                    @property _dataType","                    @final","                    @protected","                    @type String","                    */","                    _dataType: {","                        enumerable: _true,","                        value: dataType","                    },","                    /**","                    The size of each pixel in bytes.","                    @property _pixelSize","                    @final","                    @protected","                    @type Number","                    */","                    _pixelSize: {","                        enumerable: _true,","                        value: pixelSize","                    }","                });","","                /**","                Returns the pixel index for the given dimension indices.","                @method _getPixelIndex","                @param {Number} dimensionIndices* The number of arguments must","                match the number of dimensions in the image.","                @protected","                @return {Number}","                */","                me._getPixelIndex = _Class._getGetPixelIndexMethod.apply(me, dimensions);","","                /**","                Returns the value from a specific channel of a specific pixel.","                @method _getValue","                @param {Number} pixelIndex","                @param {Number} channelIndex","                @protected","                @return {Number}","                */","                me._getValue = _Class._getGetValueMethod(channelOffsets, pixelSize, dataType);","","                /**","                Sets the value of a specific channel of a specific pixel.","                @method _setValue","                @chainable","                @param {Number} pixelIndex","                @param {Number} channelIndex","                @param {Number} value","                @protected","                */","                me._setValue = _Class._getSetValueMethod(channelOffsets, pixelSize, dataType);","","                if (me.validate(configurationData)) {","                    me._data = configurationData;","                } else {","                    me.clear();","","                    if (_isArray(configurationData)) {","                        me.setDataArray(configurationData);","                    }","                }","","                /**","                The boolean value of the littleEndian parameter that will be","                passed to a DataView's accessor methods.","                @property _littleEndian","                @final","                @protected","                @type Boolean","                */","                me._littleEndian = !!configuration.littleEndian;","            }","        },","        /**","        Returns the correct ArrayBufferView object for the given ArrayBuffer and","        dataType.","        @method _getDataView","        @param {ArrayBuffer} data","        @param {String} dataType","        @protected","        @return {ArrayBufferView}","        @static","        */","        _getDataView: function (data, dataType) {","            return new (_Class._getDataViewConstructor(dataType))(data);","        },","        /**","        Returns the correct ArrayBufferView constructor function for the given","        dataType.","        @method _getDataViewConstructor","        @param {String} dataType","        @protected","        @return {Function}","        @static","        */","        _getDataViewConstructor: _cached(function (dataType) {","            switch (dataType) {","                case _string_f32:","                    return Float32Array;","                case _string_f64:","                    return Float64Array;","                case _string_s16:","                    return Int16Array;","                case _string_s32:","                    return Int32Array;","                case _string_s8:","                    return Int8Array;","                case _string_u16:","                    return Uint16Array;","                case _string_u32:","                    return Uint32Array;","                case _string_u8:","                    return Uint8ClampedArray;","            }","","            return _DataView;","        }),","        /**","        Returns a getPixelIndex function that works with the given image","        dimensions.","        @method _getGetPixelIndexMethod","        @param {Number} dimensionLength*","        @protected","        @return {Function}","        @static","        */","        _getGetPixelIndexMethod: _cached(function () {","            var dimensionLengths = arguments,","","                dimensionCount = dimensionLengths.length;","","            return _cached(function () {","                var dimensionIndices = arguments,","                    i,","                    index = 0,","                    j,","                    offset;","","                for (i = 0; i < dimensionCount; i += 1) {","                    offset = dimensionIndices[i];","","                    for (j = i - 1; j >= 0; j -= 1) {","                        offset *= dimensionLengths[j];","                    }","","                    index += offset;","                }","","                return index;","            });","        }),","        /**","        Returns a getValue function that works with the given channelOffsets,","        pixelSize, and dataType.","        @method _getGetValueMethod","        @param {[Number]} channelOffsets","        @param {Number} pixelSize","        @param {String} dataType","        @protected","        @return {Function}","        @static","        */","        _getGetValueMethod: _cached(function (channelOffsets, pixelSize, dataType) {","            var channelCount = channelOffsets.length;","","            return dataType ? function (pixelIndex, channelIndex) {","                return this._dataView[pixelIndex * channelCount + channelIndex];","            } : function (pixelIndex, channelIndex) {","                return this._dataView['get' + _Class._getTypeName(this.channels[channelIndex])](pixelIndex * pixelSize + channelOffsets[channelIndex], this.littleEndian);","            };","        }),","        /**","        Returns a setValue function that works with the given channelOffsets,","        pixelSize, and dataType.","        @method _getSetValueMethod","        @param {[Number]} channelOffsets","        @param {Number} pixelSize","        @param {String} dataType","        @protected","        @return {Function}","        @static","        */","        _getSetValueMethod: _cached(function (channelOffsets, pixelSize, dataType) {","            var channelCount = channelOffsets.length;","","            return dataType ? function (pixelIndex, channelIndex, value) {","                this._dataView[pixelIndex * channelCount + channelIndex] = value;","                return this;","            } : function (pixelIndex, channelIndex, value) {","                var me = this;","                me._dataView['set' + _Class._getTypeName(me.channels[channelIndex])](pixelIndex * pixelSize + channelOffsets[channelIndex], value, me.littleEndian);","                return me;","            };","        }),","        /**","        Returns a type name that matches a DataView accessor method for the","        given dataType.","        @method _getTypeName","        @param {String} dataType","        @protected","        @return {String}","        @static","        */","        _getTypeName: _cached(function (dataType) {","            var type = dataType.charAt(0);","            return (type === 'f' ? 'Float' : (type === 's' ? 'Int' : 'Uint')) + dataType.substr(1);","        })","    }, _true);","}(Y));","","}, 'gallery-2013.05.29-23-38', {\"requires\": [\"array-extras\"]});","","}());"]};
}
var __cov_v9G7eEKgLq_tOyiPp8yhuQ = __coverage__['build/gallery-composite-image/gallery-composite-image.js'];
__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['1']++;YUI.add('gallery-composite-image',function(Y,NAME){__cov_v9G7eEKgLq_tOyiPp8yhuQ.f['1']++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['2']++;(function(Y){__cov_v9G7eEKgLq_tOyiPp8yhuQ.f['2']++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['3']++;'use strict';__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['4']++;var _string_f32='f32',_string_f64='f64',_string_number='number',_string_s16='s16',_string_s32='s32',_string_s8='s8',_string_u16='u16',_string_u32='u32',_string_u8='u8',_true=true,_ArrayBuffer=ArrayBuffer,_DataView=DataView,_Lang=Y.Lang,_Object=Object,_YArray=Y.Array,_cached=Y.cached,_defineProperties=_Object.defineProperties,_each=_YArray.each,_flatten=_YArray.flatten,_freeze=_Object.freeze,_isArray=_Lang.isArray,_map=_YArray.map,_reduce=_YArray.reduce,_Class=function(){__cov_v9G7eEKgLq_tOyiPp8yhuQ.f['3']++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['5']++;this._init.apply(this,arguments);};__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['6']++;Y.namespace('Composite').Image=Y.mix(_Class,{dataTypes:{f32:_string_f32,f64:_string_f64,s16:_string_s16,s32:_string_s32,s8:_string_s8,u16:_string_u16,u32:_string_u32,u8:_string_u8},defaultChannels:[_string_u8,_string_u8,_string_u8,_string_u8],defaultDimensions:[512,512],prototype:{clear:function(){__cov_v9G7eEKgLq_tOyiPp8yhuQ.f['4']++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['7']++;var me=this;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['8']++;me._data=new _ArrayBuffer(me.pixelCount*me._pixelSize);__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['9']++;return me;},clone:function(){__cov_v9G7eEKgLq_tOyiPp8yhuQ.f['5']++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['10']++;var me=this;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['11']++;return new _Class({channels:me.channels,data:me._data.slice(0),dimensions:me.dimensions,littleEndian:me._littleEndian});},eachPixelIndex:function(iterationFunction){__cov_v9G7eEKgLq_tOyiPp8yhuQ.f['6']++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['12']++;var me=this,pixelCount=me.pixelCount,pixelIndex=0;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['13']++;for(;pixelIndex<pixelCount;pixelIndex+=1){__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['14']++;iterationFunction(pixelIndex,me);}__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['15']++;return me;},eachPixelLocation:function(iterationFunction){__cov_v9G7eEKgLq_tOyiPp8yhuQ.f['7']++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['16']++;var me=this,dimensions=me.dimensions,dimensionCount=dimensions.length,dimensionIndex=0,pixelCount=me.pixelCount,pixelIndex=0,pixelLocation=[];__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['17']++;for(;dimensionIndex<dimensionCount;dimensionIndex+=1){__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['18']++;pixelLocation[dimensionIndex]=0;}__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['19']++;for(;pixelIndex<pixelCount;pixelIndex+=1){__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['20']++;iterationFunction(pixelLocation.slice(),pixelIndex,me);__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['21']++;for(dimensionIndex=0;dimensionIndex<dimensionCount;dimensionIndex+=1){__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['22']++;pixelLocation[dimensionIndex]+=1;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['23']++;if(pixelLocation[dimensionIndex]<dimensions[dimensionIndex]){__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['1'][0]++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['24']++;break;}else{__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['1'][1]++;}__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['25']++;pixelLocation[dimensionIndex]=0;}}__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['26']++;return me;},getDataArray:function(){__cov_v9G7eEKgLq_tOyiPp8yhuQ.f['8']++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['27']++;var me=this,dataView=me._dataView;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['28']++;return dataView instanceof _DataView?(__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['2'][0]++,function(){__cov_v9G7eEKgLq_tOyiPp8yhuQ.f['9']++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['29']++;var channelCount=me.channels.length,dataArray=[];__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['30']++;me.eachPixelIndex(function(pixelIndex){__cov_v9G7eEKgLq_tOyiPp8yhuQ.f['10']++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['31']++;for(var channelIndex=0;channelIndex<channelCount;channelIndex+=1){__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['32']++;dataArray.push(me._getValue(pixelIndex,channelIndex));}});__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['33']++;return dataArray;}()):(__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['2'][1]++,_YArray(dataView));},getPixelIndex:function(){__cov_v9G7eEKgLq_tOyiPp8yhuQ.f['11']++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['34']++;return this._getPixelIndex.apply(this,_flatten(arguments));},getPixelValues:function(pixelIndexOrLocation,channelIndices){__cov_v9G7eEKgLq_tOyiPp8yhuQ.f['12']++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['35']++;var me=this;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['36']++;return _map((__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['3'][0]++,channelIndices)||(__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['3'][1]++,me.channels),channelIndices?(__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['4'][0]++,function(channelIndex){__cov_v9G7eEKgLq_tOyiPp8yhuQ.f['13']++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['37']++;return me.getValue(pixelIndexOrLocation,channelIndex);}):(__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['4'][1]++,function(channelDataType,channelIndex){__cov_v9G7eEKgLq_tOyiPp8yhuQ.f['14']++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['38']++;return me.getValue(pixelIndexOrLocation,channelIndex);}));},getValue:function(pixelIndexOrLocation,channelIndex){__cov_v9G7eEKgLq_tOyiPp8yhuQ.f['15']++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['39']++;return this._getValue(typeof pixelIndexOrLocation===_string_number?(__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['5'][0]++,pixelIndexOrLocation):(__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['5'][1]++,this.getPixelIndex(pixelIndexOrLocation)),channelIndex);},setDataArray:function(dataArray){__cov_v9G7eEKgLq_tOyiPp8yhuQ.f['16']++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['40']++;var me=this,channelCount=me.channels.length,valueIndex=0;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['41']++;return me.eachPixelIndex(function(pixelIndex){__cov_v9G7eEKgLq_tOyiPp8yhuQ.f['17']++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['42']++;for(var channelIndex=0;channelIndex<channelCount;channelIndex+=1){__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['43']++;me._setValue(pixelIndex,channelIndex,dataArray[valueIndex]);__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['44']++;valueIndex+=1;}});},setPixelValues:function(pixelIndexOrLocation,pixelValues,channelIndices){__cov_v9G7eEKgLq_tOyiPp8yhuQ.f['18']++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['45']++;var me=this;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['46']++;_each((__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['6'][0]++,channelIndices)||(__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['6'][1]++,pixelValues),channelIndices?(__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['7'][0]++,function(channelIndex,pixelValueIndex){__cov_v9G7eEKgLq_tOyiPp8yhuQ.f['19']++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['47']++;me.setValue(pixelIndexOrLocation,channelIndex,pixelValues[pixelValueIndex]);}):(__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['7'][1]++,function(pixelValue,channelIndex){__cov_v9G7eEKgLq_tOyiPp8yhuQ.f['20']++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['48']++;me.setValue(pixelIndexOrLocation,channelIndex,pixelValue);}));__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['49']++;return me;},setValue:function(pixelIndexOrLocation,channelIndex,value){__cov_v9G7eEKgLq_tOyiPp8yhuQ.f['21']++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['50']++;return this._setValue(typeof pixelIndexOrLocation===_string_number?(__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['8'][0]++,pixelIndexOrLocation):(__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['8'][1]++,this.getPixelIndex(pixelIndexOrLocation)),channelIndex,value);},toJSON:function(){__cov_v9G7eEKgLq_tOyiPp8yhuQ.f['22']++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['51']++;var me=this,littleEndian=me._littleEndian,object={channels:me.channels,data:me.getDataArray(),dimensions:me.dimensions};__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['52']++;if(littleEndian){__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['9'][0]++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['53']++;object.littleEndian=littleEndian;}else{__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['9'][1]++;}__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['54']++;return object;},toString:function(){__cov_v9G7eEKgLq_tOyiPp8yhuQ.f['23']++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['55']++;return'image['+this.dimensions.join('x')+'] '+this.channels;},validate:function(data){__cov_v9G7eEKgLq_tOyiPp8yhuQ.f['24']++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['56']++;data=(__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['10'][0]++,data)||(__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['10'][1]++,this._data);__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['57']++;return(__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['11'][0]++,data instanceof _ArrayBuffer)&&(__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['11'][1]++,data.byteLength===this.pixelCount*this._pixelSize);},_init:function(configuration){__cov_v9G7eEKgLq_tOyiPp8yhuQ.f['25']++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['58']++;configuration=(__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['12'][0]++,configuration)||(__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['12'][1]++,{});__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['59']++;var me=this,channels=_freeze(((__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['13'][0]++,configuration.channels)||(__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['13'][1]++,_Class.defaultChannels)).slice()),channelOffsets=[],dataType,dimensions=_freeze(((__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['14'][0]++,configuration.dimensions)||(__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['14'][1]++,_Class.defaultDimensions)).slice()),pixelCount=_reduce(dimensions,1,function(pixelCount,dimension){__cov_v9G7eEKgLq_tOyiPp8yhuQ.f['26']++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['60']++;return pixelCount*dimension;}),pixelSize=_reduce(channels,0,function(pixelSize,channelDataType){__cov_v9G7eEKgLq_tOyiPp8yhuQ.f['27']++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['61']++;channelOffsets.push(pixelSize);__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['62']++;if((__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['16'][0]++,!dataType)&&(__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['16'][1]++,dataType!==null)){__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['15'][0]++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['63']++;dataType=channelDataType;}else{__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['15'][1]++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['64']++;if((__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['18'][0]++,dataType)&&(__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['18'][1]++,dataType!==channelDataType)){__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['17'][0]++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['65']++;dataType=null;}else{__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['17'][1]++;}}__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['66']++;return pixelSize+ +channelDataType.substr(1)/8;}),configurationData=configuration.data,data;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['67']++;_defineProperties(me,{channels:{enumerable:_true,value:channels},dimensions:{enumerable:_true,value:dimensions},pixelCount:{enumberable:_true,value:pixelCount},_channelOffsets:{enumerable:_true,value:_freeze(channelOffsets)},_data:{enumerable:_true,get:function(){__cov_v9G7eEKgLq_tOyiPp8yhuQ.f['28']++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['68']++;return data;},set:function(newData){__cov_v9G7eEKgLq_tOyiPp8yhuQ.f['29']++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['69']++;data=newData;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['70']++;me._dataView=_Class._getDataView(data,dataType);}},_dataType:{enumerable:_true,value:dataType},_pixelSize:{enumerable:_true,value:pixelSize}});__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['71']++;me._getPixelIndex=_Class._getGetPixelIndexMethod.apply(me,dimensions);__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['72']++;me._getValue=_Class._getGetValueMethod(channelOffsets,pixelSize,dataType);__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['73']++;me._setValue=_Class._getSetValueMethod(channelOffsets,pixelSize,dataType);__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['74']++;if(me.validate(configurationData)){__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['19'][0]++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['75']++;me._data=configurationData;}else{__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['19'][1]++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['76']++;me.clear();__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['77']++;if(_isArray(configurationData)){__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['20'][0]++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['78']++;me.setDataArray(configurationData);}else{__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['20'][1]++;}}__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['79']++;me._littleEndian=!!configuration.littleEndian;}},_getDataView:function(data,dataType){__cov_v9G7eEKgLq_tOyiPp8yhuQ.f['30']++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['80']++;return new(_Class._getDataViewConstructor(dataType))(data);},_getDataViewConstructor:_cached(function(dataType){__cov_v9G7eEKgLq_tOyiPp8yhuQ.f['31']++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['81']++;switch(dataType){case _string_f32:__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['21'][0]++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['82']++;return Float32Array;case _string_f64:__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['21'][1]++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['83']++;return Float64Array;case _string_s16:__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['21'][2]++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['84']++;return Int16Array;case _string_s32:__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['21'][3]++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['85']++;return Int32Array;case _string_s8:__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['21'][4]++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['86']++;return Int8Array;case _string_u16:__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['21'][5]++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['87']++;return Uint16Array;case _string_u32:__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['21'][6]++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['88']++;return Uint32Array;case _string_u8:__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['21'][7]++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['89']++;return Uint8ClampedArray;}__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['90']++;return _DataView;}),_getGetPixelIndexMethod:_cached(function(){__cov_v9G7eEKgLq_tOyiPp8yhuQ.f['32']++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['91']++;var dimensionLengths=arguments,dimensionCount=dimensionLengths.length;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['92']++;return _cached(function(){__cov_v9G7eEKgLq_tOyiPp8yhuQ.f['33']++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['93']++;var dimensionIndices=arguments,i,index=0,j,offset;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['94']++;for(i=0;i<dimensionCount;i+=1){__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['95']++;offset=dimensionIndices[i];__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['96']++;for(j=i-1;j>=0;j-=1){__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['97']++;offset*=dimensionLengths[j];}__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['98']++;index+=offset;}__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['99']++;return index;});}),_getGetValueMethod:_cached(function(channelOffsets,pixelSize,dataType){__cov_v9G7eEKgLq_tOyiPp8yhuQ.f['34']++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['100']++;var channelCount=channelOffsets.length;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['101']++;return dataType?(__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['22'][0]++,function(pixelIndex,channelIndex){__cov_v9G7eEKgLq_tOyiPp8yhuQ.f['35']++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['102']++;return this._dataView[pixelIndex*channelCount+channelIndex];}):(__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['22'][1]++,function(pixelIndex,channelIndex){__cov_v9G7eEKgLq_tOyiPp8yhuQ.f['36']++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['103']++;return this._dataView['get'+_Class._getTypeName(this.channels[channelIndex])](pixelIndex*pixelSize+channelOffsets[channelIndex],this.littleEndian);});}),_getSetValueMethod:_cached(function(channelOffsets,pixelSize,dataType){__cov_v9G7eEKgLq_tOyiPp8yhuQ.f['37']++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['104']++;var channelCount=channelOffsets.length;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['105']++;return dataType?(__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['23'][0]++,function(pixelIndex,channelIndex,value){__cov_v9G7eEKgLq_tOyiPp8yhuQ.f['38']++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['106']++;this._dataView[pixelIndex*channelCount+channelIndex]=value;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['107']++;return this;}):(__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['23'][1]++,function(pixelIndex,channelIndex,value){__cov_v9G7eEKgLq_tOyiPp8yhuQ.f['39']++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['108']++;var me=this;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['109']++;me._dataView['set'+_Class._getTypeName(me.channels[channelIndex])](pixelIndex*pixelSize+channelOffsets[channelIndex],value,me.littleEndian);__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['110']++;return me;});}),_getTypeName:_cached(function(dataType){__cov_v9G7eEKgLq_tOyiPp8yhuQ.f['40']++;__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['111']++;var type=dataType.charAt(0);__cov_v9G7eEKgLq_tOyiPp8yhuQ.s['112']++;return(type==='f'?(__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['24'][0]++,'Float'):(__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['24'][1]++,type==='s'?(__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['25'][0]++,'Int'):(__cov_v9G7eEKgLq_tOyiPp8yhuQ.b['25'][1]++,'Uint')))+dataType.substr(1);})},_true);}(Y));},'gallery-2013.05.29-23-38',{'requires':['array-extras']});
