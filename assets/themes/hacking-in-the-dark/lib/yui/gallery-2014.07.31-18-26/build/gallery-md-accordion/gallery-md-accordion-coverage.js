if (typeof __coverage__ === 'undefined') { __coverage__ = {}; }
if (!__coverage__['build/gallery-md-accordion/gallery-md-accordion.js']) {
   __coverage__['build/gallery-md-accordion/gallery-md-accordion.js'] = {"path":"build/gallery-md-accordion/gallery-md-accordion.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":32},"end":{"line":1,"column":51}}},"2":{"name":"(anonymous_2)","line":55,"loc":{"start":{"line":55,"column":24},"end":{"line":55,"column":36}}},"3":{"name":"(anonymous_3)","line":65,"loc":{"start":{"line":65,"column":18},"end":{"line":65,"column":30}}},"4":{"name":"(anonymous_4)","line":77,"loc":{"start":{"line":77,"column":24},"end":{"line":77,"column":45}}},"5":{"name":"(anonymous_5)","line":93,"loc":{"start":{"line":93,"column":21},"end":{"line":93,"column":38}}},"6":{"name":"(anonymous_6)","line":102,"loc":{"start":{"line":102,"column":23},"end":{"line":102,"column":40}}},"7":{"name":"(anonymous_7)","line":111,"loc":{"start":{"line":111,"column":26},"end":{"line":111,"column":43}}},"8":{"name":"(anonymous_8)","line":129,"loc":{"start":{"line":129,"column":25},"end":{"line":129,"column":42}}},"9":{"name":"(anonymous_9)","line":140,"loc":{"start":{"line":140,"column":16},"end":{"line":140,"column":27}}},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":50},"end":{"line":144,"column":61}}},"11":{"name":"(anonymous_11)","line":153,"loc":{"start":{"line":153,"column":18},"end":{"line":153,"column":30}}},"12":{"name":"(anonymous_12)","line":157,"loc":{"start":{"line":157,"column":50},"end":{"line":157,"column":61}}},"13":{"name":"(anonymous_13)","line":166,"loc":{"start":{"line":166,"column":16},"end":{"line":166,"column":28}}},"14":{"name":"(anonymous_14)","line":177,"loc":{"start":{"line":177,"column":27},"end":{"line":177,"column":41}}},"15":{"name":"(anonymous_15)","line":196,"loc":{"start":{"line":196,"column":15},"end":{"line":196,"column":27}}},"16":{"name":"(anonymous_16)","line":322,"loc":{"start":{"line":322,"column":51},"end":{"line":322,"column":65}}},"17":{"name":"(anonymous_17)","line":325,"loc":{"start":{"line":325,"column":26},"end":{"line":325,"column":43}}},"18":{"name":"(anonymous_18)","line":340,"loc":{"start":{"line":340,"column":47},"end":{"line":340,"column":61}}},"19":{"name":"(anonymous_19)","line":353,"loc":{"start":{"line":353,"column":26},"end":{"line":353,"column":43}}},"20":{"name":"(anonymous_20)","line":354,"loc":{"start":{"line":354,"column":22},"end":{"line":354,"column":39}}},"21":{"name":"(anonymous_21)","line":364,"loc":{"start":{"line":364,"column":25},"end":{"line":364,"column":42}}},"22":{"name":"(anonymous_22)","line":365,"loc":{"start":{"line":365,"column":22},"end":{"line":365,"column":39}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":462,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":13}},"3":{"start":{"line":8,"column":0},"end":{"line":26,"column":14}},"4":{"start":{"line":36,"column":0},"end":{"line":302,"column":2}},"5":{"start":{"line":66,"column":12},"end":{"line":66,"column":57}},"6":{"start":{"line":67,"column":12},"end":{"line":67,"column":93}},"7":{"start":{"line":68,"column":12},"end":{"line":68,"column":32}},"8":{"start":{"line":78,"column":12},"end":{"line":80,"column":13}},"9":{"start":{"line":79,"column":16},"end":{"line":79,"column":23}},"10":{"start":{"line":81,"column":12},"end":{"line":85,"column":13}},"11":{"start":{"line":82,"column":16},"end":{"line":82,"column":30}},"12":{"start":{"line":84,"column":16},"end":{"line":84,"column":32}},"13":{"start":{"line":94,"column":12},"end":{"line":94,"column":46}},"14":{"start":{"line":103,"column":12},"end":{"line":103,"column":45}},"15":{"start":{"line":112,"column":12},"end":{"line":112,"column":48}},"16":{"start":{"line":113,"column":12},"end":{"line":121,"column":13}},"17":{"start":{"line":114,"column":16},"end":{"line":120,"column":17}},"18":{"start":{"line":115,"column":20},"end":{"line":117,"column":23}},"19":{"start":{"line":119,"column":20},"end":{"line":119,"column":49}},"20":{"start":{"line":130,"column":12},"end":{"line":134,"column":13}},"21":{"start":{"line":131,"column":16},"end":{"line":131,"column":39}},"22":{"start":{"line":133,"column":16},"end":{"line":133,"column":39}},"23":{"start":{"line":141,"column":12},"end":{"line":142,"column":39}},"24":{"start":{"line":143,"column":12},"end":{"line":143,"column":60}},"25":{"start":{"line":144,"column":12},"end":{"line":146,"column":15}},"26":{"start":{"line":145,"column":16},"end":{"line":145,"column":63}},"27":{"start":{"line":147,"column":12},"end":{"line":147,"column":45}},"28":{"start":{"line":154,"column":12},"end":{"line":155,"column":39}},"29":{"start":{"line":156,"column":12},"end":{"line":156,"column":59}},"30":{"start":{"line":157,"column":12},"end":{"line":159,"column":15}},"31":{"start":{"line":158,"column":16},"end":{"line":158,"column":64}},"32":{"start":{"line":160,"column":12},"end":{"line":160,"column":46}},"33":{"start":{"line":167,"column":12},"end":{"line":167,"column":52}},"34":{"start":{"line":178,"column":12},"end":{"line":180,"column":13}},"35":{"start":{"line":179,"column":16},"end":{"line":179,"column":30}},"36":{"start":{"line":197,"column":12},"end":{"line":197,"column":35}},"37":{"start":{"line":310,"column":0},"end":{"line":445,"column":2}},"38":{"start":{"line":323,"column":12},"end":{"line":323,"column":34}},"39":{"start":{"line":324,"column":12},"end":{"line":330,"column":13}},"40":{"start":{"line":325,"column":16},"end":{"line":329,"column":19}},"41":{"start":{"line":326,"column":20},"end":{"line":328,"column":21}},"42":{"start":{"line":327,"column":24},"end":{"line":327,"column":41}},"43":{"start":{"line":341,"column":12},"end":{"line":341,"column":34}},"44":{"start":{"line":342,"column":12},"end":{"line":345,"column":13}},"45":{"start":{"line":343,"column":16},"end":{"line":343,"column":35}},"46":{"start":{"line":344,"column":16},"end":{"line":344,"column":32}},"47":{"start":{"line":354,"column":12},"end":{"line":356,"column":15}},"48":{"start":{"line":355,"column":16},"end":{"line":355,"column":45}},"49":{"start":{"line":365,"column":12},"end":{"line":367,"column":15}},"50":{"start":{"line":366,"column":16},"end":{"line":366,"column":44}}},"branchMap":{"1":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":12},"end":{"line":78,"column":12}},{"start":{"line":78,"column":12},"end":{"line":78,"column":12}}]},"2":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":12},"end":{"line":81,"column":12}},{"start":{"line":81,"column":12},"end":{"line":81,"column":12}}]},"3":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":12},"end":{"line":113,"column":12}},{"start":{"line":113,"column":12},"end":{"line":113,"column":12}}]},"4":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":16},"end":{"line":114,"column":16}},{"start":{"line":114,"column":16},"end":{"line":114,"column":16}}]},"5":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":12},"end":{"line":130,"column":12}},{"start":{"line":130,"column":12},"end":{"line":130,"column":12}}]},"6":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":12},"end":{"line":178,"column":12}},{"start":{"line":178,"column":12},"end":{"line":178,"column":12}}]},"7":{"line":324,"type":"if","locations":[{"start":{"line":324,"column":12},"end":{"line":324,"column":12}},{"start":{"line":324,"column":12},"end":{"line":324,"column":12}}]},"8":{"line":324,"type":"binary-expr","locations":[{"start":{"line":324,"column":16},"end":{"line":324,"column":25}},{"start":{"line":324,"column":30},"end":{"line":324,"column":53}}]},"9":{"line":326,"type":"if","locations":[{"start":{"line":326,"column":20},"end":{"line":326,"column":20}},{"start":{"line":326,"column":20},"end":{"line":326,"column":20}}]},"10":{"line":326,"type":"binary-expr","locations":[{"start":{"line":326,"column":24},"end":{"line":326,"column":39}},{"start":{"line":326,"column":43},"end":{"line":326,"column":62}}]},"11":{"line":342,"type":"if","locations":[{"start":{"line":342,"column":12},"end":{"line":342,"column":12}},{"start":{"line":342,"column":12},"end":{"line":342,"column":12}}]}},"code":["(function () { YUI.add('gallery-md-accordion', function (Y, NAME) {","","/**","* The accordion module creates a control with titles and expandable sections for each","* @module gallery-md-accordion","*/","\"use strict\";","var Lang = Y.Lang,","","    BBX = 'boundingBox',","    BODY = Y.WidgetStdMod.BODY,","    HEADER = Y.WidgetStdMod.HEADER,","    EXPANDED = 'expanded',","    EXPANDING = 'expanding',","    COLLAPSED = 'collapsed',","    COLLAPSING = 'collapsing',","    LABEL = 'label',","    CONTENT = 'content',","    ICON = 'icon',","    STATUS = 'status',","    CLOSE = 'close',","    PANEL_CLOSE = 'panelClose',","    MULTI_EXPAND = 'multiExpand',","    RESIZEABLE = 'resizeable',","    CLOSEABLE = 'closeable',","    UI = 'ui';","/**"," * The AccordionPanel class represents one of the panels within an accordion"," * @class AccordionPanel"," * @extends Widget"," * @uses WidgetChild, WidgetStdMod, MakeNode"," * @constructor"," * @param cfg {object} (optional) configuration attributes"," */","","Y.AccordionPanel = Y.Base.create(","    'accordionPanel',","    Y.Widget,","    [Y.WidgetChild,Y.WidgetStdMod,Y.MakeNode],","    {","        /**","         * With the accordion panel container filled with with WidgetStdMod divs","         * it seems like too much to have a separate contentBox","         * @property CONTENT_TEMPLATE","         * @value null","         * @protected","         */","        CONTENT_TEMPLATE: null,","        /**","         * This is an override of WidgetStdMod method to prevent it from re-rendering the","         * three sections again and again and wiping out the resize handles","         * @method _syncUIStdMod","         * @protected","         */","        _syncUIStdMod : function () {","        },","","        /**","         * Adds the resizer to the body of the three section StdMod","         * and creates a container for the actual content within","         * @method renderUI","         * @protected","         */","","        renderUI: function () {","            this.setStdModContent(BODY,this._makeNode());","            this.setStdModContent(HEADER, this._makeNode(Y.AccordionPanel._HEADER_TEMPLATE));","            this._locateNodes();","        },","","        /**","         * Listener for the after Expanded change event, toggles the panel","         * @method _afterExpanded","         * @param ev {EventFacade}","         * @private","         */","        _uiSetExpanded: function(value, src) {","            if (src === UI) {","                return;","            }","            if (value) {","                this.expand();","            } else {","                this.collapse();","            }","        },","        /**","         * Sets the label on the header of this panel","         * @method _uiSetLabel","         * @param value {String} text to be shown","         * @private","         */","        _uiSetLabel: function (value) {","            this._labelNode.setContent(value);","        },","        /**","         * Sets the content on this panel","         * @method _uiSetContent","         * @param value {String | Node} content to be shown","         * @private","         */","        _uiSetContent: function (value) {","            this._bodyNode.setContent(value);","        },","        /**","         * Plugs/unplugs the resize-plugin (if available) in response to the resizeable attribute","         * @method _uiSetResizeable","         * @param value {Boolean} new value for the resizeable attribute","         * @private","         */","        _uiSetResizeable: function (value) {","            var body = this.getStdModNode(BODY);","            if (Y.Plugin.Resize) {","                if (value) {","                    body.plug(Y.Plugin.Resize, {","                        handles:['b']","                    });","                } else {","                    body.unplug(Y.Plugin.Resize);","                }","            }","        },","        /**","         * Sets the close icon visible or not depending on the attribute <code>closeable</code>","         * @method _uiSetCloseable","         * @param value {Boolean} new value for the closeeable attribute","         * @private","         */","        _uiSetCloseable: function (value) {","            if (value) {","                this._closeNode.show();","            } else {","                this._closeNode.hide();","            }","        },","        /**","         * Expands this panel","         * @method expand","         */","        expand: function() {","            var bbx = this.get(BBX),","                cns = this._classNames;","            bbx.replaceClass(cns[COLLAPSED],cns[EXPANDING]);","            this.getStdModNode(BODY).show(true,{},function() {","                bbx.replaceClass(cns[EXPANDING],cns[EXPANDED]);","            });","            this.set(EXPANDED,true,{src:UI});","        },","        /**","         * Collapses this panel","         * @method collapse","         */","        collapse: function () {","            var bbx = this.get(BBX),","                cns = this._classNames;","            bbx.replaceClass(cns[EXPANDED],cns[EXPANDING]);","            this.getStdModNode(BODY).hide(true,{},function() {","                bbx.replaceClass(cns[EXPANDING],cns[COLLAPSED]);","            });","            this.set(EXPANDED,false,{src:UI});","        },","        /**","         * Toggles this panel from expanded to collapsed","         * @method toggle","         */","        toggle: function () {","            this.set(EXPANDED, !this.get(EXPANDED));","        },","","        /**","         * Responds to clicks in the header of this panel to toggle it","         * @method _afterHEADERClick","         * @param ev {EventFacade} uses target to make sure it is the","         * header of this accordion and not that of a nested one","         * @private","         */","        _afterHEADERClick: function (ev) {","            if (ev.target === this.getStdModNode(HEADER)) {","                this.toggle();","            }","        },","","        /**","         * Convenience method to close this panel.","         * Called when the close icon, if present, is clicked.","         * It fires the <code>panelClose</code> event to signal","         * the container for it to remove the panel","         * from the accordion.","         * @method close","         */","         /**","          * Fired by the panel to signal the accordion to remove this panel.","          * Closure of the panel can be prevented by listening and halting this event.","          * @event panelClose","          */","        close: function () {","            this.fire(PANEL_CLOSE);","        }","    },","    {","        /**","         * Defines the class names used by MakeNode, later stored in this._classNames.","         * @property _CLASS_NAMES","         * @static","         * @protected","         */","        _CLASS_NAMES: [EXPANDED, COLLAPSED, BODY, ICON, LABEL, STATUS, CLOSE, EXPANDING, COLLAPSING],","        /**","         * Defines the template used by MakeNode to build the container for the body","         * @property _TEMPLATE","         * @static","         * @protected","         */","        _TEMPLATE: '<div class=\"{c body}\"></div>',","        /**","         * Defines the template used by MakeNode to build the container for the header","         * @property _HEADER_TEMPLATE","         * @static","         * @protected","         */","         _HEADER_TEMPLATE: '<div class=\"{c icon}\"></div><a href=\"#\" class=\"{c label}\"></a>' +","             '<div class=\"{c status}\"></div><div class=\"{c close}\"></div>',","        /**","         * Defines the UI events to be attached through MakeNode,","         * specifically, click on the headers","         * @property _EVENTS","         * @static","         * @protected","         */","        _EVENTS: {","            // this HEADER is not a constant called HEADER but the string \"HEADER\"","            HEADER: 'click',","            close: {","                type: 'click',","                fn: 'close'","            }","        },","        /**","         * Defines the attributes that MakeNode should link to _uiSetXxxx methods to reflect them in the UI.","         * @property _ATTRS_2_UI","         * @static","         * @protected","         */","        _ATTRS_2_UI: {","            BIND: [LABEL, CONTENT, EXPANDED, RESIZEABLE, CLOSEABLE],","            SYNC: [LABEL, CONTENT, EXPANDED, RESIZEABLE, CLOSEABLE]","        },","        ATTRS: {","            /**","             * State of this panel","             * @attribute expanded","             * @type Boolean","             * @default false (collapsed)","             */","            expanded: {","                value:false,","                validator: Lang.isBoolean","            },","            /**","             * Text to be shown in the header of this accordion panel","             * @attribute label","             * @type String","             */","            label: {","                value:'',","                validator: Lang.isString","            },","            /**","             * Content to be shown in the body of this accordion panel","             * @attribute content","             * @type String or Node instance","             */","            content: {","                value:''","            },","            /**","             * Allows panels to be resized.","             * Requires the optional resize-plugin module to be loaded.","             * @attribute resizeable","             * @type Boolean","             * @default true","             */","            resizeable: {","                value: true,","                validator: Lang.isBoolean","            },","            /**","             * Allows panels to be closed via an icon in the header.","             * It shows or hides the close icon.","             * Panels can be closedvia programming at any time, regardless of this attribute.","             * @attribute closeable","             * @type Boolean","             * @default true","             */","            closeable: {","                value: true,","                validator: Lang.isBoolean","            }","        }","","    }",");","","/**"," * A collection of vertically aligned collapsible panels"," * @class Accordion"," * @extends Widget"," * @uses WidgetParent, MakeNode"," */","Y.Accordion = Y.Base.create(","    'accordion',","    Y.Widget,","    [Y.WidgetParent, Y.MakeNode],","    {","        /**","         * Event listener for child expansion/collapse, ensures that only one is expanded","         * at a time if multiExpand is not set.","         * @method _afterThisAccordionPanel:expandedChange","         * @param ev {EventFacade}","         * @private","         */","        '_afterThisAccordionPanel:expandedChange': function (ev) {","            var child = ev.target;","            if (ev.newVal  && !this.get(MULTI_EXPAND)) {","                this.each(function (panel) {","                    if (panel !== child && panel.get(EXPANDED)) {","                        panel.collapse();","                    }","                });","            }","        },","        /**","         * Listens to the <code>panelClose</code> and destroys the panel","         * and removes it from the collection of panels.","         * @method _afterThisAccordionPanel:panelClose","         * @param ev {EventFacade} uses ev.target to locate the panel requesting the close","         * @private","         */","","        '_afterThisAccordionPanel:panelClose': function (ev) {","            var panel = ev.target;","            if (this.indexOf(panel) >= 0) {","                this.remove(panel);","                panel.destroy();","            }","        },","        /**","         * Sets the resizeable attribute of all panels to the value set for the whole accordion","         * @method _uiSetResizeable","         * @param value {Boolean} new value of the resizeable attribute","         * @private","         */","        _uiSetResizeable: function (value) {","            this.each(function (panel) {","                panel.set(RESIZEABLE, value);","            });","        },","        /**","         * Sets the closeable attribute of all panels to the value set for the whole accordion","         * @method _uiSetCloseable","         * @param value {Boolean} new value of the closeable attribute","         * @private","         */","        _uiSetCloseable: function (value) {","            this.each(function (panel) {","                panel.set(CLOSEABLE, value);","            });","        }","    },","    {","        /**","         * Defines the attributes that MakeNode should link to _uiSetXxxx methods to reflect them in the UI.","         * @property _ATTRS_2_UI","         * @static","         * @protected","         */","        _ATTRS_2_UI: {","            BIND: [RESIZEABLE, CLOSEABLE],","            SYNC: [RESIZEABLE, CLOSEABLE]","        },","        /**","         * Defines events that are to be associated to listeners by MakeNode.","         * Here it links a couple of events from the items,","         * expandedChange to ensure only one panel is open at a time and","         * panelClose to destroy and remove a panel","         * @property _EVENTS","         * @type Object","         * @static","         * @protected","         */","        _EVENTS: {","            THIS: [","                'accordionPanel:expandedChange',","                'accordionPanel:panelClose'","            ]","        },","","        ATTRS: {","            /**","             * Default type of children to create.  Used by WidgetParent.","             * @attribute defaultChildType","             * @type WidgetChild","             * @default AccordionPanel","             * @protected","             */","            defaultChildType: {","                value: 'AccordionPanel'","            },","            /**","             * Whether several panels may be expanded at once.","             * @attribute multiExpand","             * @type Boolean","             * @default true","             */","            multiExpand: {","                value:true,","                validator: Lang.isBoolean","            },","            /**","             * Helper attribute to set all panels resizeable attribute at once.","             * May be overriden in each panel separately.","             * Requires the optional resize-plugin module to be loaded.","             * @attribute resizeable","             * @type Boolean","             * @default true","             */","            resizeable: {","                value: true,","                validator: Lang.isBoolean","            },","                            /**","             * Helper attribute to set all panels closeable attribute at once.","             * May be overriden in each panel separately.","             * @attribute closeable","             * @type Boolean","             * @default true","             */","            closeable: {","                value: true,","                validator: Lang.isBoolean","            }","","        }","    }",");","","","","}, 'gallery-2013.01.23-21-59', {","    \"requires\": [","        \"widget\",","        \"widget-parent\",","        \"widget-child\",","        \"widget-stdmod\",","        \"gallery-makenode\"","    ],","    \"optional\": [","        \"resize-plugin\",","        \"transition\"","    ],","    \"skinnable\": true","});","","}());"]};
}
var __cov_RCugP$W6baEmCRHdQoc$6Q = __coverage__['build/gallery-md-accordion/gallery-md-accordion.js'];
__cov_RCugP$W6baEmCRHdQoc$6Q.s['1']++;YUI.add('gallery-md-accordion',function(Y,NAME){__cov_RCugP$W6baEmCRHdQoc$6Q.f['1']++;__cov_RCugP$W6baEmCRHdQoc$6Q.s['2']++;'use strict';__cov_RCugP$W6baEmCRHdQoc$6Q.s['3']++;var Lang=Y.Lang,BBX='boundingBox',BODY=Y.WidgetStdMod.BODY,HEADER=Y.WidgetStdMod.HEADER,EXPANDED='expanded',EXPANDING='expanding',COLLAPSED='collapsed',COLLAPSING='collapsing',LABEL='label',CONTENT='content',ICON='icon',STATUS='status',CLOSE='close',PANEL_CLOSE='panelClose',MULTI_EXPAND='multiExpand',RESIZEABLE='resizeable',CLOSEABLE='closeable',UI='ui';__cov_RCugP$W6baEmCRHdQoc$6Q.s['4']++;Y.AccordionPanel=Y.Base.create('accordionPanel',Y.Widget,[Y.WidgetChild,Y.WidgetStdMod,Y.MakeNode],{CONTENT_TEMPLATE:null,_syncUIStdMod:function(){__cov_RCugP$W6baEmCRHdQoc$6Q.f['2']++;},renderUI:function(){__cov_RCugP$W6baEmCRHdQoc$6Q.f['3']++;__cov_RCugP$W6baEmCRHdQoc$6Q.s['5']++;this.setStdModContent(BODY,this._makeNode());__cov_RCugP$W6baEmCRHdQoc$6Q.s['6']++;this.setStdModContent(HEADER,this._makeNode(Y.AccordionPanel._HEADER_TEMPLATE));__cov_RCugP$W6baEmCRHdQoc$6Q.s['7']++;this._locateNodes();},_uiSetExpanded:function(value,src){__cov_RCugP$W6baEmCRHdQoc$6Q.f['4']++;__cov_RCugP$W6baEmCRHdQoc$6Q.s['8']++;if(src===UI){__cov_RCugP$W6baEmCRHdQoc$6Q.b['1'][0]++;__cov_RCugP$W6baEmCRHdQoc$6Q.s['9']++;return;}else{__cov_RCugP$W6baEmCRHdQoc$6Q.b['1'][1]++;}__cov_RCugP$W6baEmCRHdQoc$6Q.s['10']++;if(value){__cov_RCugP$W6baEmCRHdQoc$6Q.b['2'][0]++;__cov_RCugP$W6baEmCRHdQoc$6Q.s['11']++;this.expand();}else{__cov_RCugP$W6baEmCRHdQoc$6Q.b['2'][1]++;__cov_RCugP$W6baEmCRHdQoc$6Q.s['12']++;this.collapse();}},_uiSetLabel:function(value){__cov_RCugP$W6baEmCRHdQoc$6Q.f['5']++;__cov_RCugP$W6baEmCRHdQoc$6Q.s['13']++;this._labelNode.setContent(value);},_uiSetContent:function(value){__cov_RCugP$W6baEmCRHdQoc$6Q.f['6']++;__cov_RCugP$W6baEmCRHdQoc$6Q.s['14']++;this._bodyNode.setContent(value);},_uiSetResizeable:function(value){__cov_RCugP$W6baEmCRHdQoc$6Q.f['7']++;__cov_RCugP$W6baEmCRHdQoc$6Q.s['15']++;var body=this.getStdModNode(BODY);__cov_RCugP$W6baEmCRHdQoc$6Q.s['16']++;if(Y.Plugin.Resize){__cov_RCugP$W6baEmCRHdQoc$6Q.b['3'][0]++;__cov_RCugP$W6baEmCRHdQoc$6Q.s['17']++;if(value){__cov_RCugP$W6baEmCRHdQoc$6Q.b['4'][0]++;__cov_RCugP$W6baEmCRHdQoc$6Q.s['18']++;body.plug(Y.Plugin.Resize,{handles:['b']});}else{__cov_RCugP$W6baEmCRHdQoc$6Q.b['4'][1]++;__cov_RCugP$W6baEmCRHdQoc$6Q.s['19']++;body.unplug(Y.Plugin.Resize);}}else{__cov_RCugP$W6baEmCRHdQoc$6Q.b['3'][1]++;}},_uiSetCloseable:function(value){__cov_RCugP$W6baEmCRHdQoc$6Q.f['8']++;__cov_RCugP$W6baEmCRHdQoc$6Q.s['20']++;if(value){__cov_RCugP$W6baEmCRHdQoc$6Q.b['5'][0]++;__cov_RCugP$W6baEmCRHdQoc$6Q.s['21']++;this._closeNode.show();}else{__cov_RCugP$W6baEmCRHdQoc$6Q.b['5'][1]++;__cov_RCugP$W6baEmCRHdQoc$6Q.s['22']++;this._closeNode.hide();}},expand:function(){__cov_RCugP$W6baEmCRHdQoc$6Q.f['9']++;__cov_RCugP$W6baEmCRHdQoc$6Q.s['23']++;var bbx=this.get(BBX),cns=this._classNames;__cov_RCugP$W6baEmCRHdQoc$6Q.s['24']++;bbx.replaceClass(cns[COLLAPSED],cns[EXPANDING]);__cov_RCugP$W6baEmCRHdQoc$6Q.s['25']++;this.getStdModNode(BODY).show(true,{},function(){__cov_RCugP$W6baEmCRHdQoc$6Q.f['10']++;__cov_RCugP$W6baEmCRHdQoc$6Q.s['26']++;bbx.replaceClass(cns[EXPANDING],cns[EXPANDED]);});__cov_RCugP$W6baEmCRHdQoc$6Q.s['27']++;this.set(EXPANDED,true,{src:UI});},collapse:function(){__cov_RCugP$W6baEmCRHdQoc$6Q.f['11']++;__cov_RCugP$W6baEmCRHdQoc$6Q.s['28']++;var bbx=this.get(BBX),cns=this._classNames;__cov_RCugP$W6baEmCRHdQoc$6Q.s['29']++;bbx.replaceClass(cns[EXPANDED],cns[EXPANDING]);__cov_RCugP$W6baEmCRHdQoc$6Q.s['30']++;this.getStdModNode(BODY).hide(true,{},function(){__cov_RCugP$W6baEmCRHdQoc$6Q.f['12']++;__cov_RCugP$W6baEmCRHdQoc$6Q.s['31']++;bbx.replaceClass(cns[EXPANDING],cns[COLLAPSED]);});__cov_RCugP$W6baEmCRHdQoc$6Q.s['32']++;this.set(EXPANDED,false,{src:UI});},toggle:function(){__cov_RCugP$W6baEmCRHdQoc$6Q.f['13']++;__cov_RCugP$W6baEmCRHdQoc$6Q.s['33']++;this.set(EXPANDED,!this.get(EXPANDED));},_afterHEADERClick:function(ev){__cov_RCugP$W6baEmCRHdQoc$6Q.f['14']++;__cov_RCugP$W6baEmCRHdQoc$6Q.s['34']++;if(ev.target===this.getStdModNode(HEADER)){__cov_RCugP$W6baEmCRHdQoc$6Q.b['6'][0]++;__cov_RCugP$W6baEmCRHdQoc$6Q.s['35']++;this.toggle();}else{__cov_RCugP$W6baEmCRHdQoc$6Q.b['6'][1]++;}},close:function(){__cov_RCugP$W6baEmCRHdQoc$6Q.f['15']++;__cov_RCugP$W6baEmCRHdQoc$6Q.s['36']++;this.fire(PANEL_CLOSE);}},{_CLASS_NAMES:[EXPANDED,COLLAPSED,BODY,ICON,LABEL,STATUS,CLOSE,EXPANDING,COLLAPSING],_TEMPLATE:'<div class="{c body}"></div>',_HEADER_TEMPLATE:'<div class="{c icon}"></div><a href="#" class="{c label}"></a>'+'<div class="{c status}"></div><div class="{c close}"></div>',_EVENTS:{HEADER:'click',close:{type:'click',fn:'close'}},_ATTRS_2_UI:{BIND:[LABEL,CONTENT,EXPANDED,RESIZEABLE,CLOSEABLE],SYNC:[LABEL,CONTENT,EXPANDED,RESIZEABLE,CLOSEABLE]},ATTRS:{expanded:{value:false,validator:Lang.isBoolean},label:{value:'',validator:Lang.isString},content:{value:''},resizeable:{value:true,validator:Lang.isBoolean},closeable:{value:true,validator:Lang.isBoolean}}});__cov_RCugP$W6baEmCRHdQoc$6Q.s['37']++;Y.Accordion=Y.Base.create('accordion',Y.Widget,[Y.WidgetParent,Y.MakeNode],{'_afterThisAccordionPanel:expandedChange':function(ev){__cov_RCugP$W6baEmCRHdQoc$6Q.f['16']++;__cov_RCugP$W6baEmCRHdQoc$6Q.s['38']++;var child=ev.target;__cov_RCugP$W6baEmCRHdQoc$6Q.s['39']++;if((__cov_RCugP$W6baEmCRHdQoc$6Q.b['8'][0]++,ev.newVal)&&(__cov_RCugP$W6baEmCRHdQoc$6Q.b['8'][1]++,!this.get(MULTI_EXPAND))){__cov_RCugP$W6baEmCRHdQoc$6Q.b['7'][0]++;__cov_RCugP$W6baEmCRHdQoc$6Q.s['40']++;this.each(function(panel){__cov_RCugP$W6baEmCRHdQoc$6Q.f['17']++;__cov_RCugP$W6baEmCRHdQoc$6Q.s['41']++;if((__cov_RCugP$W6baEmCRHdQoc$6Q.b['10'][0]++,panel!==child)&&(__cov_RCugP$W6baEmCRHdQoc$6Q.b['10'][1]++,panel.get(EXPANDED))){__cov_RCugP$W6baEmCRHdQoc$6Q.b['9'][0]++;__cov_RCugP$W6baEmCRHdQoc$6Q.s['42']++;panel.collapse();}else{__cov_RCugP$W6baEmCRHdQoc$6Q.b['9'][1]++;}});}else{__cov_RCugP$W6baEmCRHdQoc$6Q.b['7'][1]++;}},'_afterThisAccordionPanel:panelClose':function(ev){__cov_RCugP$W6baEmCRHdQoc$6Q.f['18']++;__cov_RCugP$W6baEmCRHdQoc$6Q.s['43']++;var panel=ev.target;__cov_RCugP$W6baEmCRHdQoc$6Q.s['44']++;if(this.indexOf(panel)>=0){__cov_RCugP$W6baEmCRHdQoc$6Q.b['11'][0]++;__cov_RCugP$W6baEmCRHdQoc$6Q.s['45']++;this.remove(panel);__cov_RCugP$W6baEmCRHdQoc$6Q.s['46']++;panel.destroy();}else{__cov_RCugP$W6baEmCRHdQoc$6Q.b['11'][1]++;}},_uiSetResizeable:function(value){__cov_RCugP$W6baEmCRHdQoc$6Q.f['19']++;__cov_RCugP$W6baEmCRHdQoc$6Q.s['47']++;this.each(function(panel){__cov_RCugP$W6baEmCRHdQoc$6Q.f['20']++;__cov_RCugP$W6baEmCRHdQoc$6Q.s['48']++;panel.set(RESIZEABLE,value);});},_uiSetCloseable:function(value){__cov_RCugP$W6baEmCRHdQoc$6Q.f['21']++;__cov_RCugP$W6baEmCRHdQoc$6Q.s['49']++;this.each(function(panel){__cov_RCugP$W6baEmCRHdQoc$6Q.f['22']++;__cov_RCugP$W6baEmCRHdQoc$6Q.s['50']++;panel.set(CLOSEABLE,value);});}},{_ATTRS_2_UI:{BIND:[RESIZEABLE,CLOSEABLE],SYNC:[RESIZEABLE,CLOSEABLE]},_EVENTS:{THIS:['accordionPanel:expandedChange','accordionPanel:panelClose']},ATTRS:{defaultChildType:{value:'AccordionPanel'},multiExpand:{value:true,validator:Lang.isBoolean},resizeable:{value:true,validator:Lang.isBoolean},closeable:{value:true,validator:Lang.isBoolean}}});},'gallery-2013.01.23-21-59',{'requires':['widget','widget-parent','widget-child','widget-stdmod','gallery-makenode'],'optional':['resize-plugin','transition'],'skinnable':true});
